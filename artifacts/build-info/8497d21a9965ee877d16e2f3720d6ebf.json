{"id":"8497d21a9965ee877d16e2f3720d6ebf","_format":"hh-sol-build-info-1","solcVersion":"0.8.12","solcLongVersion":"0.8.12+commit.f00d7308","input":{"language":"Solidity","sources":{"contracts/KRBTokenV01.sol":{"content":"/// SPDX-License-Identifier: MIT\n/// @title KRB Token Protocol v 0.1 - http://krebit.id\n/// @author Krebit Inc. <contact@krebit.co>\n\npragma solidity ^0.8.0;\n\n/// @dev OpenZeppelin Upgradeable Contracts v4.4.1\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\n\nimport \"./VCTypesV01.sol\";\n\n/**\n * @notice {ERC20} token with OpenZeppelin Extensions:\n *\n * - Initializable,\n * - ERC2771ContextUpgradeable,\n * - UUPSUpgradeable\n * - AccessControlEnumerableUpgradeable,\n * - ERC20BurnableUpgradeable,\n * - ERC20PausableUpgradeable,\n * - EIP712Upgradeable,\n * - PullPaymentUpgradeable,\n * - ReentrancyGuardUpgradeable\n *\n * This contract uses {AccessControlEnumerable} to lock permissioned functions using the\n * different roles:\n *\n * The account that deploys the contract will be granted the govern role,\n * as well as the default admin role, which will let it grant govern roles\n * to other accounts.\n */\ncontract KRBTokenV01 is\n    Initializable,\n    ContextUpgradeable,\n    AccessControlEnumerableUpgradeable,\n    ERC20BurnableUpgradeable,\n    ERC20PausableUpgradeable,\n    EIP712Upgradeable,\n    UUPSUpgradeable,\n    PullPaymentUpgradeable,\n    ReentrancyGuardUpgradeable\n{\n    using SafeMathUpgradeable for uint256;\n\n    bytes32 public constant GOVERN_ROLE = keccak256(\"GOVERN_ROLE\");\n\n    /**\n     * @notice ERC2771\n     */\n    address public trustedForwarder;\n\n    /**\n     * @notice Min Balance to Transfer\n     */\n    uint256 public minBalanceToTransfer;\n    /**\n     * @notice  Min Balance to Receive\n     */\n    uint256 public minBalanceToReceive;\n    /**\n     * @notice Min Balance to Issue Verifiable Credentials\n     */\n    uint256 public minBalanceToIssue;\n    /**\n     * @notice  Min Value to Issue Verifiable Credentials\n     */\n    uint256 public minPriceToIssue;\n    /**\n     * @notice  Max Value to Issue Verifiable Credentials\n     */\n    uint256 public maxPriceToIssue;\n    /**\n     * @notice  Min Stake to Issue Verifiable Credentials\n     */\n    uint256 public minStakeToIssue;\n    /**\n     * @notice  Max Stake to Issue Verifiable Credentials\n     */\n    uint256 public maxStakeToIssue;\n    /**\n     * @notice  Fee to Issue Verifiable Credentials\n     */\n    uint256 public feePercentage;\n    /**\n     * @notice Total fees collected by the contract\n     */\n    uint256 public feesAvailableForWithdraw; //wei\n\n    /**\n     * @dev For config updates\n     */\n    event Updated();\n\n    //// @dev https://www.w3.org/TR/vc-data-model/#status\n    enum Status {\n        None,\n        Issued,\n        Disputed,\n        Revoked,\n        Suspended,\n        Expired\n    }\n    struct VerifiableData {\n        Status credentialStatus;\n        uint256 disputedBy;\n    }\n\n    /// @dev Mapping of rewarded VCTypesV01.VerifiableCredentials. Key is a hash of the vc data\n    mapping(uint256 => VerifiableData) public registry;\n\n    /**\n     * @dev The stakes for each Issuer.\n     */\n    mapping(address => uint256) internal stakes;\n\n    event Issued(uint256 uuid, VCTypesV01.VerifiableCredential vc);\n    event Disputed(uint256 uuid, uint256 disputedBy);\n    event Revoked(uint256 uuid, string reason);\n    event Suspended(uint256 uuid, string reason);\n    event Expired(uint256 uuid);\n    event Deleted(uint256 uuid, string reason);\n\n    event Staked(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Throws if the sender is not the Govern.\n     */\n    function _checkGovern() internal view virtual {\n        require(\n            hasRole(GOVERN_ROLE, _msgSender()),\n            \"KRBToken: must have govern role\"\n        );\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyGovern() {\n        _checkGovern();\n        _;\n    }\n\n    function initialize(\n        string memory name,\n        string memory symbol,\n        string memory version\n    ) public virtual initializer {\n        __KRBTokenV01_init(name, symbol, version);\n    }\n\n    /**\n     * @notice Initializes the contract.\n     *\n     * See {ERC20-constructor}.\n     */\n    function __KRBTokenV01_init(\n        string memory name,\n        string memory symbol,\n        string memory version\n    ) internal onlyInitializing {\n        __Context_init_unchained();\n        __ERC165_init_unchained();\n        __AccessControl_init_unchained();\n        __AccessControlEnumerable_init_unchained();\n        __ERC20_init_unchained(name, symbol);\n        __ERC20Burnable_init_unchained();\n        __Pausable_init_unchained();\n        __ERC20Pausable_init_unchained();\n        __EIP712_init_unchained(name, version); //version\n        __PullPayment_init_unchained();\n        __ReentrancyGuard_init_unchained();\n        __KRBTokenV01_init_unchained(name, symbol, version);\n    }\n\n    /**\n    \n    * @notice Grants `DEFAULT_ADMIN_ROLE` and `GOVERN_ROLE` to the\n     * account that deploys the contract.\n     *\n     * - minBalanceToTransfer : 100 KRB\n     * - minBalanceToReceive : 100 KRB\n     * - feePercentage : 10 %\n     * - minBalanceToIssue : 100 KRB\n     * - minPriceToIssue : 0.00001 ETH\n     * - maxPriceToIssue : 0.0001 ETH\n     * - minStakeToIssue : 1 KRB\n     * - maxStakeToIssue : 10 KRB\n     */\n\n    function __KRBTokenV01_init_unchained(\n        string memory,\n        string memory,\n        string memory\n    ) internal onlyInitializing {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _setupRole(GOVERN_ROLE, _msgSender());\n\n        minBalanceToTransfer = 100 * 10**decimals(); /// @dev 100 KRB\n        minBalanceToReceive = 100 * 10**decimals(); /// @dev 100 KRB\n\n        feePercentage = 10; /// @dev 10 %\n\n        minBalanceToIssue = 100 * 10**decimals(); /// @dev 100 KRB\n\n        minPriceToIssue = 0;\n        maxPriceToIssue = 1000 * 10**18;\n\n        minStakeToIssue = 1 * 10**decimals(); /// @dev 1 KRB\n        maxStakeToIssue = 10 * 10**decimals(); /// @dev 10 KRB\n    }\n\n    /**\n     * @notice Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * See {UUPSUpgradeable-_authorizeUpgrade}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `GOVERN_ROLE`.\n     */\n    function _authorizeUpgrade(address) internal view override {\n        _checkGovern();\n    }\n\n    /**\n     * @notice ERC2771 Meta-Transactions support.\n     */\n    function isTrustedForwarder(address forwarder)\n        public\n        view\n        virtual\n        returns (bool)\n    {\n        return forwarder == trustedForwarder;\n    }\n\n    /**\n     * @notice ERC2771 Meta-Transactions support.\n     */\n    function _msgSender()\n        internal\n        view\n        virtual\n        override(ContextUpgradeable)\n        returns (address sender)\n    {\n        if (isTrustedForwarder(msg.sender)) {\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\n            /// @solidity memory-safe-assembly\n            assembly {\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\n            }\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @notice ERC2771 Meta-Transactions support.\n     */\n    function _msgData()\n        internal\n        view\n        virtual\n        override(ContextUpgradeable)\n        returns (bytes calldata)\n    {\n        if (isTrustedForwarder(msg.sender)) {\n            return msg.data[:msg.data.length - 20];\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @notice Updates all Protocol Parameters\n     * @param newMinBalanceToTransfer The new min baance to Transfer.\n     * @param newMinBalanceToReceive The new min balance to Receive.\n     * @param newMinBalanceToIssue New min Balance to Issue\n     * @param newFeePercentage new protocol fee percentage (0 -100)\n     * @param newMinPrice New min price to Issue\n     * @param newMaxPrice New max price to Issue\n     * @param newMinStake new min stake to issue\n     * @param newTrustedForwarder new trustedForwarder\n     *\n     * - emits Updated()\n     *\n     * Requirements:\n     *\n     * - the caller must have the `GOVERN_ROLE`.\n     * - newMaxStake > newMinStake\n     */\n    function updateParameters(\n        uint256 newMinBalanceToTransfer,\n        uint256 newMinBalanceToReceive,\n        uint256 newMinBalanceToIssue,\n        uint256 newFeePercentage,\n        uint256 newMinPrice,\n        uint256 newMaxPrice,\n        uint256 newMinStake,\n        uint256 newMaxStake,\n        address newTrustedForwarder\n    ) public onlyGovern {\n        minBalanceToTransfer = newMinBalanceToTransfer;\n        minBalanceToReceive = newMinBalanceToReceive;\n        minBalanceToIssue = newMinBalanceToIssue;\n\n        require(\n            newFeePercentage >= 0 || newFeePercentage <= 100,\n            \"KRBToken: bad percentage value\"\n        );\n        feePercentage = newFeePercentage;\n        require(\n            newMaxPrice >= newMinPrice,\n            \"KRBToken: newMaxPrice must be greater or equal than newMinPrice\"\n        );\n        minPriceToIssue = newMinPrice;\n        maxPriceToIssue = newMaxPrice;\n\n        require(\n            newMaxStake >= newMinStake,\n            \"KRBToken: newMaxStake must be greater or equal than newMinStake\"\n        );\n        minStakeToIssue = newMinStake;\n        maxStakeToIssue = newMaxStake;\n\n        trustedForwarder = newTrustedForwarder;\n\n        emit Updated();\n    }\n\n    /**\n     * @dev Checks min balances before Issue / Mint / Transfer.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `GOVERN_ROLE`.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override(ERC20Upgradeable, ERC20PausableUpgradeable) {\n        super._beforeTokenTransfer(from, to, amount);\n        //Check minimum balance\n        require(\n            hasRole(GOVERN_ROLE, _msgSender()) ||\n                from == address(0) ||\n                to == address(0) ||\n                balanceOf(from) >= minBalanceToTransfer,\n            \"KRBToken: sender does not have enough balance\"\n        );\n        require(\n            hasRole(GOVERN_ROLE, _msgSender()) ||\n                from == address(0) ||\n                to == address(0) ||\n                balanceOf(to) >= minBalanceToReceive,\n            \"KRBToken: recipient does not have enough balance\"\n        );\n    }\n\n    /**\n     * @dev Destroys `_stake` token stake from `issuer`\n     */\n    function _burnStake(address _issuer, uint256 _stake) internal virtual {\n        require(\n            _issuer != address(0),\n            \"KRBToken: burn stake from the zero address\"\n        );\n\n        //remove Issuer stake\n        if (stakes[_issuer] >= _stake) {\n            stakes[_issuer] = stakes[_issuer].sub(_stake);\n            emit Staked(_issuer, address(0), _stake);\n        }\n    }\n\n    /**\n     *\n     * @notice Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `GOVERN_ROLE`.\n     */\n    function mint(address to, uint256 amount) public virtual onlyGovern {\n        _mint(to, amount);\n    }\n\n    /**\n     * @notice Destroys `_stake` token stake from `issuer`\n     * @param issuer The issuer address\n     * @param stake The KRB stake to burn\n     *\n     * - emits Updated(\"minBalanceToReceive\")\n     *\n     * Requirements:\n     * - the caller must have the `GOVERN_ROLE`.\n     */\n    function burnStake(address issuer, uint256 stake)\n        public\n        virtual\n        onlyGovern\n    {\n        _burnStake(issuer, stake);\n    }\n\n    /**\n     * @notice Pauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `GOVERN_ROLE`.\n     */\n    function pause() public virtual onlyGovern {\n        _pause();\n    }\n\n    /**\n     * @notice Unpauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `GOVERN_ROLE`.\n     */\n    function unpause() public virtual onlyGovern {\n        _unpause();\n    }\n\n    /**\n     * @notice A method to retrieve the stake for an issuer.\n     * @param issuer The issuer to retrieve the stake for.\n     * @return stake The amount of KRB staked.\n     */\n    function stakeOf(address issuer) public view returns (uint256) {\n        return stakes[issuer];\n    }\n\n    /**\n     * @notice Returns the domain separator for the current chain.\n     *\n     * See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    /// @dev solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev Checks if the provided address signed a hashed message (`hash`) with\n     * `signature`.\n     *\n     * See  {EIP-712} and {EIP-3009}.\n     *\n     */\n    function validateSignedData(\n        address signer,\n        bytes32 structHash,\n        bytes memory signature\n    ) public view {\n        bytes32 digest = _hashTypedDataV4(structHash);\n\n        address recoveredAddress = ECDSAUpgradeable.recover(digest, signature);\n\n        /// @dev Explicitly disallow authorizations for address(0) as ecrecover returns address(0) on malformed messages\n        require(\n            recoveredAddress != address(0),\n            \"KRBToken: invalid signature address(0)\"\n        );\n        require(\n            recoveredAddress == signer,\n            \"KRBToken: recovered address differs from expected signer\"\n        );\n    }\n\n    /**\n     * @notice Validates that the `VerifiableCredential` conforms to the VCTypes.\n     @param vc Verifiable Credential\n\n     *\n     */\n    function getUuid(VCTypesV01.VerifiableCredential memory vc)\n        public\n        pure\n        returns (uint256)\n    {\n        return uint256(VCTypesV01.getVerifiableCredential(vc));\n    }\n\n    /**\n     * @notice Get the status of a Verifiable Credential\n     * @param vc The verifiable Credential\n     *\n     * @return status Verifiable credential Status: None, Issued, Disputed, Revoked, Suspended, Expired\n     *\n     */\n    function getVCStatus(VCTypesV01.VerifiableCredential memory vc)\n        public\n        view\n        returns (string memory)\n    {\n        uint256 uuid = getUuid(vc);\n        Status temp = registry[uuid].credentialStatus;\n        if (temp == Status.None) return \"None\";\n        if (temp == Status.Issued) return \"Issued\";\n        if (temp == Status.Disputed) return \"Disputed\";\n        if (temp == Status.Revoked) return \"Revoked\";\n        if (temp == Status.Suspended) return \"Suspended\";\n        if (temp == Status.Expired) return \"Expired\";\n        return \"Error\";\n    }\n\n    /**\n     * @notice Register a Verifiable Credential\n     * @dev Calculates and distributes the ETH fee as percentage of price\n     * Formula:  fee = price * feePercentage %\n     * @param vc The verifiable Credential\n     * @param proofValue EIP712-VC proofValue\n     *\n     * Requirements:\n     * - proofValue must be the Issuer's signature of the VC\n     * - sender must be the credentialSubject address\n     * - msg.value must be greater than minPriceToIssue\n     *\n     */\n    function registerVC(\n        VCTypesV01.VerifiableCredential memory vc,\n        bytes memory proofValue\n    ) public payable returns (bool) {\n        require(\n            hasRole(GOVERN_ROLE, _msgSender()) ||\n                vc.credentialSubject.ethereumAddress == _msgSender(),\n            \"KRBToken: sender must be the credentialSubject address\"\n        );\n\n        require(\n            msg.value >= minPriceToIssue,\n            \"KRBToken: msg.value must be greater than minPriceToIssue\"\n        );\n        require(\n            msg.value <= maxPriceToIssue,\n            \"KRBToken: msg.value must be less than maxPriceToIssue\"\n        );\n        require(\n            vc.credentialSubject.price == msg.value,\n            \"KRBToken: msg.value does not match credentialSubject.price\"\n        );\n\n        uint256 uuid = getUuid(vc);\n\n        validateSignedData(\n            vc.issuer.ethereumAddress,\n            VCTypesV01.getVerifiableCredential(vc),\n            proofValue\n        );\n\n        VCTypesV01.validateVC(vc);\n\n        require(\n            registry[uuid].credentialStatus == Status.None,\n            \"KRBToken: Verifiable Credential hash already been issued\"\n        );\n        require(\n            balanceOf(vc.issuer.ethereumAddress) >= minBalanceToIssue,\n            \"KRBToken: issuer does not have enough balance\"\n        );\n\n        uint256 _stake = vc.credentialSubject.stake * 10**decimals();\n        require(\n            _stake >= minStakeToIssue && _stake <= maxStakeToIssue,\n            \"KRBToken: stake must be between minStakeToIssue and maxStakeToIssue\"\n        );\n        /// @dev Create the stake for the issuer\n        _burn(vc.issuer.ethereumAddress, _stake);\n        stakes[vc.issuer.ethereumAddress] = stakes[vc.issuer.ethereumAddress]\n            .add(_stake);\n        emit Staked(address(0), vc.issuer.ethereumAddress, _stake);\n        registry[uuid] = VerifiableData(Status.Issued, 0x0);\n        emit Issued(uuid, vc);\n\n        //Mint rewards\n        uint256 _reward = VCTypesV01.getReward(\n            _stake,\n            vc.credentialSubject.trust\n        );\n        _mint(vc.credentialSubject.ethereumAddress, _reward);\n        _mint(vc.issuer.ethereumAddress, _reward);\n\n        //Distributes fees\n        uint256 _fee = SafeMathUpgradeable.div(\n            SafeMathUpgradeable.mul(vc.credentialSubject.price, feePercentage),\n            100\n        );\n        _asyncTransfer(vc.issuer.ethereumAddress, msg.value.sub(_fee));\n        feesAvailableForWithdraw = feesAvailableForWithdraw.add(_fee);\n\n        return true;\n    }\n\n    /**\n     * @notice Delete a Verifiable Credential\n     * @param vc The verifiable Credential\n     * @param reason Reason for deleting\n     *\n     * Requirements:\n     * -  sender must be the credentialSubject address\n     *\n     */\n    function deleteVC(\n        VCTypesV01.VerifiableCredential memory vc,\n        string memory reason\n    ) public returns (bool) {\n        require(\n            hasRole(GOVERN_ROLE, _msgSender()) ||\n                vc.credentialSubject.ethereumAddress == _msgSender(),\n            \"KRBToken: sender must be the credentialSubject address\"\n        );\n\n        uint256 uuid = getUuid(vc);\n\n        require(\n            registry[uuid].credentialStatus == Status.Issued,\n            \"KRBToken: state is not Issued\"\n        );\n\n        registry[uuid].credentialStatus = Status.None;\n        emit Deleted(uuid, reason);\n\n        uint256 _stake = vc.credentialSubject.stake * 10**decimals();\n        uint256 _reward = VCTypesV01.getReward(\n            _stake,\n            vc.credentialSubject.trust\n        );\n\n        //remove Issuer stake\n        _burnStake(vc.issuer.ethereumAddress, _stake);\n        _mint(vc.issuer.ethereumAddress, _stake);\n\n        //discard rewards\n        _burn(vc.credentialSubject.ethereumAddress, _reward);\n        _burn(vc.issuer.ethereumAddress, _reward);\n\n        return true;\n    }\n\n    /**\n     * @notice Revoke a Verifiable Credential\n     * @param vc The verifiable Credential\n     * @param reason Reason for revoking\n     *\n     * Requirements:\n     * -  sender must be the issuer address\n     *\n     */\n    function revokeVC(\n        VCTypesV01.VerifiableCredential memory vc,\n        string memory reason\n    ) public returns (bool) {\n        require(\n            vc.issuer.ethereumAddress == _msgSender(),\n            \"KRBToken: sender must be the issuer address\"\n        );\n        uint256 uuid = getUuid(vc);\n\n        require(\n            registry[uuid].credentialStatus == Status.Issued,\n            \"KRBToken: state is not Issued\"\n        );\n\n        registry[uuid].credentialStatus = Status.Revoked;\n        emit Revoked(uuid, reason);\n\n        uint256 _stake = vc.credentialSubject.stake * 10**decimals();\n        uint256 _reward = VCTypesV01.getReward(\n            _stake,\n            vc.credentialSubject.trust\n        );\n\n        //remove Issuer stake\n        _burnStake(vc.issuer.ethereumAddress, _stake);\n        _mint(vc.issuer.ethereumAddress, _stake);\n\n        //discard rewards\n        _burn(vc.credentialSubject.ethereumAddress, _reward);\n        _burn(vc.issuer.ethereumAddress, _reward);\n\n        return true;\n    }\n\n    /**\n     * @notice Suspend a Verifiable Credential\n     * @param vc The verifiable Credential\n     * @param reason Reason for suspending\n     *\n     * Requirements:\n     * -  sender must be the issuer address\n     *\n     */\n    function suspendVC(\n        VCTypesV01.VerifiableCredential memory vc,\n        string memory reason\n    ) public returns (bool) {\n        require(\n            vc.issuer.ethereumAddress == _msgSender(),\n            \"KRBToken: sender must be the issuer address\"\n        );\n        uint256 uuid = getUuid(vc);\n        require(\n            registry[uuid].credentialStatus == Status.Issued,\n            \"KRBToken: state is not Issued\"\n        );\n\n        registry[uuid].credentialStatus = Status.Suspended;\n        emit Suspended(uuid, reason);\n\n        uint256 _stake = vc.credentialSubject.stake * 10**decimals();\n        uint256 _reward = VCTypesV01.getReward(\n            _stake,\n            vc.credentialSubject.trust\n        );\n\n        //remove Issuer stake\n        _burnStake(vc.issuer.ethereumAddress, _stake);\n        _mint(vc.issuer.ethereumAddress, _stake);\n\n        //reward from subject is lost\n        _burn(vc.credentialSubject.ethereumAddress, _reward);\n\n        return true;\n    }\n\n    /**\n     * @notice Mark a Verifiable Credential as Expired\n     * @param vc The verifiable Credential\n     *\n     */\n    function expiredVC(VCTypesV01.VerifiableCredential memory vc)\n        external\n        returns (bool)\n    {\n        uint256 uuid = getUuid(vc);\n\n        if (block.timestamp > vc.credentialSubject.exp) {\n            uint256 _stake = vc.credentialSubject.stake * 10**decimals();\n            //remove Issuer stake\n            _burnStake(vc.issuer.ethereumAddress, _stake);\n            _mint(vc.issuer.ethereumAddress, _stake);\n            //rewards remain unless VC is disputed\n            registry[uuid].credentialStatus = Status.Expired;\n            emit Expired(uuid);\n        }\n        return (block.timestamp > vc.credentialSubject.exp);\n    }\n\n    /**\n     * @notice Called by DAO Govern arbitration to resolve a dispute\n     * @param vc The verifiable Credential\n     * @param disputeVC Dispute Credential\n     *\n     * Requirements:\n     * -  sender must be the DAO Govern address\n     *\n     */\n    function disputeVCByGovern(\n        VCTypesV01.VerifiableCredential memory vc,\n        VCTypesV01.VerifiableCredential memory disputeVC\n    ) public onlyGovern returns (bool) {\n        require(\n            keccak256(abi.encode(disputeVC._type)) ==\n                keccak256(\n                    abi.encode('[\"VerifiableCredential\",\"DisputeCredential\"]')\n                ),\n            \"KRBToken: dispute claim type must be DisputeCredential\"\n        );\n        require(\n            disputeVC.issuer.ethereumAddress == _msgSender(),\n            \"KRBToken: issuer must be the Govern address\"\n        );\n        require(\n            keccak256(abi.encode(disputeVC.credentialSubject.id)) ==\n                keccak256(abi.encode(vc.id)),\n            \"KRBToken: disputeVC credentialSubject id differes from VC id\"\n        );\n\n        VCTypesV01.validateVC(disputeVC);\n\n        uint256 uuid = getUuid(vc);\n\n        require(\n            registry[uuid].credentialStatus != Status.None &&\n                registry[uuid].credentialStatus != Status.Disputed,\n            \"KRBToken: VC state already disputed\"\n        );\n\n        uint256 disputeUuid = getUuid(disputeVC);\n        registry[uuid].credentialStatus = Status.Disputed;\n        registry[uuid].disputedBy = disputeUuid;\n        emit Disputed(uuid, disputeUuid);\n\n        registry[disputeUuid].credentialStatus = Status.Issued;\n        emit Issued(disputeUuid, disputeVC);\n\n        uint256 _stake = vc.credentialSubject.stake * 10**decimals();\n        //Slash stake from Issuer\n        _burnStake(vc.issuer.ethereumAddress, _stake);\n\n        //Revert rewards from issuer and credentialSubject\n        uint256 _reward = VCTypesV01.getReward(\n            _stake,\n            vc.credentialSubject.trust\n        );\n        _burn(vc.credentialSubject.ethereumAddress, _reward);\n        _burn(vc.issuer.ethereumAddress, _reward);\n\n        /// @dev Reward disputer\n        uint256 _disputeStake = disputeVC.credentialSubject.stake *\n            10**decimals();\n        uint256 _disputeReward = VCTypesV01.getReward(\n            _disputeStake,\n            disputeVC.credentialSubject.trust\n        );\n        _mint(disputeVC.credentialSubject.ethereumAddress, _disputeReward);\n\n        return true;\n    }\n\n    /**\n     * @notice Withdraw fees collected by the contract.\n     * Requirements:\n     * - Only the DAO govern can call this.\n     */\n    function withdrawFees(address payable _to, uint256 _amount)\n        external\n        nonReentrant\n        onlyGovern\n    {\n        require(_amount <= feesAvailableForWithdraw); /// @dev Also prevents underflow\n        feesAvailableForWithdraw = feesAvailableForWithdraw.sub(_amount);\n        _asyncTransfer(_to, _amount);\n    }\n\n    uint256[50] private __gap;\n}\n"},"contracts/VCTypesV01.sol":{"content":"/*\n// SPDX-License-Identifier: MIT\n@author Krebit Inc. http://krebit.co\n\nImplements: W3C verifiable Credentials\nhttps://www.w3.org/TR/vc-data-model\n*/\n\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\n\npragma solidity ^0.8.0;\n\nlibrary VCTypesV01 {\n    // bytes32 private constant ISSUER_TYPEHASH = keccak256(\"Issuer(string id,address ethereumAddress)\")\n    bytes32 private constant ISSUER_TYPEHASH =\n        0xabb691e6e52ceb1ff8b3df91dc14323057e88efa3252486ed994fd62706cdfaa;\n    // bytes32 private constant SIGNATURE_TYPEHASH = keccak256(\"Signature(uint8 v,bytes32 r,bytes32 s)\")\n    bytes32 private constant SIGNATURE_TYPEHASH =\n        0xcea59b5eccb60256d918b7a2e778f6161148c37e6dada57c32e20db10c50b631;\n    // bytes32 private constant VERIFIABLE_CREDENTIAL_TYPEHASH = keccak256(\"VerifiableCredential(string _context,string _type,string id,Issuer issuer,CredentialSubject credentialSubject,CredentialSchema credentialSchema,string issuanceDate,string expirationDate)CredentialSchema(string id,string _type)CredentialSubject(string id,address ethereumAddress,string _type,string typeSchema,string value,string encrypted,uint8 trust,uint256 stake,uint256 price,uint256 nbf,uint256 exp)Issuer(string id,address ethereumAddress)\")\n    bytes32 private constant VERIFIABLE_CREDENTIAL_TYPEHASH =\n        0x63c4847aa3662952b34b8f76f3abc371c24535ee34fce5b3df34d029db924d4e;\n    // bytes32 private constant CREDENTIAL_SCHEMA_TYPEHASH = keccak256(\"CredentialSchema(string id,string _type)\")\n    bytes32 private constant CREDENTIAL_SCHEMA_TYPEHASH =\n        0x1a58b7c56676b62343f37f4f3603a07ae6dd78bea300689bcefef0f9498c6cc9;\n    // bytes32 private constant CREDENTIAL_SUBJECT_TYPEHASH = keccak256(\"CredentialSubject(string id,address ethereumAddress,string _type,string typeSchema,string value,string encrypted,uint8 trust,uint256 stake,uint256 price,uint256 nbf,uint256 exp)\")\n    bytes32 private constant CREDENTIAL_SUBJECT_TYPEHASH =\n        0x4b87db6c5998f503ac6519b5a7d74efcf2a230368deeaf54dd8bf078da459ff7;\n\n    struct Issuer {\n        string id;\n        address ethereumAddress;\n    }\n\n    struct CredentialSubject {\n        string id;\n        address ethereumAddress;\n        string _type;\n        string typeSchema;\n        string value;\n        string encrypted;\n        uint8 trust; // 0 to 10\n        uint256 stake; // minStakeToIssue - maxStakeToIssue\n        uint256 price; // wei\n        uint256 nbf;\n        uint256 exp;\n    }\n\n    struct CredentialSchema {\n        string id;\n        string _type;\n    }\n\n    struct VerifiableCredential {\n        string _context;\n        string _type;\n        string id;\n        Issuer issuer;\n        CredentialSubject credentialSubject;\n        CredentialSchema credentialSchema;\n        string issuanceDate;\n        string expirationDate;\n    }\n\n    /**\n     * @dev Validates that the `VerifiableCredential` conforms to the Krebit Protocol.\n\n     *\n     */\n    function validateVC(VerifiableCredential memory vc) internal view {\n        require(\n            vc.issuer.ethereumAddress != address(0),\n            \"KRBToken: bad issuer address\"\n        );\n        require(\n            vc.credentialSubject.ethereumAddress != address(0),\n            \"KRBToken: bad credentialSubject address\"\n        );\n        require(\n            vc.credentialSubject.trust >= 0 ||\n                vc.credentialSubject.trust <= 100,\n            \"KRBToken: bad trust percentage value\"\n        );\n        require(\n            keccak256(abi.encode(vc.issuer.id)) !=\n                keccak256(abi.encode(vc.credentialSubject.id)),\n            \"KRBToken: issuer DID is the same as credentialSubject\"\n        );\n        require(\n            vc.issuer.ethereumAddress != vc.credentialSubject.ethereumAddress,\n            \"KRBToken: issuer address is the same as credentialSubject\"\n        );\n\n        require(\n            block.timestamp > vc.credentialSubject.nbf,\n            \"KRBToken: VC issuanceDate is in the future\"\n        );\n        require(\n            block.timestamp < vc.credentialSubject.exp,\n            \"KRBToken: VC has already expired\"\n        );\n    }\n\n    /**\n     * @dev Calculates the KRB reward as defined by tht Krebit Protocol\n     * Formula:  Krebit = Risk * Trust %\n\n     *\n     */\n    function getReward(uint256 _stake, uint256 _trust)\n        internal\n        pure\n        returns (uint256)\n    {\n        //Formula:  Krebit = Risk * Trust %\n        return\n            SafeMathUpgradeable.div(\n                SafeMathUpgradeable.mul(_stake, _trust),\n                100\n            );\n    }\n\n    function _getIssuer(Issuer memory identity)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encode(\n                    ISSUER_TYPEHASH,\n                    keccak256(bytes(identity.id)),\n                    identity.ethereumAddress\n                )\n            );\n    }\n\n    function _getCredentialSubject(CredentialSubject memory credentialSubject)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encode(\n                    CREDENTIAL_SUBJECT_TYPEHASH,\n                    keccak256(bytes(credentialSubject.id)),\n                    credentialSubject.ethereumAddress,\n                    keccak256(bytes(credentialSubject._type)),\n                    keccak256(bytes(credentialSubject.typeSchema)),\n                    keccak256(bytes(credentialSubject.value)),\n                    keccak256(bytes(credentialSubject.encrypted)),\n                    credentialSubject.trust,\n                    credentialSubject.stake,\n                    credentialSubject.price,\n                    credentialSubject.nbf,\n                    credentialSubject.exp\n                )\n            );\n    }\n\n    function _getCredentialSchema(CredentialSchema memory credentialSchema)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encode(\n                    CREDENTIAL_SCHEMA_TYPEHASH,\n                    keccak256(bytes(credentialSchema.id)),\n                    keccak256(bytes(credentialSchema._type))\n                )\n            );\n    }\n\n    function getVerifiableCredential(VerifiableCredential memory vc)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encode(\n                    VERIFIABLE_CREDENTIAL_TYPEHASH,\n                    keccak256(bytes(vc._context)),\n                    keccak256(bytes(vc._type)),\n                    keccak256(bytes(vc.id)),\n                    _getIssuer(vc.issuer),\n                    _getCredentialSubject(vc.credentialSubject),\n                    _getCredentialSchema(vc.credentialSchema),\n                    keccak256(bytes(vc.issuanceDate)),\n                    keccak256(bytes(vc.expirationDate))\n                )\n            );\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerableUpgradeable.sol\";\nimport \"./AccessControlUpgradeable.sol\";\nimport \"../utils/structs/EnumerableSetUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerableUpgradeable, AccessControlUpgradeable {\n    function __AccessControlEnumerable_init() internal onlyInitializing {\n    }\n\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\n    }\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n\n    mapping(bytes32 => EnumerableSetUpgradeable.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerableUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (security/PullPayment.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/escrow/EscrowUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Simple implementation of a\n * https://consensys.github.io/smart-contract-best-practices/development-recommendations/general/external-calls/#favor-pull-over-push-for-external-calls[pull-payment]\n * strategy, where the paying contract doesn't interact directly with the\n * receiver account, which must withdraw its payments itself.\n *\n * Pull-payments are often considered the best practice when it comes to sending\n * Ether, security-wise. It prevents recipients from blocking execution, and\n * eliminates reentrancy concerns.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n *\n * To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n * instead of Solidity's `transfer` function. Payees can query their due\n * payments with {payments}, and retrieve them with {withdrawPayments}.\n *\n * @custom:storage-size 51\n */\nabstract contract PullPaymentUpgradeable is Initializable {\n    EscrowUpgradeable private _escrow;\n\n    function __PullPayment_init() internal onlyInitializing {\n        __PullPayment_init_unchained();\n    }\n\n    function __PullPayment_init_unchained() internal onlyInitializing {\n        _escrow = new EscrowUpgradeable();\n        _escrow.initialize();\n    }\n\n    /**\n     * @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n     *\n     * Note that _any_ account can call this function, not just the `payee`.\n     * This means that contracts unaware of the `PullPayment` protocol can still\n     * receive funds this way, by having a separate account call\n     * {withdrawPayments}.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * @param payee Whose payments will be withdrawn.\n     *\n     * Causes the `escrow` to emit a {Withdrawn} event.\n     */\n    function withdrawPayments(address payable payee) public virtual {\n        _escrow.withdraw(payee);\n    }\n\n    /**\n     * @dev Returns the payments owed to an address.\n     * @param dest The creditor's address.\n     */\n    function payments(address dest) public view returns (uint256) {\n        return _escrow.depositsOf(dest);\n    }\n\n    /**\n     * @dev Called by the payer to store the sent amount as credit to be pulled.\n     * Funds sent in this way are stored in an intermediate {Escrow} contract, so\n     * there is no danger of them being spent before withdrawal.\n     *\n     * @param dest The destination address of the funds.\n     * @param amount The amount to transfer.\n     *\n     * Causes the `escrow` to emit a {Deposited} event.\n     */\n    function _asyncTransfer(address dest, uint256 amount) internal virtual {\n        _escrow.deposit{value: amount}(dest);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/cryptography/draft-EIP712.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-712 is Final as of 2022-08-11. This file is deprecated.\n\nimport \"./EIP712Upgradeable.sol\";\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../StringsUpgradeable.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSAUpgradeable {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", StringsUpgradeable.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../security/PausableUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n */\nabstract contract ERC20PausableUpgradeable is Initializable, ERC20Upgradeable, PausableUpgradeable {\n    function __ERC20Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __ERC20Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerableUpgradeable is IAccessControlUpgradeable {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/escrow/Escrow.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../access/OwnableUpgradeable.sol\";\nimport \"../AddressUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @title Escrow\n * @dev Base escrow contract, holds funds designated for a payee until they\n * withdraw them.\n *\n * Intended usage: This contract (and derived escrow contracts) should be a\n * standalone contract, that only interacts with the contract that instantiated\n * it. That way, it is guaranteed that all Ether will be handled according to\n * the `Escrow` rules, and there is no need to check for payable functions or\n * transfers in the inheritance tree. The contract that uses the escrow as its\n * payment method should be its owner, and provide public methods redirecting\n * to the escrow's deposit and withdraw.\n */\ncontract EscrowUpgradeable is Initializable, OwnableUpgradeable {\n    function __Escrow_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Escrow_init_unchained() internal onlyInitializing {\n    }\n    function initialize() public virtual initializer {\n        __Escrow_init();\n    }\n    using AddressUpgradeable for address payable;\n\n    event Deposited(address indexed payee, uint256 weiAmount);\n    event Withdrawn(address indexed payee, uint256 weiAmount);\n\n    mapping(address => uint256) private _deposits;\n\n    function depositsOf(address payee) public view returns (uint256) {\n        return _deposits[payee];\n    }\n\n    /**\n     * @dev Stores the sent amount as credit to be withdrawn.\n     * @param payee The destination address of the funds.\n     *\n     * Emits a {Deposited} event.\n     */\n    function deposit(address payee) public payable virtual onlyOwner {\n        uint256 amount = msg.value;\n        _deposits[payee] += amount;\n        emit Deposited(payee, amount);\n    }\n\n    /**\n     * @dev Withdraw accumulated balance for a payee, forwarding all gas to the\n     * recipient.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * @param payee The address whose funds will be withdrawn and transferred to.\n     *\n     * Emits a {Withdrawn} event.\n     */\n    function withdraw(address payable payee) public virtual onlyOwner {\n        uint256 payment = _deposits[payee];\n\n        _deposits[payee] = 0;\n\n        payee.sendValue(payment);\n\n        emit Withdrawn(payee, payment);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSAUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 52\n */\nabstract contract EIP712Upgradeable is Initializable {\n    /* solhint-disable var-name-mixedcase */\n    bytes32 private _HASHED_NAME;\n    bytes32 private _HASHED_VERSION;\n    bytes32 private constant _TYPE_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator(_TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash());\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSAUpgradeable.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712NameHash() internal virtual view returns (bytes32) {\n        return _HASHED_NAME;\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712VersionHash() internal virtual view returns (bytes32) {\n        return _HASHED_VERSION;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\n        require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":50},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[144],"AccessControlUpgradeable":[480],"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"ERC165Upgradeable":[3777],"EnumerableSetUpgradeable":[5579],"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578],"IERC165Upgradeable":[3789],"Initializable":[1268],"MathUpgradeable":[4654],"StringsUpgradeable":[3091]},"id":145,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol","file":"./IAccessControlEnumerableUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":506,"src":"143:51:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"./AccessControlUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":481,"src":"195:40:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"../utils/structs/EnumerableSetUpgradeable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":5580,"src":"236:55:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":1269,"src":"292:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"487:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"487:13:0"},{"baseName":{"id":9,"name":"IAccessControlEnumerableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":505,"src":"502:35:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"502:35:0"},{"baseName":{"id":11,"name":"AccessControlUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":480,"src":"539:24:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"539:24:0"}],"canonicalName":"AccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"336:94:0","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":144,"linearizedBaseContracts":[144,480,3777,3789,505,578,2856,1268],"name":"AccessControlEnumerableUpgradeable","nameLocation":"449:34:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":17,"nodeType":"Block","src":"638:7:0","statements":[]},"id":18,"implemented":true,"kind":"function","modifiers":[{"id":15,"kind":"modifierInvocation","modifierName":{"id":14,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"621:16:0"},"nodeType":"ModifierInvocation","src":"621:16:0"}],"name":"__AccessControlEnumerable_init","nameLocation":"579:30:0","nodeType":"FunctionDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"609:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"638:0:0"},"scope":144,"src":"570:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":23,"nodeType":"Block","src":"729:7:0","statements":[]},"id":24,"implemented":true,"kind":"function","modifiers":[{"id":21,"kind":"modifierInvocation","modifierName":{"id":20,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"712:16:0"},"nodeType":"ModifierInvocation","src":"712:16:0"}],"name":"__AccessControlEnumerable_init_unchained","nameLocation":"660:40:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"700:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"729:0:0"},"scope":144,"src":"651:85:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":28,"libraryName":{"id":25,"name":"EnumerableSetUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":5579,"src":"747:24:0"},"nodeType":"UsingForDirective","src":"741:71:0","typeName":{"id":27,"nodeType":"UserDefinedTypeName","pathNode":{"id":26,"name":"EnumerableSetUpgradeable.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5292,"src":"776:35:0"},"referencedDeclaration":5292,"src":"776:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"constant":false,"id":33,"mutability":"mutable","name":"_roleMembers","nameLocation":"882:12:0","nodeType":"VariableDeclaration","scope":144,"src":"818:76:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5292_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"typeName":{"id":32,"keyType":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"826:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"818:55:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5292_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"valueType":{"id":31,"nodeType":"UserDefinedTypeName","pathNode":{"id":30,"name":"EnumerableSetUpgradeable.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5292,"src":"837:35:0"},"referencedDeclaration":5292,"src":"837:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},"visibility":"private"},{"baseFunctions":[220],"body":{"id":54,"nodeType":"Block","src":"1053:132:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":42,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1070:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":44,"name":"IAccessControlEnumerableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1090:35:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$505_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$505_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}],"id":43,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1085:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":45,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1085:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerableUpgradeable_$505","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1085:53:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1070:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1166:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":48,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1142:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$144_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":220,"src":"1142:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1142:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1070:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41,"id":53,"nodeType":"Return","src":"1063:115:0"}]},"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"901:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":55,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"971:17:0","nodeType":"FunctionDefinition","overrides":{"id":38,"nodeType":"OverrideSpecifier","overrides":[],"src":"1029:8:0"},"parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"interfaceId","nameLocation":"996:11:0","nodeType":"VariableDeclaration","scope":55,"src":"989:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":35,"name":"bytes4","nodeType":"ElementaryTypeName","src":"989:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"988:20:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55,"src":"1047:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39,"name":"bool","nodeType":"ElementaryTypeName","src":"1047:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1046:6:0"},"scope":144,"src":"962:223:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[496],"body":{"id":73,"nodeType":"Block","src":"1869:52:0","statements":[{"expression":{"arguments":[{"id":70,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1908:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":66,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1886:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5292_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":68,"indexExpression":{"id":67,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1899:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1886:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":69,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":5415,"src":"1886:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5292_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$5292_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":65,"id":72,"nodeType":"Return","src":"1879:35:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1191:574:0","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1779:13:0","nodeType":"FunctionDefinition","overrides":{"id":62,"nodeType":"OverrideSpecifier","overrides":[],"src":"1842:8:0"},"parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"role","nameLocation":"1801:4:0","nodeType":"VariableDeclaration","scope":74,"src":"1793:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":57,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1793:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"index","nameLocation":"1815:5:0","nodeType":"VariableDeclaration","scope":74,"src":"1807:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1792:29:0"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"1860:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1859:9:0"},"scope":144,"src":"1770:151:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":89,"nodeType":"Block","src":"2178:51:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":83,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5292_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":85,"indexExpression":{"id":84,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2208:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2195:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":86,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5388,"src":"2195:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5292_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$5292_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2195:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":82,"id":88,"nodeType":"Return","src":"2188:34:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"1927:157:0","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":90,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"2098:18:0","nodeType":"FunctionDefinition","overrides":{"id":79,"nodeType":"OverrideSpecifier","overrides":[],"src":"2151:8:0"},"parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"role","nameLocation":"2125:4:0","nodeType":"VariableDeclaration","scope":90,"src":"2117:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":76,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2117:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2116:14:0"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"2169:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"2169:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2168:9:0"},"scope":144,"src":"2089:140:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[443],"body":{"id":113,"nodeType":"Block","src":"2394:89:0","statements":[{"expression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2421:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2427:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":99,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2404:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$144_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":443,"src":"2404:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2404:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105,"nodeType":"ExpressionStatement","src":"2404:31:0"},{"expression":{"arguments":[{"id":110,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":106,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2445:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5292_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":108,"indexExpression":{"id":107,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2458:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2445:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5319,"src":"2445:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5292_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$5292_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2445:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"ExpressionStatement","src":"2445:31:0"}]},"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"2235:77:0","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2326:10:0","nodeType":"FunctionDefinition","overrides":{"id":97,"nodeType":"OverrideSpecifier","overrides":[],"src":"2385:8:0"},"parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"role","nameLocation":"2345:4:0","nodeType":"VariableDeclaration","scope":114,"src":"2337:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":92,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"account","nameLocation":"2359:7:0","nodeType":"VariableDeclaration","scope":114,"src":"2351:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"2351:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2336:31:0"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[],"src":"2394:0:0"},"scope":144,"src":"2317:166:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[474],"body":{"id":137,"nodeType":"Block","src":"2650:93:0","statements":[{"expression":{"arguments":[{"id":126,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":127,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":123,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2660:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$144_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":474,"src":"2660:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2660:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"ExpressionStatement","src":"2660:32:0"},{"expression":{"arguments":[{"id":134,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2728:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":130,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2702:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5292_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":132,"indexExpression":{"id":131,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2702:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":5346,"src":"2702:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5292_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$5292_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2702:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":136,"nodeType":"ExpressionStatement","src":"2702:34:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"2489:78:0","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":138,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2581:11:0","nodeType":"FunctionDefinition","overrides":{"id":121,"nodeType":"OverrideSpecifier","overrides":[],"src":"2641:8:0"},"parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"2601:4:0","nodeType":"VariableDeclaration","scope":138,"src":"2593:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2593:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"account","nameLocation":"2615:7:0","nodeType":"VariableDeclaration","scope":138,"src":"2607:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"2607:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2592:31:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[],"src":"2650:0:0"},"scope":144,"src":"2572:171:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2749:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":143,"mutability":"mutable","name":"__gap","nameLocation":"3028:5:0","nodeType":"VariableDeclaration","scope":144,"src":"3008:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":142,"length":{"hexValue":"3439","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3016:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3008:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":145,"src":"431:2605:0","usedErrors":[]}],"src":"118:2919:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[480],"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"ERC165Upgradeable":[3777],"IAccessControlUpgradeable":[578],"IERC165Upgradeable":[3789],"Initializable":[1268],"MathUpgradeable":[4654],"StringsUpgradeable":[3091]},"id":481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":146,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":579,"src":"138:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":2857,"src":"180:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../utils/StringsUpgradeable.sol","id":149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":3092,"src":"222:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":3778,"src":"264:54:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":1269,"src":"319:42:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":153,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"1944:13:1"},"id":154,"nodeType":"InheritanceSpecifier","src":"1944:13:1"},{"baseName":{"id":155,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"1959:18:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"1959:18:1"},{"baseName":{"id":157,"name":"IAccessControlUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":578,"src":"1979:25:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"1979:25:1"},{"baseName":{"id":159,"name":"ERC165Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":3777,"src":"2006:17:1"},"id":160,"nodeType":"InheritanceSpecifier","src":"2006:17:1"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"363:1534:1","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":480,"linearizedBaseContracts":[480,3777,3789,578,2856,1268],"name":"AccessControlUpgradeable","nameLocation":"1916:24:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":165,"nodeType":"Block","src":"2088:7:1","statements":[]},"id":166,"implemented":true,"kind":"function","modifiers":[{"id":163,"kind":"modifierInvocation","modifierName":{"id":162,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"2071:16:1"},"nodeType":"ModifierInvocation","src":"2071:16:1"}],"name":"__AccessControl_init","nameLocation":"2039:20:1","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"2059:2:1"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"2088:0:1"},"scope":480,"src":"2030:65:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":171,"nodeType":"Block","src":"2169:7:1","statements":[]},"id":172,"implemented":true,"kind":"function","modifiers":[{"id":169,"kind":"modifierInvocation","modifierName":{"id":168,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"2152:16:1"},"nodeType":"ModifierInvocation","src":"2152:16:1"}],"name":"__AccessControl_init_unchained","nameLocation":"2110:30:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"2140:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"2169:0:1"},"scope":480,"src":"2101:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"AccessControlUpgradeable.RoleData","id":179,"members":[{"constant":false,"id":176,"mutability":"mutable","name":"members","nameLocation":"2232:7:1","nodeType":"VariableDeclaration","scope":179,"src":"2207:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":175,"keyType":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"2215:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2207:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2226:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"adminRole","nameLocation":"2257:9:1","nodeType":"VariableDeclaration","scope":179,"src":"2249:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2188:8:1","nodeType":"StructDefinition","scope":480,"src":"2181:92:1","visibility":"public"},{"constant":false,"id":184,"mutability":"mutable","name":"_roles","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":480,"src":"2279:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":183,"keyType":{"id":180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2279:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueType":{"id":182,"nodeType":"UserDefinedTypeName","pathNode":{"id":181,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":179,"src":"2298:8:1"},"referencedDeclaration":179,"src":"2298:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":187,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2353:18:1","nodeType":"VariableDeclaration","scope":480,"src":"2329:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2329:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2374:4:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":197,"nodeType":"Block","src":"2797:44:1","statements":[{"expression":{"arguments":[{"id":193,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2818:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":192,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[252,291],"referencedDeclaration":252,"src":"2807:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2807:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"2807:16:1"},{"id":196,"nodeType":"PlaceholderStatement","src":"2833:1:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2385:375:1","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":198,"name":"onlyRole","nameLocation":"2774:8:1","nodeType":"ModifierDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"role","nameLocation":"2791:4:1","nodeType":"VariableDeclaration","scope":198,"src":"2783:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2783:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2782:14:1"},"src":"2765:76:1","virtual":false,"visibility":"internal"},{"baseFunctions":[3771],"body":{"id":219,"nodeType":"Block","src":"2999:122:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":207,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3016:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":209,"name":"IAccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3036:25:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$578_$","typeString":"type(contract IAccessControlUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$578_$","typeString":"type(contract IAccessControlUpgradeable)"}],"id":208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3031:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3031:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$578","typeString":"type(contract IAccessControlUpgradeable)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"3031:43:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3016:58:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":215,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3102:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":213,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3078:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$480_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3771,"src":"3078:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3078:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3016:98:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":206,"id":218,"nodeType":"Return","src":"3009:105:1"}]},"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"2847:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":220,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2917:17:1","nodeType":"FunctionDefinition","overrides":{"id":203,"nodeType":"OverrideSpecifier","overrides":[],"src":"2975:8:1"},"parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"interfaceId","nameLocation":"2942:11:1","nodeType":"VariableDeclaration","scope":220,"src":"2935:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":200,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2935:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2934:20:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"2993:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"2993:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2992:6:1"},"scope":480,"src":"2908:213:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[545],"body":{"id":238,"nodeType":"Block","src":"3300:53:1","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":231,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3317:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":233,"indexExpression":{"id":232,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3324:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":176,"src":"3317:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":236,"indexExpression":{"id":235,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"3338:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":230,"id":237,"nodeType":"Return","src":"3310:36:1"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"3127:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":239,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3217:7:1","nodeType":"FunctionDefinition","overrides":{"id":227,"nodeType":"OverrideSpecifier","overrides":[],"src":"3276:8:1"},"parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"role","nameLocation":"3233:4:1","nodeType":"VariableDeclaration","scope":239,"src":"3225:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3225:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"account","nameLocation":"3247:7:1","nodeType":"VariableDeclaration","scope":239,"src":"3239:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"3239:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3224:31:1"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":239,"src":"3294:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"3294:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3293:6:1"},"scope":480,"src":"3208:145:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":251,"nodeType":"Block","src":"3703:47:1","statements":[{"expression":{"arguments":[{"id":246,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3724:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":247,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"3730:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3730:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[252,291],"referencedDeclaration":291,"src":"3713:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3713:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"3713:30:1"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3359:283:1","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":252,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3656:10:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"role","nameLocation":"3675:4:1","nodeType":"VariableDeclaration","scope":252,"src":"3667:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3667:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3666:14:1"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"3703:0:1"},"scope":480,"src":"3647:103:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":290,"nodeType":"Block","src":"4104:428:1","statements":[{"condition":{"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4118:23:1","subExpression":{"arguments":[{"id":261,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4127:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":262,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4133:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":260,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4119:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4119:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":289,"nodeType":"IfStatement","src":"4114:412:1","trueBody":{"id":288,"nodeType":"Block","src":"4143:383:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4251:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":273,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4333:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":271,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"4302:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3091_$","typeString":"type(library StringsUpgradeable)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"4302:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4367:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4451:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4443:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4443:7:1","typeDescriptions":{}}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4443:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4458:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":276,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"4412:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3091_$","typeString":"type(library StringsUpgradeable)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3070,"src":"4412:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4412:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":268,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4209:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4209:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4209:274:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4181:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":266,"name":"string","nodeType":"ElementaryTypeName","src":"4181:6:1","typeDescriptions":{}}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4181:320:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":265,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4157:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4157:358:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"ExpressionStatement","src":"4157:358:1"}]}}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"3756:270:1","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":291,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4040:10:1","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"role","nameLocation":"4059:4:1","nodeType":"VariableDeclaration","scope":291,"src":"4051:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4051:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"account","nameLocation":"4073:7:1","nodeType":"VariableDeclaration","scope":291,"src":"4065:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4050:31:1"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"4104:0:1"},"scope":480,"src":"4031:501:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[553],"body":{"id":305,"nodeType":"Block","src":"4796:46:1","statements":[{"expression":{"expression":{"baseExpression":{"id":300,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"4813:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":302,"indexExpression":{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4820:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4813:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":178,"src":"4813:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":299,"id":304,"nodeType":"Return","src":"4806:29:1"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"4538:170:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":306,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4722:12:1","nodeType":"FunctionDefinition","overrides":{"id":296,"nodeType":"OverrideSpecifier","overrides":[],"src":"4769:8:1"},"parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"role","nameLocation":"4743:4:1","nodeType":"VariableDeclaration","scope":306,"src":"4735:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4735:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4734:14:1"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"4787:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4787:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4786:9:1"},"scope":480,"src":"4713:129:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[561],"body":{"id":325,"nodeType":"Block","src":"5241:42:1","statements":[{"expression":{"arguments":[{"id":321,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5262:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":322,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5268:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":320,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5251:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5251:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5251:25:1"}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"4848:285:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":326,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":316,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5234:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":315,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"5221:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5221:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":318,"kind":"modifierInvocation","modifierName":{"id":314,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":198,"src":"5212:8:1"},"nodeType":"ModifierInvocation","src":"5212:28:1"}],"name":"grantRole","nameLocation":"5147:9:1","nodeType":"FunctionDefinition","overrides":{"id":313,"nodeType":"OverrideSpecifier","overrides":[],"src":"5203:8:1"},"parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"role","nameLocation":"5165:4:1","nodeType":"VariableDeclaration","scope":326,"src":"5157:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5157:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"account","nameLocation":"5179:7:1","nodeType":"VariableDeclaration","scope":326,"src":"5171:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"5171:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5156:31:1"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"5241:0:1"},"scope":480,"src":"5138:145:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[569],"body":{"id":345,"nodeType":"Block","src":"5667:43:1","statements":[{"expression":{"arguments":[{"id":341,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5689:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":342,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"5695:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":340,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"5677:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5677:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"5677:26:1"}]},"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"5289:269:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":346,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":336,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5660:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":335,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"5647:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5647:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":338,"kind":"modifierInvocation","modifierName":{"id":334,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":198,"src":"5638:8:1"},"nodeType":"ModifierInvocation","src":"5638:28:1"}],"name":"revokeRole","nameLocation":"5572:10:1","nodeType":"FunctionDefinition","overrides":{"id":333,"nodeType":"OverrideSpecifier","overrides":[],"src":"5629:8:1"},"parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"role","nameLocation":"5591:4:1","nodeType":"VariableDeclaration","scope":346,"src":"5583:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5583:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"account","nameLocation":"5605:7:1","nodeType":"VariableDeclaration","scope":346,"src":"5597:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"5597:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5582:31:1"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"5667:0:1"},"scope":480,"src":"5563:147:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[577],"body":{"id":368,"nodeType":"Block","src":"6324:137:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6342:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":357,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"6353:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6353:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6342:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6367:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6334:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6334:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"6334:83:1"},{"expression":{"arguments":[{"id":364,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6440:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":365,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6446:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":363,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6428:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6428:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"6428:26:1"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"5716:526:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":369,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6256:12:1","nodeType":"FunctionDefinition","overrides":{"id":353,"nodeType":"OverrideSpecifier","overrides":[],"src":"6315:8:1"},"parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"6277:4:1","nodeType":"VariableDeclaration","scope":369,"src":"6269:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6269:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"account","nameLocation":"6291:7:1","nodeType":"VariableDeclaration","scope":369,"src":"6283:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"6283:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6268:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"6324:0:1"},"scope":480,"src":"6247:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":382,"nodeType":"Block","src":"7214:42:1","statements":[{"expression":{"arguments":[{"id":378,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"7235:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":379,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7241:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":377,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"7224:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7224:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"7224:25:1"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"6467:674:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":383,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"7155:10:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"7174:4:1","nodeType":"VariableDeclaration","scope":383,"src":"7166:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7166:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"account","nameLocation":"7188:7:1","nodeType":"VariableDeclaration","scope":383,"src":"7180:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"7180:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7165:31:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"7214:0:1"},"scope":480,"src":"7146:110:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":410,"nodeType":"Block","src":"7454:174:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7472:17:1","nodeType":"VariableDeclaration","scope":410,"src":"7464:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7464:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":396,"initialValue":{"arguments":[{"id":394,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7505:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":393,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7492:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7492:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7464:46:1"},{"expression":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":397,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"7520:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":399,"indexExpression":{"id":398,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7527:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7520:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":178,"src":"7520:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":401,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7545:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7520:34:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":403,"nodeType":"ExpressionStatement","src":"7520:34:1"},{"eventCall":{"arguments":[{"id":405,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7586:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":406,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"7592:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":407,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7611:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":404,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"7569:16:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7569:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"EmitStatement","src":"7564:57:1"}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"7262:114:1","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":411,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7390:13:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"role","nameLocation":"7412:4:1","nodeType":"VariableDeclaration","scope":411,"src":"7404:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7404:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"adminRole","nameLocation":"7426:9:1","nodeType":"VariableDeclaration","scope":411,"src":"7418:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7418:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7403:33:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"7454:0:1"},"scope":480,"src":"7381:247:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":442,"nodeType":"Block","src":"7864:165:1","statements":[{"condition":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7878:23:1","subExpression":{"arguments":[{"id":420,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7887:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":421,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"7893:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":419,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7879:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7879:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"IfStatement","src":"7874:149:1","trueBody":{"id":440,"nodeType":"Block","src":"7903:120:1","statements":[{"expression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":424,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"7917:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":426,"indexExpression":{"id":425,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7924:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7917:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":176,"src":"7917:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":429,"indexExpression":{"id":428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"7938:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7917:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7949:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7917:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":432,"nodeType":"ExpressionStatement","src":"7917:36:1"},{"eventCall":{"arguments":[{"id":434,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7984:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":435,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"7990:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"7999:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7999:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":433,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"7972:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7972:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":439,"nodeType":"EmitStatement","src":"7967:45:1"}]}}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"7634:157:1","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7805:10:1","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"role","nameLocation":"7824:4:1","nodeType":"VariableDeclaration","scope":443,"src":"7816:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7816:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"account","nameLocation":"7838:7:1","nodeType":"VariableDeclaration","scope":443,"src":"7830:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"7830:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7815:31:1"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"7864:0:1"},"scope":480,"src":"7796:233:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":473,"nodeType":"Block","src":"8269:165:1","statements":[{"condition":{"arguments":[{"id":452,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8291:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":453,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8297:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":451,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"8283:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8283:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":472,"nodeType":"IfStatement","src":"8279:149:1","trueBody":{"id":471,"nodeType":"Block","src":"8307:121:1","statements":[{"expression":{"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":455,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"8321:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":457,"indexExpression":{"id":456,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8328:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8321:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":176,"src":"8321:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":460,"indexExpression":{"id":459,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8342:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8321:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8353:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8321:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"ExpressionStatement","src":"8321:37:1"},{"eventCall":{"arguments":[{"id":465,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8389:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8395:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":467,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"8404:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8404:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":464,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"8377:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8377:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":470,"nodeType":"EmitStatement","src":"8372:45:1"}]}}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"8035:160:1","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":474,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8209:11:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"role","nameLocation":"8229:4:1","nodeType":"VariableDeclaration","scope":474,"src":"8221:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8221:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"account","nameLocation":"8243:7:1","nodeType":"VariableDeclaration","scope":474,"src":"8235:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"8235:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8220:31:1"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"8269:0:1"},"scope":480,"src":"8200:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"8440:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":479,"mutability":"mutable","name":"__gap","nameLocation":"8719:5:1","nodeType":"VariableDeclaration","scope":480,"src":"8699:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"8699:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":478,"length":{"hexValue":"3439","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8707:2:1","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8699:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":481,"src":"1898:6829:1","usedErrors":[]}],"src":"113:8615:1"},"id":1},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol","exportedSymbols":{"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578]},"id":506,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":482,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":483,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":506,"sourceUnit":579,"src":"129:41:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":485,"name":"IAccessControlUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":578,"src":"321:25:2"},"id":486,"nodeType":"InheritanceSpecifier","src":"321:25:2"}],"canonicalName":"IAccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"172:99:2","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":505,"linearizedBaseContracts":[505,578],"name":"IAccessControlEnumerableUpgradeable","nameLocation":"282:35:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"353:574:2","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"941:13:2","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"role","nameLocation":"963:4:2","nodeType":"VariableDeclaration","scope":496,"src":"955:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"955:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"index","nameLocation":"977:5:2","nodeType":"VariableDeclaration","scope":496,"src":"969:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"954:29:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":496,"src":"1007:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1006:9:2"},"scope":505,"src":"932:84:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"1022:157:2","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1193:18:2","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"role","nameLocation":"1220:4:2","nodeType":"VariableDeclaration","scope":504,"src":"1212:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1211:14:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"1249:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1248:9:2"},"scope":505,"src":"1184:74:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":506,"src":"272:988:2","usedErrors":[]}],"src":"104:1157:2"},"id":2},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","exportedSymbols":{"IAccessControlUpgradeable":[578]},"id":579,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":507,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"119:89:3","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":578,"linearizedBaseContracts":[578],"name":"IAccessControlUpgradeable","nameLocation":"219:25:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"251:292:3","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":517,"name":"RoleAdminChanged","nameLocation":"554:16:3","nodeType":"EventDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"587:4:3","nodeType":"VariableDeclaration","scope":517,"src":"571:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"609:17:3","nodeType":"VariableDeclaration","scope":517,"src":"593:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":515,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"644:12:3","nodeType":"VariableDeclaration","scope":517,"src":"628:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"570:87:3"},"src":"548:110:3"},{"anonymous":false,"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"664:212:3","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":526,"name":"RoleGranted","nameLocation":"887:11:3","nodeType":"EventDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"915:4:3","nodeType":"VariableDeclaration","scope":526,"src":"899:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":522,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:3","nodeType":"VariableDeclaration","scope":526,"src":"921:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"962:6:3","nodeType":"VariableDeclaration","scope":526,"src":"946:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:71:3"},"src":"881:89:3"},{"anonymous":false,"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"976:275:3","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":535,"name":"RoleRevoked","nameLocation":"1262:11:3","nodeType":"EventDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1290:4:3","nodeType":"VariableDeclaration","scope":535,"src":"1274:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":531,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1312:7:3","nodeType":"VariableDeclaration","scope":535,"src":"1296:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1337:6:3","nodeType":"VariableDeclaration","scope":535,"src":"1321:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:71:3"},"src":"1256:89:3"},{"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"1351:76:3","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":545,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1441:7:3","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"role","nameLocation":"1457:4:3","nodeType":"VariableDeclaration","scope":545,"src":"1449:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"account","nameLocation":"1471:7:3","nodeType":"VariableDeclaration","scope":545,"src":"1463:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1448:31:3"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"1503:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":542,"name":"bool","nodeType":"ElementaryTypeName","src":"1503:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1502:6:3"},"scope":578,"src":"1432:77:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"1515:184:3","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":553,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1713:12:3","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"role","nameLocation":"1734:4:3","nodeType":"VariableDeclaration","scope":553,"src":"1726:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1726:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:14:3"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"1763:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:9:3"},"scope":578,"src":"1704:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1778:239:3","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2031:9:3","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"role","nameLocation":"2049:4:3","nodeType":"VariableDeclaration","scope":561,"src":"2041:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"account","nameLocation":"2063:7:3","nodeType":"VariableDeclaration","scope":561,"src":"2055:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:31:3"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"2080:0:3"},"scope":578,"src":"2022:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"2087:223:3","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":569,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2324:10:3","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"role","nameLocation":"2343:4:3","nodeType":"VariableDeclaration","scope":569,"src":"2335:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"account","nameLocation":"2357:7:3","nodeType":"VariableDeclaration","scope":569,"src":"2349:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:31:3"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"2374:0:3"},"scope":578,"src":"2315:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"2381:480:3","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":577,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2875:12:3","nodeType":"FunctionDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"role","nameLocation":"2896:4:3","nodeType":"VariableDeclaration","scope":577,"src":"2888:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2888:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"account","nameLocation":"2910:7:3","nodeType":"VariableDeclaration","scope":577,"src":"2902:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2887:31:3"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"2927:0:3"},"scope":578,"src":"2866:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":579,"src":"209:2721:3","usedErrors":[]}],"src":"94:2837:3"},"id":3},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"Initializable":[1268],"OwnableUpgradeable":[710]},"id":711,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":580,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":711,"sourceUnit":2857,"src":"127:41:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":711,"sourceUnit":1269,"src":"169:42:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":584,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"748:13:4"},"id":585,"nodeType":"InheritanceSpecifier","src":"748:13:4"},{"baseName":{"id":586,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"763:18:4"},"id":587,"nodeType":"InheritanceSpecifier","src":"763:18:4"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"213:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":710,"linearizedBaseContracts":[710,2856,1268],"name":"OwnableUpgradeable","nameLocation":"726:18:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":589,"mutability":"mutable","name":"_owner","nameLocation":"804:6:4","nodeType":"VariableDeclaration","scope":710,"src":"788:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":595,"name":"OwnershipTransferred","nameLocation":"823:20:4","nodeType":"EventDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:4","nodeType":"VariableDeclaration","scope":595,"src":"844:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:4","nodeType":"VariableDeclaration","scope":595,"src":"875:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:4"},"src":"817:84:4"},{"body":{"id":604,"nodeType":"Block","src":"1055:43:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1065:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"1065:26:4"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"907:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":605,"implemented":true,"kind":"function","modifiers":[{"id":599,"kind":"modifierInvocation","modifierName":{"id":598,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1038:16:4"},"nodeType":"ModifierInvocation","src":"1038:16:4"}],"name":"__Ownable_init","nameLocation":"1012:14:4","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"1026:2:4"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"1055:0:4"},"scope":710,"src":"1003:95:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"1166:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":611,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1195:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":610,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"1176:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":614,"nodeType":"ExpressionStatement","src":"1176:32:4"}]},"id":616,"implemented":true,"kind":"function","modifiers":[{"id":608,"kind":"modifierInvocation","modifierName":{"id":607,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1149:16:4"},"nodeType":"ModifierInvocation","src":"1149:16:4"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:4","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"1137:2:4"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"1166:0:4"},"scope":710,"src":"1104:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":623,"nodeType":"Block","src":"1324:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":619,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"1334:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"ExpressionStatement","src":"1334:13:4"},{"id":622,"nodeType":"PlaceholderStatement","src":"1357:1:4"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"1221:77:4","text":" @dev Throws if called by any account other than the owner."},"id":624,"name":"onlyOwner","nameLocation":"1312:9:4","nodeType":"ModifierDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"1321:2:4"},"src":"1303:62:4","virtual":false,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"1496:30:4","statements":[{"expression":{"id":630,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1513:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":629,"id":631,"nodeType":"Return","src":"1506:13:4"}]},"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"1371:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":633,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:4","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"1455:2:4"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":633,"src":"1487:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:4"},"scope":710,"src":"1441:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":646,"nodeType":"Block","src":"1644:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1662:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1673:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"1654:68:4"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"1532:62:4","text":" @dev Throws if the sender is not the owner."},"id":647,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:4","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"1619:2:4"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"1644:0:4"},"scope":710,"src":"1599:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":660,"nodeType":"Block","src":"2125:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:4","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"2135:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"ExpressionStatement","src":"2135:30:4"}]},"documentation":{"id":648,"nodeType":"StructuredDocumentation","src":"1735:331:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":661,"implemented":true,"kind":"function","modifiers":[{"id":651,"kind":"modifierInvocation","modifierName":{"id":650,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":624,"src":"2115:9:4"},"nodeType":"ModifierInvocation","src":"2115:9:4"}],"name":"renounceOwnership","nameLocation":"2080:17:4","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"2097:2:4"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[],"src":"2125:0:4"},"scope":710,"src":"2071:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":683,"nodeType":"Block","src":"2391:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":670,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2409:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:4","typeDescriptions":{}}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2421:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":669,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"2401:73:4"},{"expression":{"arguments":[{"id":680,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2503:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":679,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"2484:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2484:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"ExpressionStatement","src":"2484:28:4"}]},"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"2178:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":684,"implemented":true,"kind":"function","modifiers":[{"id":667,"kind":"modifierInvocation","modifierName":{"id":666,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":624,"src":"2381:9:4"},"nodeType":"ModifierInvocation","src":"2381:9:4"}],"name":"transferOwnership","nameLocation":"2330:17:4","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:4","nodeType":"VariableDeclaration","scope":684,"src":"2348:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:4"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"2391:0:4"},"scope":710,"src":"2321:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":703,"nodeType":"Block","src":"2736:124:4","statements":[{"assignments":[691],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:4","nodeType":"VariableDeclaration","scope":703,"src":"2746:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":693,"initialValue":{"id":692,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2765:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:4"},{"expression":{"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":694,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2781:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":695,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2790:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":697,"nodeType":"ExpressionStatement","src":"2781:17:4"},{"eventCall":{"arguments":[{"id":699,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"2834:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2844:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":698,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"2813:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2813:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"EmitStatement","src":"2808:45:4"}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"2525:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":704,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:4","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:4","nodeType":"VariableDeclaration","scope":704,"src":"2701:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:4"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"2736:0:4"},"scope":710,"src":"2673:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"2866:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":709,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:4","nodeType":"VariableDeclaration","scope":710,"src":"3125:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":708,"length":{"hexValue":"3439","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":711,"src":"708:2445:4","usedErrors":[]}],"src":"102:3052:4"},"id":4},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[720]},"id":721,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":712,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"138:203:5","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":720,"linearizedBaseContracts":[720],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"387:438:5","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":719,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:5","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"852:2:5"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":719,"src":"878:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:5"},"scope":720,"src":"830:57:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":721,"src":"342:547:5","usedErrors":[]}],"src":"113:777:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ERC1967UpgradeUpgradeable":[1089],"IBeaconUpgradeable":[1099],"IERC1822ProxiableUpgradeable":[720],"Initializable":[1268],"StorageSlotUpgradeable":[2916]},"id":1090,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":722,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1090,"sourceUnit":1100,"src":"141:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1090,"sourceUnit":721,"src":"184:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":725,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1090,"sourceUnit":2815,"src":"241:44:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":726,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1090,"sourceUnit":2917,"src":"286:48:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":727,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1090,"sourceUnit":1269,"src":"335:36:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":729,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"657:13:6"},"id":730,"nodeType":"InheritanceSpecifier","src":"657:13:6"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"373:236:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"},"fullyImplemented":true,"id":1089,"linearizedBaseContracts":[1089,1268],"name":"ERC1967UpgradeUpgradeable","nameLocation":"628:25:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":735,"nodeType":"Block","src":"736:7:6","statements":[]},"id":736,"implemented":true,"kind":"function","modifiers":[{"id":733,"kind":"modifierInvocation","modifierName":{"id":732,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"719:16:6"},"nodeType":"ModifierInvocation","src":"719:16:6"}],"name":"__ERC1967Upgrade_init","nameLocation":"686:21:6","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"707:2:6"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[],"src":"736:0:6"},"scope":1089,"src":"677:66:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":741,"nodeType":"Block","src":"818:7:6","statements":[]},"id":742,"implemented":true,"kind":"function","modifiers":[{"id":739,"kind":"modifierInvocation","modifierName":{"id":738,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"801:16:6"},"nodeType":"ModifierInvocation","src":"801:16:6"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"758:31:6","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[],"src":"789:2:6"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[],"src":"818:0:6"},"scope":1089,"src":"749:76:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":745,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"934:14:6","nodeType":"VariableDeclaration","scope":1089,"src":"909:108:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"909:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:66:6","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"1024:214:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":749,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1269:20:6","nodeType":"VariableDeclaration","scope":1089,"src":"1243:115:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":747,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1243:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1365:68:6","text":" @dev Emitted when the implementation is upgraded."},"id":754,"name":"Upgraded","nameLocation":"1444:8:6","nodeType":"EventDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1469:14:6","nodeType":"VariableDeclaration","scope":754,"src":"1453:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"1453:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1452:32:6"},"src":"1438:47:6"},{"body":{"id":766,"nodeType":"Block","src":"1625:89:6","statements":[{"expression":{"expression":{"arguments":[{"id":762,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"1680:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":760,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"1642:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2916_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2882,"src":"1642:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2862_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1642:59:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2862_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"1642:65:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":759,"id":765,"nodeType":"Return","src":"1635:72:6"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"1491:67:6","text":" @dev Returns the current implementation address."},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1572:18:6","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[],"src":"1590:2:6"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"1616:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:9:6"},"scope":1089,"src":"1563:151:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":790,"nodeType":"Block","src":"1868:218:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":776,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"1916:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":774,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"1886:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2814_$","typeString":"type(library AddressUpgradeable)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"1886:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":773,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1878:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1878:106:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"1878:106:6"},{"expression":{"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":784,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"2032:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":781,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"1994:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2916_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2882,"src":"1994:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2862_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1994:59:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2862_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"1994:65:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":787,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2062:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1994:85:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":789,"nodeType":"ExpressionStatement","src":"1994:85:6"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"1720:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":791,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1814:18:6","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"newImplementation","nameLocation":"1841:17:6","nodeType":"VariableDeclaration","scope":791,"src":"1833:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1832:27:6"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"1868:0:6"},"scope":1089,"src":"1805:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":805,"nodeType":"Block","src":"2248:96:6","statements":[{"expression":{"arguments":[{"id":798,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"2277:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":797,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2258:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2258:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"2258:37:6"},{"eventCall":{"arguments":[{"id":802,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"2319:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":801,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2310:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2310:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"EmitStatement","src":"2305:32:6"}]},"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"2092:95:6","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2201:10:6","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"newImplementation","nameLocation":"2220:17:6","nodeType":"VariableDeclaration","scope":806,"src":"2212:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2211:27:6"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"2248:0:6"},"scope":1089,"src":"2192:152:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":833,"nodeType":"Block","src":"2606:160:6","statements":[{"expression":{"arguments":[{"id":817,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"2627:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":816,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2616:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"ExpressionStatement","src":"2616:29:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":820,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"2659:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2659:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2673:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2659:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":824,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"2678:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2659:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":832,"nodeType":"IfStatement","src":"2655:105:6","trueBody":{"id":831,"nodeType":"Block","src":"2689:71:6","statements":[{"expression":{"arguments":[{"id":827,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"2725:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"2744:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":826,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2703:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2703:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":830,"nodeType":"ExpressionStatement","src":"2703:46:6"}]}}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"2350:123:6","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":834,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2487:17:6","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"newImplementation","nameLocation":"2522:17:6","nodeType":"VariableDeclaration","scope":834,"src":"2514:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"data","nameLocation":"2562:4:6","nodeType":"VariableDeclaration","scope":834,"src":"2549:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":810,"name":"bytes","nodeType":"ElementaryTypeName","src":"2549:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"forceCall","nameLocation":"2581:9:6","nodeType":"VariableDeclaration","scope":834,"src":"2576:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":812,"name":"bool","nodeType":"ElementaryTypeName","src":"2576:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2504:92:6"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"2606:0:6"},"scope":1089,"src":"2478:288:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":886,"nodeType":"Block","src":"3070:842:6","statements":[{"condition":{"expression":{"arguments":[{"id":846,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3422:14:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":844,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"3384:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2916_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":2893,"src":"3384:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2865_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3384:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2865_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2864,"src":"3384:59:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":884,"nodeType":"Block","src":"3513:393:6","statements":[{"clauses":[{"block":{"id":869,"nodeType":"Block","src":"3618:115:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":863,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"3644:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":864,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3652:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3644:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3674:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":862,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3636:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:82:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"3636:82:6"}]},"errorName":"","id":870,"nodeType":"TryCatchClause","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"slot","nameLocation":"3612:4:6","nodeType":"VariableDeclaration","scope":870,"src":"3604:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3604:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3603:14:6"},"src":"3595:138:6"},{"block":{"id":875,"nodeType":"Block","src":"3740:89:6","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3765:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":871,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3758:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3758:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"ExpressionStatement","src":"3758:56:6"}]},"errorName":"","id":876,"nodeType":"TryCatchClause","src":"3734:95:6"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":855,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"3560:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":854,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"3531:28:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$720_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$720","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":719,"src":"3531:61:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:63:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":877,"nodeType":"TryStatement","src":"3527:302:6"},{"expression":{"arguments":[{"id":879,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"3860:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"3879:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":881,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"3885:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":878,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3842:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3842:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"3842:53:6"}]},"id":885,"nodeType":"IfStatement","src":"3380:526:6","trueBody":{"id":853,"nodeType":"Block","src":"3445:62:6","statements":[{"expression":{"arguments":[{"id":850,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"3478:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":849,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"3459:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3459:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"3459:37:6"}]}}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"2772:161:6","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":887,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2947:21:6","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"newImplementation","nameLocation":"2986:17:6","nodeType":"VariableDeclaration","scope":887,"src":"2978:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"2978:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"data","nameLocation":"3026:4:6","nodeType":"VariableDeclaration","scope":887,"src":"3013:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3013:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"forceCall","nameLocation":"3045:9:6","nodeType":"VariableDeclaration","scope":887,"src":"3040:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":840,"name":"bool","nodeType":"ElementaryTypeName","src":"3040:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2968:92:6"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"3070:0:6"},"scope":1089,"src":"2938:974:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"3918:189:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":891,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"4138:11:6","nodeType":"VariableDeclaration","scope":1089,"src":"4112:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4112:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4152:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"4225:67:6","text":" @dev Emitted when the admin account has changed."},"id":898,"name":"AdminChanged","nameLocation":"4303:12:6","nodeType":"EventDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"4324:13:6","nodeType":"VariableDeclaration","scope":898,"src":"4316:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"4316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"4347:8:6","nodeType":"VariableDeclaration","scope":898,"src":"4339:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"4339:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4315:41:6"},"src":"4297:60:6"},{"body":{"id":910,"nodeType":"Block","src":"4471:80:6","statements":[{"expression":{"expression":{"arguments":[{"id":906,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"4526:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":904,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"4488:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2916_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2882,"src":"4488:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2862_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4488:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2862_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"4488:56:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":903,"id":909,"nodeType":"Return","src":"4481:63:6"}]},"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"4363:50:6","text":" @dev Returns the current admin."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4427:9:6","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"4436:2:6"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"4462:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"4462:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4461:9:6"},"scope":1089,"src":"4418:133:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":936,"nodeType":"Block","src":"4678:167:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":918,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"4696:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4708:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:6","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4696:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4720:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4688:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4688:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"ExpressionStatement","src":"4688:73:6"},{"expression":{"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":930,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"4809:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":927,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"4771:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2916_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2882,"src":"4771:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2862_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2862_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"4771:56:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":933,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"4830:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4771:67:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":935,"nodeType":"ExpressionStatement","src":"4771:67:6"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"4557:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":937,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4642:9:6","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"newAdmin","nameLocation":"4660:8:6","nodeType":"VariableDeclaration","scope":937,"src":"4652:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4651:18:6"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"4678:0:6"},"scope":1089,"src":"4633:212:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":953,"nodeType":"Block","src":"5005:86:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":944,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5033:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5033:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"5046:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":943,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"5020:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5020:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"EmitStatement","src":"5015:40:6"},{"expression":{"arguments":[{"id":950,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"5075:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":949,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"5065:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5065:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"5065:19:6"}]},"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"4851:100:6","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4965:12:6","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"newAdmin","nameLocation":"4986:8:6","nodeType":"VariableDeclaration","scope":954,"src":"4978:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"4978:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4977:18:6"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"5005:0:6"},"scope":1089,"src":"4956:135:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"5097:232:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":958,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5360:12:6","nodeType":"VariableDeclaration","scope":1089,"src":"5334:107:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5334:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5375:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"5448:60:6","text":" @dev Emitted when the beacon is upgraded."},"id":963,"name":"BeaconUpgraded","nameLocation":"5519:14:6","nodeType":"EventDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"5550:6:6","nodeType":"VariableDeclaration","scope":963,"src":"5534:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"5534:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5533:24:6"},"src":"5513:45:6"},{"body":{"id":975,"nodeType":"Block","src":"5674:81:6","statements":[{"expression":{"expression":{"arguments":[{"id":971,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"5729:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":969,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"5691:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2916_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2882,"src":"5691:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2862_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5691:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2862_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"5691:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":968,"id":974,"nodeType":"Return","src":"5684:64:6"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"5564:51:6","text":" @dev Returns the current beacon."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5629:10:6","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"5639:2:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"5665:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"5665:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5664:9:6"},"scope":1089,"src":"5620:135:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1011,"nodeType":"Block","src":"5884:368:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":985,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5932:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":983,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"5902:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2814_$","typeString":"type(library AddressUpgradeable)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"5902:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5902:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5944:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5894:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5894:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"ExpressionStatement","src":"5894:90:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":994,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"6064:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":993,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6045:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$1099_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6045:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$1099","typeString":"contract IBeaconUpgradeable"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1098,"src":"6045:44:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6045:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":991,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"6015:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2814_$","typeString":"type(library AddressUpgradeable)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"6015:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6106:50:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5994:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5994:172:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"ExpressionStatement","src":"5994:172:6"},{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1005,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6214:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1002,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6176:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2916_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2882,"src":"6176:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2862_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6176:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2862_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"6176:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1008,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"6236:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6176:69:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1010,"nodeType":"ExpressionStatement","src":"6176:69:6"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"5761:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1012,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5846:10:6","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"newBeacon","nameLocation":"5865:9:6","nodeType":"VariableDeclaration","scope":1012,"src":"5857:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"5857:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5856:19:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"5884:0:6"},"scope":1089,"src":"5837:415:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1047,"nodeType":"Block","src":"6681:221:6","statements":[{"expression":{"arguments":[{"id":1023,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"6702:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1022,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6691:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6691:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"ExpressionStatement","src":"6691:21:6"},{"eventCall":{"arguments":[{"id":1027,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"6742:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1026,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"6727:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6727:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"EmitStatement","src":"6722:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1030,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"6766:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6766:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6780:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6766:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1034,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"6785:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6766:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1046,"nodeType":"IfStatement","src":"6762:134:6","trueBody":{"id":1045,"nodeType":"Block","src":"6796:100:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1038,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"6851:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1037,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6832:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$1099_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6832:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$1099","typeString":"contract IBeaconUpgradeable"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1098,"src":"6832:44:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6832:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"6880:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1036,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"6810:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6810:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1044,"nodeType":"ExpressionStatement","src":"6810:75:6"}]}}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"6258:292:6","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6564:23:6","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"newBeacon","nameLocation":"6605:9:6","nodeType":"VariableDeclaration","scope":1048,"src":"6597:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"6597:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"data","nameLocation":"6637:4:6","nodeType":"VariableDeclaration","scope":1048,"src":"6624:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1016,"name":"bytes","nodeType":"ElementaryTypeName","src":"6624:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"forceCall","nameLocation":"6656:9:6","nodeType":"VariableDeclaration","scope":1048,"src":"6651:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1018,"name":"bool","nodeType":"ElementaryTypeName","src":"6651:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6587:84:6"},"returnParameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"6681:0:6"},"scope":1089,"src":"6555:347:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1082,"nodeType":"Block","src":"7185:358:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1061,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"7233:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1059,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"7203:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2814_$","typeString":"type(library AddressUpgradeable)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"7203:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7203:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7242:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7195:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7195:88:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"ExpressionStatement","src":"7195:88:6"},{"assignments":[1067,1069],"declarations":[{"constant":false,"id":1067,"mutability":"mutable","name":"success","nameLocation":"7359:7:6","nodeType":"VariableDeclaration","scope":1082,"src":"7354:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1066,"name":"bool","nodeType":"ElementaryTypeName","src":"7354:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"returndata","nameLocation":"7381:10:6","nodeType":"VariableDeclaration","scope":1082,"src":"7368:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"7368:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1074,"initialValue":{"arguments":[{"id":1072,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"7415:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1070,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"7395:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7395:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7395:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7353:67:6"},{"expression":{"arguments":[{"id":1077,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"7473:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1078,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"7482:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7494:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"expression":{"id":1075,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"7437:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2814_$","typeString":"type(library AddressUpgradeable)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"7437:35:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7437:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1057,"id":1081,"nodeType":"Return","src":"7430:106:6"}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"6908:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1083,"implemented":true,"kind":"function","modifiers":[],"name":"_functionDelegateCall","nameLocation":"7097:21:6","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"target","nameLocation":"7127:6:6","nodeType":"VariableDeclaration","scope":1083,"src":"7119:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"7119:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"data","nameLocation":"7148:4:6","nodeType":"VariableDeclaration","scope":1083,"src":"7135:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"7135:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7118:35:6"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1083,"src":"7171:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"7171:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7170:14:6"},"scope":1089,"src":"7088:455:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"7549:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1088,"mutability":"mutable","name":"__gap","nameLocation":"7828:5:6","nodeType":"VariableDeclaration","scope":1089,"src":"7808:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"7808:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1087,"length":{"hexValue":"3530","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"7808:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1090,"src":"610:7226:6","usedErrors":[]}],"src":"116:7721:6"},"id":6},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[1099]},"id":1100,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1091,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"118:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1099,"linearizedBaseContracts":[1099],"name":"IBeaconUpgradeable","nameLocation":"208:18:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"233:162:7","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1098,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:7","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[],"src":"423:2:7"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"449:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:7"},"scope":1099,"src":"400:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1100,"src":"198:262:7","usedErrors":[]}],"src":"93:368:7"},"id":7},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"Initializable":[1268]},"id":1269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1101,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"118:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":1102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1269,"sourceUnit":2815,"src":"143:44:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"189:2198:8","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":1268,"linearizedBaseContracts":[1268],"name":"Initializable","nameLocation":"2406:13:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"2426:109:8","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":1106,"mutability":"mutable","name":"_initialized","nameLocation":"2554:12:8","nodeType":"VariableDeclaration","scope":1268,"src":"2540:26:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1105,"name":"uint8","nodeType":"ElementaryTypeName","src":"2540:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"2573:91:8","text":" @dev Indicates that the contract is in the process of being initialized."},"id":1109,"mutability":"mutable","name":"_initializing","nameLocation":"2682:13:8","nodeType":"VariableDeclaration","scope":1268,"src":"2669:26:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1108,"name":"bool","nodeType":"ElementaryTypeName","src":"2669:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"2702:90:8","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":1114,"name":"Initialized","nameLocation":"2803:11:8","nodeType":"EventDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2821:7:8","nodeType":"VariableDeclaration","scope":1114,"src":"2815:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1111,"name":"uint8","nodeType":"ElementaryTypeName","src":"2815:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2814:15:8"},"src":"2797:33:8"},{"body":{"id":1169,"nodeType":"Block","src":"3263:483:8","statements":[{"assignments":[1118],"declarations":[{"constant":false,"id":1118,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3278:14:8","nodeType":"VariableDeclaration","scope":1169,"src":"3273:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1117,"name":"bool","nodeType":"ElementaryTypeName","src":"3273:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1121,"initialValue":{"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3295:14:8","subExpression":{"id":1119,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"3296:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3273:36:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1123,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3341:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1124,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"3359:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3359:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3341:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3340:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3381:45:8","subExpression":{"arguments":[{"arguments":[{"id":1133,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3420:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$1268","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$1268","typeString":"contract Initializable"}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3412:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"3412:7:8","typeDescriptions":{}}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3412:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1129,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"3382:18:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2814_$","typeString":"type(library AddressUpgradeable)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"3382:29:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3382:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"3430:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3446:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3430:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3381:66:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3380:68:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3340:108:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3462:48:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3319:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3319:201:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"3319:201:8"},{"expression":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1146,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"3530:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3545:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3530:16:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1149,"nodeType":"ExpressionStatement","src":"3530:16:8"},{"condition":{"id":1150,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3560:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1156,"nodeType":"IfStatement","src":"3556:65:8","trueBody":{"id":1155,"nodeType":"Block","src":"3576:45:8","statements":[{"expression":{"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1151,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"3590:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3606:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3590:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1154,"nodeType":"ExpressionStatement","src":"3590:20:8"}]}},{"id":1157,"nodeType":"PlaceholderStatement","src":"3630:1:8"},{"condition":{"id":1158,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3645:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1168,"nodeType":"IfStatement","src":"3641:99:8","trueBody":{"id":1167,"nodeType":"Block","src":"3661:79:8","statements":[{"expression":{"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1159,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"3675:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3691:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3675:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"ExpressionStatement","src":"3675:21:8"},{"eventCall":{"arguments":[{"hexValue":"31","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3727:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1163,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"3715:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3715:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"EmitStatement","src":"3710:19:8"}]}}]},"documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"2836:399:8","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":1170,"name":"initializer","nameLocation":"3249:11:8","nodeType":"ModifierDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"3260:2:8"},"src":"3240:506:8","virtual":false,"visibility":"internal"},{"body":{"id":1202,"nodeType":"Block","src":"4857:255:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4875:14:8","subExpression":{"id":1176,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"4876:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4893:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1179,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4908:7:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4893:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4875:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4917:48:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4867:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4867:99:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1184,"nodeType":"ExpressionStatement","src":"4867:99:8"},{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1185,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4976:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1186,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4991:7:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4976:22:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1188,"nodeType":"ExpressionStatement","src":"4976:22:8"},{"expression":{"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1189,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"5008:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5024:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5008:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1192,"nodeType":"ExpressionStatement","src":"5008:20:8"},{"id":1193,"nodeType":"PlaceholderStatement","src":"5038:1:8"},{"expression":{"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1194,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"5049:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5065:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5049:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1197,"nodeType":"ExpressionStatement","src":"5049:21:8"},{"eventCall":{"arguments":[{"id":1199,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"5097:7:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1198,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"5085:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5085:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"EmitStatement","src":"5080:25:8"}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"3752:1062:8","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":1203,"name":"reinitializer","nameLocation":"4828:13:8","nodeType":"ModifierDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"version","nameLocation":"4848:7:8","nodeType":"VariableDeclaration","scope":1203,"src":"4842:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1172,"name":"uint8","nodeType":"ElementaryTypeName","src":"4842:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4841:15:8"},"src":"4819:293:8","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"5350:97:8","statements":[{"expression":{"arguments":[{"id":1207,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"5368:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5383:45:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":1206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5360:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5360:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"ExpressionStatement","src":"5360:69:8"},{"id":1211,"nodeType":"PlaceholderStatement","src":"5439:1:8"}]},"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"5118:199:8","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":1213,"name":"onlyInitializing","nameLocation":"5331:16:8","nodeType":"ModifierDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[],"src":"5347:2:8"},"src":"5322:125:8","virtual":false,"visibility":"internal"},{"body":{"id":1248,"nodeType":"Block","src":"5982:230:8","statements":[{"expression":{"arguments":[{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6000:14:8","subExpression":{"id":1218,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"6001:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6016:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":1217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5992:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5992:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"ExpressionStatement","src":"5992:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"6072:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6092:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1225,"name":"uint8","nodeType":"ElementaryTypeName","src":"6092:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6087:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6087:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6087:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6072:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1247,"nodeType":"IfStatement","src":"6068:138:8","trueBody":{"id":1246,"nodeType":"Block","src":"6104:102:8","statements":[{"expression":{"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1230,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"6118:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6138:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1232,"name":"uint8","nodeType":"ElementaryTypeName","src":"6138:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1231,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6133:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6133:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6118:30:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1237,"nodeType":"ExpressionStatement","src":"6118:30:8"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6184:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1240,"name":"uint8","nodeType":"ElementaryTypeName","src":"6184:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1239,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6179:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6179:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6179:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1238,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6167:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6167:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"EmitStatement","src":"6162:33:8"}]}}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"5453:475:8","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":1249,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5942:20:8","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"5962:2:8"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[],"src":"5982:0:8"},"scope":1268,"src":"5933:279:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1257,"nodeType":"Block","src":"6389:36:8","statements":[{"expression":{"id":1255,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"6406:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1254,"id":1256,"nodeType":"Return","src":"6399:19:8"}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"6218:102:8","text":" @dev Internal function that returns the initialized version. Returns `_initialized`"},"id":1258,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6334:22:8","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[],"src":"6356:2:8"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1258,"src":"6382:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1252,"name":"uint8","nodeType":"ElementaryTypeName","src":"6382:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6381:7:8"},"scope":1268,"src":"6325:100:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"6595:37:8","statements":[{"expression":{"id":1264,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"6612:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1263,"id":1265,"nodeType":"Return","src":"6605:20:8"}]},"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"6431:103:8","text":" @dev Internal function that returns the initialized version. Returns `_initializing`"},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6548:15:8","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[],"src":"6563:2:8"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"6589:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1261,"name":"bool","nodeType":"ElementaryTypeName","src":"6589:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6588:6:8"},"scope":1268,"src":"6539:93:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1269,"src":"2388:4246:8","usedErrors":[]}],"src":"118:6517:8"},"id":8},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ERC1967UpgradeUpgradeable":[1089],"IBeaconUpgradeable":[1099],"IERC1822ProxiableUpgradeable":[720],"Initializable":[1268],"StorageSlotUpgradeable":[2916],"UUPSUpgradeable":[1404]},"id":1405,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1270,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"120:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":1271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1405,"sourceUnit":721,"src":"145:56:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":1272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1405,"sourceUnit":1090,"src":"202:50:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":1273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1405,"sourceUnit":1269,"src":"253:29:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1275,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"970:13:9"},"id":1276,"nodeType":"InheritanceSpecifier","src":"970:13:9"},{"baseName":{"id":1277,"name":"IERC1822ProxiableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":720,"src":"985:28:9"},"id":1278,"nodeType":"InheritanceSpecifier","src":"985:28:9"},{"baseName":{"id":1279,"name":"ERC1967UpgradeUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1089,"src":"1015:25:9"},"id":1280,"nodeType":"InheritanceSpecifier","src":"1015:25:9"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"284:648:9","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":1404,"linearizedBaseContracts":[1404,1089,720,1268],"name":"UUPSUpgradeable","nameLocation":"951:15:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1285,"nodeType":"Block","src":"1107:7:9","statements":[]},"id":1286,"implemented":true,"kind":"function","modifiers":[{"id":1283,"kind":"modifierInvocation","modifierName":{"id":1282,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1090:16:9"},"nodeType":"ModifierInvocation","src":"1090:16:9"}],"name":"__UUPSUpgradeable_init","nameLocation":"1056:22:9","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"1078:2:9"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[],"src":"1107:0:9"},"scope":1404,"src":"1047:67:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"1190:7:9","statements":[]},"id":1292,"implemented":true,"kind":"function","modifiers":[{"id":1289,"kind":"modifierInvocation","modifierName":{"id":1288,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1173:16:9"},"nodeType":"ModifierInvocation","src":"1173:16:9"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1129:32:9","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[],"src":"1161:2:9"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"1190:0:9"},"scope":1404,"src":"1120:77:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"1202:87:9","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":1299,"mutability":"immutable","name":"__self","nameLocation":"1320:6:9","nodeType":"VariableDeclaration","scope":1404,"src":"1294:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"1294:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":1297,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1337:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1404","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1404","typeString":"contract UUPSUpgradeable"}],"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:9","typeDescriptions":{}}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1329:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":1321,"nodeType":"Block","src":"1868:205:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1305,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1894:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1404","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1404","typeString":"contract UUPSUpgradeable"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1886:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"1886:7:9","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1307,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"1903:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1886:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1911:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":1302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1878:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1878:80:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"1878:80:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1313,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"1976:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1976:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1315,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"2000:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1976:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2008:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":1312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1968:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1968:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"ExpressionStatement","src":"1968:87:9"},{"id":1320,"nodeType":"PlaceholderStatement","src":"2065:1:9"}]},"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"1349:493:9","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":1322,"name":"onlyProxy","nameLocation":"1856:9:9","nodeType":"ModifierDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[],"src":"1865:2:9"},"src":"1847:226:9","virtual":false,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"2303:120:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1328,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2329:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1404","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1404","typeString":"contract UUPSUpgradeable"}],"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2321:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"2321:7:9","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1330,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"2338:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2321:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:58:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":1325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2313:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:92:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1334,"nodeType":"ExpressionStatement","src":"2313:92:9"},{"id":1335,"nodeType":"PlaceholderStatement","src":"2415:1:9"}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"2079:195:9","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":1337,"name":"notDelegated","nameLocation":"2288:12:9","nodeType":"ModifierDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"2300:2:9"},"src":"2279:144:9","virtual":false,"visibility":"internal"},{"baseFunctions":[719],"body":{"id":1348,"nodeType":"Block","src":"3098:44:9","statements":[{"expression":{"id":1346,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3115:20:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1345,"id":1347,"nodeType":"Return","src":"3108:27:9"}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"2429:577:9","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":1349,"implemented":true,"kind":"function","modifiers":[{"id":1342,"kind":"modifierInvocation","modifierName":{"id":1341,"name":"notDelegated","nodeType":"IdentifierPath","referencedDeclaration":1337,"src":"3067:12:9"},"nodeType":"ModifierInvocation","src":"3067:12:9"}],"name":"proxiableUUID","nameLocation":"3020:13:9","nodeType":"FunctionDefinition","overrides":{"id":1340,"nodeType":"OverrideSpecifier","overrides":[],"src":"3058:8:9"},"parameters":{"id":1339,"nodeType":"ParameterList","parameters":[],"src":"3033:2:9"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1349,"src":"3089:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3089:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3088:9:9"},"scope":1404,"src":"3011:131:9","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1370,"nodeType":"Block","src":"3395:124:9","statements":[{"expression":{"arguments":[{"id":1358,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"3423:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1357,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"3405:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3405:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"ExpressionStatement","src":"3405:36:9"},{"expression":{"arguments":[{"id":1362,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"3473:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3502:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3492:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1363,"name":"bytes","nodeType":"ElementaryTypeName","src":"3496:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3492:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3506:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1361,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"3451:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3451:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"ExpressionStatement","src":"3451:61:9"}]},"documentation":{"id":1350,"nodeType":"StructuredDocumentation","src":"3148:169:9","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"3659cfe6","id":1371,"implemented":true,"kind":"function","modifiers":[{"id":1355,"kind":"modifierInvocation","modifierName":{"id":1354,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":1322,"src":"3385:9:9"},"nodeType":"ModifierInvocation","src":"3385:9:9"}],"name":"upgradeTo","nameLocation":"3331:9:9","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"newImplementation","nameLocation":"3349:17:9","nodeType":"VariableDeclaration","scope":1371,"src":"3341:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"3341:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3340:27:9"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"3395:0:9"},"scope":1404,"src":"3322:197:9","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":1391,"nodeType":"Block","src":"3875:115:9","statements":[{"expression":{"arguments":[{"id":1382,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"3903:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1381,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"3885:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3885:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1384,"nodeType":"ExpressionStatement","src":"3885:36:9"},{"expression":{"arguments":[{"id":1386,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"3953:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3972:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3978:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1385,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"3931:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3931:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"ExpressionStatement","src":"3931:52:9"}]},"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"3525:238:9","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"4f1ef286","id":1392,"implemented":true,"kind":"function","modifiers":[{"id":1379,"kind":"modifierInvocation","modifierName":{"id":1378,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":1322,"src":"3865:9:9"},"nodeType":"ModifierInvocation","src":"3865:9:9"}],"name":"upgradeToAndCall","nameLocation":"3777:16:9","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"newImplementation","nameLocation":"3802:17:9","nodeType":"VariableDeclaration","scope":1392,"src":"3794:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"3794:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"data","nameLocation":"3834:4:9","nodeType":"VariableDeclaration","scope":1392,"src":"3821:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1375,"name":"bytes","nodeType":"ElementaryTypeName","src":"3821:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3793:46:9"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[],"src":"3875:0:9"},"scope":1404,"src":"3768:222:9","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"3996:397:9","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":1398,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4407:17:9","nodeType":"FunctionDefinition","parameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"newImplementation","nameLocation":"4433:17:9","nodeType":"VariableDeclaration","scope":1398,"src":"4425:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"4425:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4424:27:9"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[],"src":"4468:0:9"},"scope":1404,"src":"4398:71:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"4475:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1403,"mutability":"mutable","name":"__gap","nameLocation":"4754:5:9","nodeType":"VariableDeclaration","scope":1404,"src":"4734:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"4734:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1402,"length":{"hexValue":"3530","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4742:2:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4734:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1405,"src":"933:3829:9","usedErrors":[]}],"src":"120:4643:9"},"id":9},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"Initializable":[1268],"PausableUpgradeable":[1531]},"id":1532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1406,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1532,"sourceUnit":2857,"src":"130:41:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1532,"sourceUnit":1269,"src":"172:42:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1410,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"697:13:10"},"id":1411,"nodeType":"InheritanceSpecifier","src":"697:13:10"},{"baseName":{"id":1412,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"712:18:10"},"id":1413,"nodeType":"InheritanceSpecifier","src":"712:18:10"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"216:439:10","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1531,"linearizedBaseContracts":[1531,2856,1268],"name":"PausableUpgradeable","nameLocation":"674:19:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"737:73:10","text":" @dev Emitted when the pause is triggered by `account`."},"id":1418,"name":"Paused","nameLocation":"821:6:10","nodeType":"EventDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:10","nodeType":"VariableDeclaration","scope":1418,"src":"828:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:10"},"src":"815:30:10"},{"anonymous":false,"documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"851:70:10","text":" @dev Emitted when the pause is lifted by `account`."},"id":1423,"name":"Unpaused","nameLocation":"932:8:10","nodeType":"EventDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:10","nodeType":"VariableDeclaration","scope":1423,"src":"941:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:10"},"src":"926:32:10"},{"constant":false,"id":1425,"mutability":"mutable","name":"_paused","nameLocation":"977:7:10","nodeType":"VariableDeclaration","scope":1531,"src":"964:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1424,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":1434,"nodeType":"Block","src":"1116:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1431,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"1126:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"ExpressionStatement","src":"1126:27:10"}]},"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"991:67:10","text":" @dev Initializes the contract in unpaused state."},"id":1435,"implemented":true,"kind":"function","modifiers":[{"id":1429,"kind":"modifierInvocation","modifierName":{"id":1428,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1099:16:10"},"nodeType":"ModifierInvocation","src":"1099:16:10"}],"name":"__Pausable_init","nameLocation":"1072:15:10","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[],"src":"1087:2:10"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[],"src":"1116:0:10"},"scope":1531,"src":"1063:97:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1444,"nodeType":"Block","src":"1229:32:10","statements":[{"expression":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1440,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"1239:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1443,"nodeType":"ExpressionStatement","src":"1239:15:10"}]},"id":1445,"implemented":true,"kind":"function","modifiers":[{"id":1438,"kind":"modifierInvocation","modifierName":{"id":1437,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1212:16:10"},"nodeType":"ModifierInvocation","src":"1212:16:10"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:10","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"1200:2:10"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"1229:0:10"},"scope":1531,"src":"1166:95:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"1472:47:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1448,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1482:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"ExpressionStatement","src":"1482:19:10"},{"id":1451,"nodeType":"PlaceholderStatement","src":"1511:1:10"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"1267:175:10","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1453,"name":"whenNotPaused","nameLocation":"1456:13:10","nodeType":"ModifierDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"1469:2:10"},"src":"1447:72:10","virtual":false,"visibility":"internal"},{"body":{"id":1460,"nodeType":"Block","src":"1719:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1456,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1729:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"ExpressionStatement","src":"1729:16:10"},{"id":1459,"nodeType":"PlaceholderStatement","src":"1755:1:10"}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"1525:167:10","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1461,"name":"whenPaused","nameLocation":"1706:10:10","nodeType":"ModifierDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[],"src":"1716:2:10"},"src":"1697:66:10","virtual":false,"visibility":"internal"},{"body":{"id":1469,"nodeType":"Block","src":"1911:31:10","statements":[{"expression":{"id":1467,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"1928:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1466,"id":1468,"nodeType":"Return","src":"1921:14:10"}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"1769:84:10","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:10","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[],"src":"1873:2:10"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"1905:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1464,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:10"},"scope":1531,"src":"1858:84:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1481,"nodeType":"Block","src":"2061:55:10","statements":[{"expression":{"arguments":[{"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:10","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1475,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"2080:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":1474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"2071:38:10"}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"1948:57:10","text":" @dev Throws if the contract is paused."},"id":1482,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:10","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[],"src":"2036:2:10"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"2061:0:10"},"scope":1531,"src":"2010:106:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1492,"nodeType":"Block","src":"2236:58:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1487,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"2254:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":1486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1491,"nodeType":"ExpressionStatement","src":"2246:41:10"}]},"documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"2122:61:10","text":" @dev Throws if the contract is not paused."},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:10","nodeType":"FunctionDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[],"src":"2211:2:10"},"returnParameters":{"id":1485,"nodeType":"ParameterList","parameters":[],"src":"2236:0:10"},"scope":1531,"src":"2188:106:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1508,"nodeType":"Block","src":"2478:66:10","statements":[{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1499,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"2488:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1502,"nodeType":"ExpressionStatement","src":"2488:14:10"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1504,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"2524:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1503,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"2517:6:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"EmitStatement","src":"2512:25:10"}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"2300:124:10","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1509,"implemented":true,"kind":"function","modifiers":[{"id":1497,"kind":"modifierInvocation","modifierName":{"id":1496,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":1453,"src":"2464:13:10"},"nodeType":"ModifierInvocation","src":"2464:13:10"}],"name":"_pause","nameLocation":"2438:6:10","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"2444:2:10"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"2478:0:10"},"scope":1531,"src":"2429:115:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1524,"nodeType":"Block","src":"2724:69:10","statements":[{"expression":{"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1515,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"2734:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1518,"nodeType":"ExpressionStatement","src":"2734:15:10"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1520,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"2773:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1519,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"2764:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2764:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1523,"nodeType":"EmitStatement","src":"2759:27:10"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"2550:121:10","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1525,"implemented":true,"kind":"function","modifiers":[{"id":1513,"kind":"modifierInvocation","modifierName":{"id":1512,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":1461,"src":"2713:10:10"},"nodeType":"ModifierInvocation","src":"2713:10:10"}],"name":"_unpause","nameLocation":"2685:8:10","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"2693:2:10"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[],"src":"2724:0:10"},"scope":1531,"src":"2676:117:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"2799:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1530,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:10","nodeType":"VariableDeclaration","scope":1531,"src":"3058:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"length":{"hexValue":"3439","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1532,"src":"656:2430:10","usedErrors":[]}],"src":"105:2982:10"},"id":10},"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"EscrowUpgradeable":[3733],"Initializable":[1268],"OwnableUpgradeable":[710],"PullPaymentUpgradeable":[1618]},"id":1619,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1533,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol","file":"../utils/escrow/EscrowUpgradeable.sol","id":1534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1619,"sourceUnit":3734,"src":"138:47:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1619,"sourceUnit":1269,"src":"186:42:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1537,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"1289:13:11"},"id":1538,"nodeType":"InheritanceSpecifier","src":"1289:13:11"}],"canonicalName":"PullPaymentUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"230:1014:11","text":" @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/development-recommendations/general/external-calls/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}.\n @custom:storage-size 51"},"fullyImplemented":true,"id":1618,"linearizedBaseContracts":[1618,1268],"name":"PullPaymentUpgradeable","nameLocation":"1263:22:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1541,"mutability":"mutable","name":"_escrow","nameLocation":"1335:7:11","nodeType":"VariableDeclaration","scope":1618,"src":"1309:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"},"typeName":{"id":1540,"nodeType":"UserDefinedTypeName","pathNode":{"id":1539,"name":"EscrowUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3733,"src":"1309:17:11"},"referencedDeclaration":3733,"src":"1309:17:11","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"}},"visibility":"private"},{"body":{"id":1549,"nodeType":"Block","src":"1405:47:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1546,"name":"__PullPayment_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"1415:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1415:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1548,"nodeType":"ExpressionStatement","src":"1415:30:11"}]},"id":1550,"implemented":true,"kind":"function","modifiers":[{"id":1544,"kind":"modifierInvocation","modifierName":{"id":1543,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1388:16:11"},"nodeType":"ModifierInvocation","src":"1388:16:11"}],"name":"__PullPayment_init","nameLocation":"1358:18:11","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"1376:2:11"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[],"src":"1405:0:11"},"scope":1618,"src":"1349:103:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1567,"nodeType":"Block","src":"1524:80:11","statements":[{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1555,"name":"_escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"1534:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1544:21:11","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_EscrowUpgradeable_$3733_$","typeString":"function () returns (contract EscrowUpgradeable)"},"typeName":{"id":1557,"nodeType":"UserDefinedTypeName","pathNode":{"id":1556,"name":"EscrowUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3733,"src":"1548:17:11"},"referencedDeclaration":3733,"src":"1548:17:11","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"}}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1544:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"}},"src":"1534:33:11","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"}},"id":1561,"nodeType":"ExpressionStatement","src":"1534:33:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1562,"name":"_escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":3639,"src":"1577:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1577:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"ExpressionStatement","src":"1577:20:11"}]},"id":1568,"implemented":true,"kind":"function","modifiers":[{"id":1553,"kind":"modifierInvocation","modifierName":{"id":1552,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1507:16:11"},"nodeType":"ModifierInvocation","src":"1507:16:11"}],"name":"__PullPayment_init_unchained","nameLocation":"1467:28:11","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"1495:2:11"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[],"src":"1524:0:11"},"scope":1618,"src":"1458:146:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1580,"nodeType":"Block","src":"2380:40:11","statements":[{"expression":{"arguments":[{"id":1577,"name":"payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"2407:5:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":1574,"name":"_escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2390:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3727,"src":"2390:16:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2390:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"2390:23:11"}]},"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"1610:701:11","text":" @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn.\n Causes the `escrow` to emit a {Withdrawn} event."},"functionSelector":"31b3eb94","id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawPayments","nameLocation":"2325:16:11","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"payee","nameLocation":"2358:5:11","nodeType":"VariableDeclaration","scope":1581,"src":"2342:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"2342:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2341:23:11"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[],"src":"2380:0:11"},"scope":1618,"src":"2316:104:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1594,"nodeType":"Block","src":"2600:48:11","statements":[{"expression":{"arguments":[{"id":1591,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"2636:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1589,"name":"_escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2617:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositsOf","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"2617:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2617:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1588,"id":1593,"nodeType":"Return","src":"2610:31:11"}]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"2426:107:11","text":" @dev Returns the payments owed to an address.\n @param dest The creditor's address."},"functionSelector":"e2982c21","id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"payments","nameLocation":"2547:8:11","nodeType":"FunctionDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"dest","nameLocation":"2564:4:11","nodeType":"VariableDeclaration","scope":1595,"src":"2556:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"2556:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2555:14:11"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"2591:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2590:9:11"},"scope":1618,"src":"2538:110:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1611,"nodeType":"Block","src":"3141:53:11","statements":[{"expression":{"arguments":[{"id":1608,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3182:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1603,"name":"_escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"3151:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowUpgradeable_$3733","typeString":"contract EscrowUpgradeable"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3695,"src":"3151:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1606,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3174:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3151:30:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3151:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1610,"nodeType":"ExpressionStatement","src":"3151:36:11"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"2654:411:11","text":" @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer.\n Causes the `escrow` to emit a {Deposited} event."},"id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"_asyncTransfer","nameLocation":"3079:14:11","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"dest","nameLocation":"3102:4:11","nodeType":"VariableDeclaration","scope":1612,"src":"3094:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"3094:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"amount","nameLocation":"3116:6:11","nodeType":"VariableDeclaration","scope":1612,"src":"3108:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3108:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3093:30:11"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"3141:0:11"},"scope":1618,"src":"3070:124:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"3200:254:11","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1617,"mutability":"mutable","name":"__gap","nameLocation":"3479:5:11","nodeType":"VariableDeclaration","scope":1618,"src":"3459:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"3459:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1616,"length":{"hexValue":"3530","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3467:2:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"3459:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1619,"src":"1245:2242:11","usedErrors":[]}],"src":"113:3375:11"},"id":11},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"Initializable":[1268],"ReentrancyGuardUpgradeable":[1691]},"id":1692,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1620,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1692,"sourceUnit":1269,"src":"141:42:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1623,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"984:13:12"},"id":1624,"nodeType":"InheritanceSpecifier","src":"984:13:12"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"185:750:12","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1691,"linearizedBaseContracts":[1691,1268],"name":"ReentrancyGuardUpgradeable","nameLocation":"954:26:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1627,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1777:12:12","nodeType":"VariableDeclaration","scope":1691,"src":"1752:41:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1792:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1630,"mutability":"constant","name":"_ENTERED","nameLocation":"1824:8:12","nodeType":"VariableDeclaration","scope":1691,"src":"1799:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1632,"mutability":"mutable","name":"_status","nameLocation":"1859:7:12","nodeType":"VariableDeclaration","scope":1691,"src":"1843:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1843:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1640,"nodeType":"Block","src":"1933:51:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1637,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"1943:32:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1943:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1639,"nodeType":"ExpressionStatement","src":"1943:34:12"}]},"id":1641,"implemented":true,"kind":"function","modifiers":[{"id":1635,"kind":"modifierInvocation","modifierName":{"id":1634,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1916:16:12"},"nodeType":"ModifierInvocation","src":"1916:16:12"}],"name":"__ReentrancyGuard_init","nameLocation":"1882:22:12","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[],"src":"1904:2:12"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[],"src":"1933:0:12"},"scope":1691,"src":"1873:111:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1650,"nodeType":"Block","src":"2060:39:12","statements":[{"expression":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1646,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2070:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1647,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"2080:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2070:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1649,"nodeType":"ExpressionStatement","src":"2070:22:12"}]},"id":1651,"implemented":true,"kind":"function","modifiers":[{"id":1644,"kind":"modifierInvocation","modifierName":{"id":1643,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"2043:16:12"},"nodeType":"ModifierInvocation","src":"2043:16:12"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1999:32:12","nodeType":"FunctionDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"2031:2:12"},"returnParameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"2060:0:12"},"scope":1691,"src":"1990:109:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1661,"nodeType":"Block","src":"2500:79:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1654,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"2510:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2510:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1656,"nodeType":"ExpressionStatement","src":"2510:21:12"},{"id":1657,"nodeType":"PlaceholderStatement","src":"2541:1:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1658,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"2552:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2552:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"2552:20:12"}]},"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"2105:366:12","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1662,"name":"nonReentrant","nameLocation":"2485:12:12","nodeType":"ModifierDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"2497:2:12"},"src":"2476:103:12","virtual":false,"visibility":"internal"},{"body":{"id":1676,"nodeType":"Block","src":"2624:248:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2717:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1667,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2728:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2717:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2738:33:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":1665,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2709:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2709:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1671,"nodeType":"ExpressionStatement","src":"2709:63:12"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2847:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1673,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2857:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2847:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"2847:18:12"}]},"id":1677,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2594:19:12","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"2613:2:12"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"2624:0:12"},"scope":1691,"src":"2585:287:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1684,"nodeType":"Block","src":"2916:171:12","statements":[{"expression":{"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1680,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3058:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1681,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"3068:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3058:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1683,"nodeType":"ExpressionStatement","src":"3058:22:12"}]},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2887:18:12","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[],"src":"2905:2:12"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[],"src":"2916:0:12"},"scope":1691,"src":"2878:209:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"3093:254:12","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1690,"mutability":"mutable","name":"__gap","nameLocation":"3372:5:12","nodeType":"VariableDeclaration","scope":1691,"src":"3352:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1689,"length":{"hexValue":"3439","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3360:2:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3352:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1692,"src":"936:2444:12","usedErrors":[]}],"src":"117:3264:12"},"id":12},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"ERC20Upgradeable":[2303],"IERC20MetadataUpgradeable":[2530],"IERC20Upgradeable":[2381],"Initializable":[1268]},"id":2304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1693,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:13"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":1694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2304,"sourceUnit":2382,"src":"135:33:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":1695,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2304,"sourceUnit":2531,"src":"169:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1696,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2304,"sourceUnit":2857,"src":"222:44:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1697,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2304,"sourceUnit":1269,"src":"267:45:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1699,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"1514:13:13"},"id":1700,"nodeType":"InheritanceSpecifier","src":"1514:13:13"},{"baseName":{"id":1701,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"1529:18:13"},"id":1702,"nodeType":"InheritanceSpecifier","src":"1529:18:13"},{"baseName":{"id":1703,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":2381,"src":"1549:17:13"},"id":1704,"nodeType":"InheritanceSpecifier","src":"1549:17:13"},{"baseName":{"id":1705,"name":"IERC20MetadataUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"1568:25:13"},"id":1706,"nodeType":"InheritanceSpecifier","src":"1568:25:13"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"314:1170:13","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":2303,"linearizedBaseContracts":[2303,2530,2381,2856,1268],"name":"ERC20Upgradeable","nameLocation":"1494:16:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1710,"mutability":"mutable","name":"_balances","nameLocation":"1636:9:13","nodeType":"VariableDeclaration","scope":2303,"src":"1600:45:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1709,"keyType":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"1608:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1600:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1716,"mutability":"mutable","name":"_allowances","nameLocation":"1708:11:13","nodeType":"VariableDeclaration","scope":2303,"src":"1652:67:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1715,"keyType":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"1660:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1652:47:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1714,"keyType":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1671:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1718,"mutability":"mutable","name":"_totalSupply","nameLocation":"1742:12:13","nodeType":"VariableDeclaration","scope":2303,"src":"1726:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1726:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1720,"mutability":"mutable","name":"_name","nameLocation":"1776:5:13","nodeType":"VariableDeclaration","scope":2303,"src":"1761:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1719,"name":"string","nodeType":"ElementaryTypeName","src":"1761:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1722,"mutability":"mutable","name":"_symbol","nameLocation":"1802:7:13","nodeType":"VariableDeclaration","scope":2303,"src":"1787:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1721,"name":"string","nodeType":"ElementaryTypeName","src":"1787:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1737,"nodeType":"Block","src":"2211:55:13","statements":[{"expression":{"arguments":[{"id":1733,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2244:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1734,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2251:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1732,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2221:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2221:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"2221:38:13"}]},"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"1816:298:13","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1738,"implemented":true,"kind":"function","modifiers":[{"id":1730,"kind":"modifierInvocation","modifierName":{"id":1729,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"2194:16:13"},"nodeType":"ModifierInvocation","src":"2194:16:13"}],"name":"__ERC20_init","nameLocation":"2128:12:13","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"name_","nameLocation":"2155:5:13","nodeType":"VariableDeclaration","scope":1738,"src":"2141:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1724,"name":"string","nodeType":"ElementaryTypeName","src":"2141:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"symbol_","nameLocation":"2176:7:13","nodeType":"VariableDeclaration","scope":1738,"src":"2162:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1726,"name":"string","nodeType":"ElementaryTypeName","src":"2162:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2140:44:13"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"2211:0:13"},"scope":2303,"src":"2119:147:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1755,"nodeType":"Block","src":"2374:57:13","statements":[{"expression":{"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1747,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"2384:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1748,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"2392:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2384:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1750,"nodeType":"ExpressionStatement","src":"2384:13:13"},{"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1751,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2407:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1752,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2417:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2407:17:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1754,"nodeType":"ExpressionStatement","src":"2407:17:13"}]},"id":1756,"implemented":true,"kind":"function","modifiers":[{"id":1745,"kind":"modifierInvocation","modifierName":{"id":1744,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"2357:16:13"},"nodeType":"ModifierInvocation","src":"2357:16:13"}],"name":"__ERC20_init_unchained","nameLocation":"2281:22:13","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"name_","nameLocation":"2318:5:13","nodeType":"VariableDeclaration","scope":1756,"src":"2304:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"symbol_","nameLocation":"2339:7:13","nodeType":"VariableDeclaration","scope":1756,"src":"2325:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1741,"name":"string","nodeType":"ElementaryTypeName","src":"2325:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2303:44:13"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[],"src":"2374:0:13"},"scope":2303,"src":"2272:159:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2517],"body":{"id":1765,"nodeType":"Block","src":"2565:29:13","statements":[{"expression":{"id":1763,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"2582:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1762,"id":1764,"nodeType":"Return","src":"2575:12:13"}]},"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"2437:54:13","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2505:4:13","nodeType":"FunctionDefinition","overrides":{"id":1759,"nodeType":"OverrideSpecifier","overrides":[],"src":"2532:8:13"},"parameters":{"id":1758,"nodeType":"ParameterList","parameters":[],"src":"2509:2:13"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"2550:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1760,"name":"string","nodeType":"ElementaryTypeName","src":"2550:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2549:15:13"},"scope":2303,"src":"2496:98:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2523],"body":{"id":1775,"nodeType":"Block","src":"2778:31:13","statements":[{"expression":{"id":1773,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2795:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1772,"id":1774,"nodeType":"Return","src":"2788:14:13"}]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"2600:102:13","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2716:6:13","nodeType":"FunctionDefinition","overrides":{"id":1769,"nodeType":"OverrideSpecifier","overrides":[],"src":"2745:8:13"},"parameters":{"id":1768,"nodeType":"ParameterList","parameters":[],"src":"2722:2:13"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1776,"src":"2763:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1770,"name":"string","nodeType":"ElementaryTypeName","src":"2763:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2762:15:13"},"scope":2303,"src":"2707:102:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2529],"body":{"id":1785,"nodeType":"Block","src":"3498:26:13","statements":[{"expression":{"hexValue":"3138","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3515:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1782,"id":1784,"nodeType":"Return","src":"3508:9:13"}]},"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"2815:613:13","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1786,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3442:8:13","nodeType":"FunctionDefinition","overrides":{"id":1779,"nodeType":"OverrideSpecifier","overrides":[],"src":"3473:8:13"},"parameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"3450:2:13"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1786,"src":"3491:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1780,"name":"uint8","nodeType":"ElementaryTypeName","src":"3491:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3490:7:13"},"scope":2303,"src":"3433:91:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2330],"body":{"id":1795,"nodeType":"Block","src":"3654:36:13","statements":[{"expression":{"id":1793,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"3671:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1792,"id":1794,"nodeType":"Return","src":"3664:19:13"}]},"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"3530:49:13","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1796,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3593:11:13","nodeType":"FunctionDefinition","overrides":{"id":1789,"nodeType":"OverrideSpecifier","overrides":[],"src":"3627:8:13"},"parameters":{"id":1788,"nodeType":"ParameterList","parameters":[],"src":"3604:2:13"},"returnParameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1796,"src":"3645:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3644:9:13"},"scope":2303,"src":"3584:106:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2338],"body":{"id":1809,"nodeType":"Block","src":"3831:42:13","statements":[{"expression":{"baseExpression":{"id":1805,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3848:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1807,"indexExpression":{"id":1806,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"3858:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3848:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1804,"id":1808,"nodeType":"Return","src":"3841:25:13"}]},"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"3696:47:13","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3757:9:13","nodeType":"FunctionDefinition","overrides":{"id":1801,"nodeType":"OverrideSpecifier","overrides":[],"src":"3804:8:13"},"parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"account","nameLocation":"3775:7:13","nodeType":"VariableDeclaration","scope":1810,"src":"3767:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"3767:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3766:17:13"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1810,"src":"3822:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3821:9:13"},"scope":2303,"src":"3748:125:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2348],"body":{"id":1834,"nodeType":"Block","src":"4154:104:13","statements":[{"assignments":[1822],"declarations":[{"constant":false,"id":1822,"mutability":"mutable","name":"owner","nameLocation":"4172:5:13","nodeType":"VariableDeclaration","scope":1834,"src":"4164:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1825,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1823,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4180:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4180:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4164:28:13"},{"expression":{"arguments":[{"id":1827,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"4212:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1828,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"4219:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1829,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4223:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1826,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4202:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4202:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1831,"nodeType":"ExpressionStatement","src":"4202:28:13"},{"expression":{"hexValue":"74727565","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4247:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1820,"id":1833,"nodeType":"Return","src":"4240:11:13"}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"3879:185:13","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4078:8:13","nodeType":"FunctionDefinition","overrides":{"id":1817,"nodeType":"OverrideSpecifier","overrides":[],"src":"4130:8:13"},"parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"to","nameLocation":"4095:2:13","nodeType":"VariableDeclaration","scope":1835,"src":"4087:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"amount","nameLocation":"4107:6:13","nodeType":"VariableDeclaration","scope":1835,"src":"4099:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4086:28:13"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"4148:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1818,"name":"bool","nodeType":"ElementaryTypeName","src":"4148:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4147:6:13"},"scope":2303,"src":"4069:189:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2358],"body":{"id":1852,"nodeType":"Block","src":"4414:51:13","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1846,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"4431:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1848,"indexExpression":{"id":1847,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"4443:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4431:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1850,"indexExpression":{"id":1849,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"4450:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4431:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1845,"id":1851,"nodeType":"Return","src":"4424:34:13"}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"4264:47:13","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4325:9:13","nodeType":"FunctionDefinition","overrides":{"id":1842,"nodeType":"OverrideSpecifier","overrides":[],"src":"4387:8:13"},"parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"owner","nameLocation":"4343:5:13","nodeType":"VariableDeclaration","scope":1853,"src":"4335:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"4335:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"spender","nameLocation":"4358:7:13","nodeType":"VariableDeclaration","scope":1853,"src":"4350:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1839,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4334:32:13"},"returnParameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1853,"src":"4405:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"4405:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4404:9:13"},"scope":2303,"src":"4316:149:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2368],"body":{"id":1877,"nodeType":"Block","src":"4862:108:13","statements":[{"assignments":[1865],"declarations":[{"constant":false,"id":1865,"mutability":"mutable","name":"owner","nameLocation":"4880:5:13","nodeType":"VariableDeclaration","scope":1877,"src":"4872:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"4872:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1868,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1866,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4888:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4888:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4872:28:13"},{"expression":{"arguments":[{"id":1870,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4919:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1871,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"4926:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4935:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1869,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"4910:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4910:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"ExpressionStatement","src":"4910:32:13"},{"expression":{"hexValue":"74727565","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4959:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1863,"id":1876,"nodeType":"Return","src":"4952:11:13"}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"4471:297:13","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1878,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4782:7:13","nodeType":"FunctionDefinition","overrides":{"id":1860,"nodeType":"OverrideSpecifier","overrides":[],"src":"4838:8:13"},"parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"spender","nameLocation":"4798:7:13","nodeType":"VariableDeclaration","scope":1878,"src":"4790:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"4790:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"amount","nameLocation":"4815:6:13","nodeType":"VariableDeclaration","scope":1878,"src":"4807:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"4807:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4789:33:13"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1878,"src":"4856:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1861,"name":"bool","nodeType":"ElementaryTypeName","src":"4856:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4855:6:13"},"scope":2303,"src":"4773:197:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2380],"body":{"id":1910,"nodeType":"Block","src":"5665:153:13","statements":[{"assignments":[1892],"declarations":[{"constant":false,"id":1892,"mutability":"mutable","name":"spender","nameLocation":"5683:7:13","nodeType":"VariableDeclaration","scope":1910,"src":"5675:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1895,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1893,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"5693:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5693:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5675:30:13"},{"expression":{"arguments":[{"id":1897,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5731:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1898,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"5737:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1899,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"5746:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1896,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"5715:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5715:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1901,"nodeType":"ExpressionStatement","src":"5715:38:13"},{"expression":{"arguments":[{"id":1903,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5773:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1904,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5779:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1905,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"5783:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1902,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"5763:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5763:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1907,"nodeType":"ExpressionStatement","src":"5763:27:13"},{"expression":{"hexValue":"74727565","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5807:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1890,"id":1909,"nodeType":"Return","src":"5800:11:13"}]},"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"4976:551:13","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1911,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5541:12:13","nodeType":"FunctionDefinition","overrides":{"id":1887,"nodeType":"OverrideSpecifier","overrides":[],"src":"5641:8:13"},"parameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"from","nameLocation":"5571:4:13","nodeType":"VariableDeclaration","scope":1911,"src":"5563:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"5563:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"to","nameLocation":"5593:2:13","nodeType":"VariableDeclaration","scope":1911,"src":"5585:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"5585:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"amount","nameLocation":"5613:6:13","nodeType":"VariableDeclaration","scope":1911,"src":"5605:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"5605:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5553:72:13"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1911,"src":"5659:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1888,"name":"bool","nodeType":"ElementaryTypeName","src":"5659:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5658:6:13"},"scope":2303,"src":"5532:286:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1939,"nodeType":"Block","src":"6307:140:13","statements":[{"assignments":[1922],"declarations":[{"constant":false,"id":1922,"mutability":"mutable","name":"owner","nameLocation":"6325:5:13","nodeType":"VariableDeclaration","scope":1939,"src":"6317:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"6317:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1925,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1923,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"6333:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6317:28:13"},{"expression":{"arguments":[{"id":1927,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"6364:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1928,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"6371:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1930,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"6390:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1931,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"6397:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1929,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"6380:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6380:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1933,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"6408:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6380:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1926,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"6355:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6355:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1936,"nodeType":"ExpressionStatement","src":"6355:64:13"},{"expression":{"hexValue":"74727565","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6436:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1920,"id":1938,"nodeType":"Return","src":"6429:11:13"}]},"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"5824:384:13","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1940,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6222:17:13","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"spender","nameLocation":"6248:7:13","nodeType":"VariableDeclaration","scope":1940,"src":"6240:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"6240:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"addedValue","nameLocation":"6265:10:13","nodeType":"VariableDeclaration","scope":1940,"src":"6257:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6239:37:13"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1940,"src":"6301:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1918,"name":"bool","nodeType":"ElementaryTypeName","src":"6301:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6300:6:13"},"scope":2303,"src":"6213:234:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1980,"nodeType":"Block","src":"7033:328:13","statements":[{"assignments":[1951],"declarations":[{"constant":false,"id":1951,"mutability":"mutable","name":"owner","nameLocation":"7051:5:13","nodeType":"VariableDeclaration","scope":1980,"src":"7043:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"7043:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1954,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1952,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"7059:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7059:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7043:28:13"},{"assignments":[1956],"declarations":[{"constant":false,"id":1956,"mutability":"mutable","name":"currentAllowance","nameLocation":"7089:16:13","nodeType":"VariableDeclaration","scope":1980,"src":"7081:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"7081:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1961,"initialValue":{"arguments":[{"id":1958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"7118:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1959,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"7125:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1957,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"7108:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7108:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7081:52:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1963,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7151:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1964,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"7171:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7151:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7188:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1962,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7143:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7143:85:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1968,"nodeType":"ExpressionStatement","src":"7143:85:13"},{"id":1977,"nodeType":"UncheckedBlock","src":"7238:95:13","statements":[{"expression":{"arguments":[{"id":1970,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"7271:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1971,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"7278:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1972,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7287:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1973,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"7306:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7287:34:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1969,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"7262:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7262:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1976,"nodeType":"ExpressionStatement","src":"7262:60:13"}]},{"expression":{"hexValue":"74727565","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7350:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1949,"id":1979,"nodeType":"Return","src":"7343:11:13"}]},"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"6453:476:13","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6943:17:13","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"spender","nameLocation":"6969:7:13","nodeType":"VariableDeclaration","scope":1981,"src":"6961:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"6961:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"subtractedValue","nameLocation":"6986:15:13","nodeType":"VariableDeclaration","scope":1981,"src":"6978:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"6978:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6960:42:13"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"7027:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1947,"name":"bool","nodeType":"ElementaryTypeName","src":"7027:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7026:6:13"},"scope":2303,"src":"6934:427:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2057,"nodeType":"Block","src":"7923:710:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"7941:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7957:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7949:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"7949:7:13","typeDescriptions":{}}},"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7949:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7941:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7961:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7933:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7933:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2000,"nodeType":"ExpressionStatement","src":"7933:68:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2002,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8019:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8033:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8025:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"8025:7:13","typeDescriptions":{}}},"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8025:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8019:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8037:37:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":2001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8011:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8011:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2010,"nodeType":"ExpressionStatement","src":"8011:64:13"},{"expression":{"arguments":[{"id":2012,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8107:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2013,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8113:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8117:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2011,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"8086:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8086:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2016,"nodeType":"ExpressionStatement","src":"8086:38:13"},{"assignments":[2018],"declarations":[{"constant":false,"id":2018,"mutability":"mutable","name":"fromBalance","nameLocation":"8143:11:13","nodeType":"VariableDeclaration","scope":2057,"src":"8135:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"8135:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2022,"initialValue":{"baseExpression":{"id":2019,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"8157:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2021,"indexExpression":{"id":2020,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8167:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8157:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8135:37:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2024,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8190:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2025,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8205:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8190:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8213:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":2023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8182:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8182:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2029,"nodeType":"ExpressionStatement","src":"8182:72:13"},{"id":2044,"nodeType":"UncheckedBlock","src":"8264:273:13","statements":[{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2030,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"8288:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2032,"indexExpression":{"id":2031,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8298:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8288:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2033,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8306:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2034,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8320:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8306:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8288:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2037,"nodeType":"ExpressionStatement","src":"8288:38:13"},{"expression":{"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2038,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"8503:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2040,"indexExpression":{"id":2039,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8513:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8503:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2041,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8520:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8503:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2043,"nodeType":"ExpressionStatement","src":"8503:23:13"}]},{"eventCall":{"arguments":[{"id":2046,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8561:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2047,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8567:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2048,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8571:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2045,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"8552:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8552:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2050,"nodeType":"EmitStatement","src":"8547:31:13"},{"expression":{"arguments":[{"id":2052,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8609:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2053,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8615:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2054,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8619:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2051,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"8589:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8589:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2056,"nodeType":"ExpressionStatement","src":"8589:37:13"}]},"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"7367:443:13","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":2058,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7824:9:13","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"from","nameLocation":"7851:4:13","nodeType":"VariableDeclaration","scope":2058,"src":"7843:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"7843:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"to","nameLocation":"7873:2:13","nodeType":"VariableDeclaration","scope":2058,"src":"7865:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"7865:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"amount","nameLocation":"7893:6:13","nodeType":"VariableDeclaration","scope":2058,"src":"7885:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7885:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7833:72:13"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[],"src":"7923:0:13"},"scope":2303,"src":"7815:818:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2114,"nodeType":"Block","src":"8974:470:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"8992:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9003:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"9003:7:13","typeDescriptions":{}}},"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9003:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8992:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9015:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":2066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8984:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8984:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2075,"nodeType":"ExpressionStatement","src":"8984:65:13"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9089:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9081:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"9081:7:13","typeDescriptions":{}}},"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9081:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2081,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"9093:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2082,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"9102:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2076,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"9060:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9060:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2084,"nodeType":"ExpressionStatement","src":"9060:49:13"},{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2085,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9120:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2086,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"9136:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9120:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"9120:22:13"},{"id":2095,"nodeType":"UncheckedBlock","src":"9152:175:13","statements":[{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2089,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"9288:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2091,"indexExpression":{"id":2090,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"9298:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9288:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2092,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"9310:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9288:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"nodeType":"ExpressionStatement","src":"9288:28:13"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9358:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9350:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"9350:7:13","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9350:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2101,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"9362:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2102,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"9371:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2096,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"9341:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9341:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2104,"nodeType":"EmitStatement","src":"9336:42:13"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9417:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9409:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"9409:7:13","typeDescriptions":{}}},"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9409:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2110,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"9421:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2111,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"9430:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2105,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"9389:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9389:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2113,"nodeType":"ExpressionStatement","src":"9389:48:13"}]},"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"8639:265:13","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":2115,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8918:5:13","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"account","nameLocation":"8932:7:13","nodeType":"VariableDeclaration","scope":2115,"src":"8924:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2060,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2063,"mutability":"mutable","name":"amount","nameLocation":"8949:6:13","nodeType":"VariableDeclaration","scope":2115,"src":"8941:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"8941:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8923:33:13"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"8974:0:13"},"scope":2303,"src":"8909:535:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2186,"nodeType":"Block","src":"9829:594:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"9847:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9866:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9858:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"9858:7:13","typeDescriptions":{}}},"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9858:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9847:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9870:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":2123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9839:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9839:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2132,"nodeType":"ExpressionStatement","src":"9839:67:13"},{"expression":{"arguments":[{"id":2134,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"9938:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9955:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9947:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"9947:7:13","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9947:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2139,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"9959:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2133,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"9917:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9917:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2141,"nodeType":"ExpressionStatement","src":"9917:49:13"},{"assignments":[2143],"declarations":[{"constant":false,"id":2143,"mutability":"mutable","name":"accountBalance","nameLocation":"9985:14:13","nodeType":"VariableDeclaration","scope":2186,"src":"9977:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"9977:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2147,"initialValue":{"baseExpression":{"id":2144,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"10002:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2146,"indexExpression":{"id":2145,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"10012:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10002:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9977:43:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2149,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"10038:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2150,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10056:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10038:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10064:36:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":2148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10030:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10030:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"ExpressionStatement","src":"10030:71:13"},{"id":2167,"nodeType":"UncheckedBlock","src":"10111:194:13","statements":[{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2155,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"10135:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2157,"indexExpression":{"id":2156,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"10145:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10135:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2158,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"10156:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2159,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10173:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10156:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10135:44:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ExpressionStatement","src":"10135:44:13"},{"expression":{"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2163,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"10272:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2164,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10288:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10272:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2166,"nodeType":"ExpressionStatement","src":"10272:22:13"}]},{"eventCall":{"arguments":[{"id":2169,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"10329:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10346:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10338:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"10338:7:13","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10338:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2174,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10350:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2168,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"10320:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10320:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2176,"nodeType":"EmitStatement","src":"10315:42:13"},{"expression":{"arguments":[{"id":2178,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"10388:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10405:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10397:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"10397:7:13","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10397:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2183,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10409:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2177,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"10368:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10368:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2185,"nodeType":"ExpressionStatement","src":"10368:48:13"}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"9450:309:13","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9773:5:13","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"account","nameLocation":"9787:7:13","nodeType":"VariableDeclaration","scope":2187,"src":"9779:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"9779:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"amount","nameLocation":"9804:6:13","nodeType":"VariableDeclaration","scope":2187,"src":"9796:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"9796:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9778:33:13"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[],"src":"9829:0:13"},"scope":2303,"src":"9764:659:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2231,"nodeType":"Block","src":"10959:257:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2198,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"10977:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10994:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10986:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"10986:7:13","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10986:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10977:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10998:38:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":2197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10969:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10969:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2206,"nodeType":"ExpressionStatement","src":"10969:68:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"11055:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11074:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11066:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"11066:7:13","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11066:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11055:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11078:36:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":2207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11047:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11047:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2216,"nodeType":"ExpressionStatement","src":"11047:68:13"},{"expression":{"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2217,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"11126:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2220,"indexExpression":{"id":2218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"11138:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11126:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2221,"indexExpression":{"id":2219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"11145:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11126:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2222,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"11156:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11126:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2224,"nodeType":"ExpressionStatement","src":"11126:36:13"},{"eventCall":{"arguments":[{"id":2226,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"11186:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2227,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"11193:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2228,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"11202:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2225,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"11177:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11177:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2230,"nodeType":"EmitStatement","src":"11172:37:13"}]},"documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"10429:412:13","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":2232,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10855:8:13","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"owner","nameLocation":"10881:5:13","nodeType":"VariableDeclaration","scope":2232,"src":"10873:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"10873:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"spender","nameLocation":"10904:7:13","nodeType":"VariableDeclaration","scope":2232,"src":"10896:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"10896:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"amount","nameLocation":"10929:6:13","nodeType":"VariableDeclaration","scope":2232,"src":"10921:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"10921:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10863:78:13"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[],"src":"10959:0:13"},"scope":2303,"src":"10846:370:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2274,"nodeType":"Block","src":"11617:321:13","statements":[{"assignments":[2243],"declarations":[{"constant":false,"id":2243,"mutability":"mutable","name":"currentAllowance","nameLocation":"11635:16:13","nodeType":"VariableDeclaration","scope":2274,"src":"11627:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"11627:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2248,"initialValue":{"arguments":[{"id":2245,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"11664:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2246,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"11671:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2244,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"11654:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11654:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11627:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"11693:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11718:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"11718:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2250,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11713:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11713:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11713:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11693:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2273,"nodeType":"IfStatement","src":"11689:243:13","trueBody":{"id":2272,"nodeType":"Block","src":"11732:200:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2257,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"11754:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2258,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"11774:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11754:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11782:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":2256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11746:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11746:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"ExpressionStatement","src":"11746:68:13"},{"id":2271,"nodeType":"UncheckedBlock","src":"11828:94:13","statements":[{"expression":{"arguments":[{"id":2264,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"11865:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2265,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"11872:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2266,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"11881:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2267,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"11900:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11881:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2263,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"11856:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11856:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2270,"nodeType":"ExpressionStatement","src":"11856:51:13"}]}]}}]},"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"11222:270:13","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":2275,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11506:15:13","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"owner","nameLocation":"11539:5:13","nodeType":"VariableDeclaration","scope":2275,"src":"11531:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"11531:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"spender","nameLocation":"11562:7:13","nodeType":"VariableDeclaration","scope":2275,"src":"11554:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"11554:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"amount","nameLocation":"11587:6:13","nodeType":"VariableDeclaration","scope":2275,"src":"11579:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"11579:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11521:78:13"},"returnParameters":{"id":2241,"nodeType":"ParameterList","parameters":[],"src":"11617:0:13"},"scope":2303,"src":"11497:441:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2285,"nodeType":"Block","src":"12641:2:13","statements":[]},"documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"11944:573:13","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2286,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12531:20:13","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"from","nameLocation":"12569:4:13","nodeType":"VariableDeclaration","scope":2286,"src":"12561:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"12561:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"to","nameLocation":"12591:2:13","nodeType":"VariableDeclaration","scope":2286,"src":"12583:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"12583:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"amount","nameLocation":"12611:6:13","nodeType":"VariableDeclaration","scope":2286,"src":"12603:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"12603:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12551:72:13"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[],"src":"12641:0:13"},"scope":2303,"src":"12522:121:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2296,"nodeType":"Block","src":"13349:2:13","statements":[]},"documentation":{"id":2287,"nodeType":"StructuredDocumentation","src":"12649:577:13","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2297,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13240:19:13","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"from","nameLocation":"13277:4:13","nodeType":"VariableDeclaration","scope":2297,"src":"13269:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2288,"name":"address","nodeType":"ElementaryTypeName","src":"13269:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2291,"mutability":"mutable","name":"to","nameLocation":"13299:2:13","nodeType":"VariableDeclaration","scope":2297,"src":"13291:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"13291:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"amount","nameLocation":"13319:6:13","nodeType":"VariableDeclaration","scope":2297,"src":"13311:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"13311:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13259:72:13"},"returnParameters":{"id":2295,"nodeType":"ParameterList","parameters":[],"src":"13349:0:13"},"scope":2303,"src":"13231:120:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"13357:254:13","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2302,"mutability":"mutable","name":"__gap","nameLocation":"13636:5:13","nodeType":"VariableDeclaration","scope":2303,"src":"13616:25:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"13616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"length":{"hexValue":"3435","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13624:2:13","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13616:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":2304,"src":"1485:12159:13","usedErrors":[]}],"src":"110:13535:13"},"id":13},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[2381]},"id":2382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2305,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"131:70:14","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2381,"linearizedBaseContracts":[2381],"name":"IERC20Upgradeable","nameLocation":"212:17:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"236:158:14","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":2315,"name":"Transfer","nameLocation":"405:8:14","nodeType":"EventDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:14","nodeType":"VariableDeclaration","scope":2315,"src":"414:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2311,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:14","nodeType":"VariableDeclaration","scope":2315,"src":"436:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2313,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:14","nodeType":"VariableDeclaration","scope":2315,"src":"456:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:14"},"src":"399:72:14"},{"anonymous":false,"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"477:148:14","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":2324,"name":"Approval","nameLocation":"636:8:14","nodeType":"EventDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:14","nodeType":"VariableDeclaration","scope":2324,"src":"645:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2317,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2320,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:14","nodeType":"VariableDeclaration","scope":2324,"src":"668:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2322,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:14","nodeType":"VariableDeclaration","scope":2324,"src":"693:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:14"},"src":"630:78:14"},{"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"714:66:14","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":2330,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:14","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[],"src":"805:2:14"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2330,"src":"831:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:14"},"scope":2381,"src":"785:55:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"846:72:14","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":2338,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:14","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"account","nameLocation":"950:7:14","nodeType":"VariableDeclaration","scope":2338,"src":"942:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:14"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"982:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:14"},"scope":2381,"src":"923:68:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"997:202:14","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2348,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:14","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"to","nameLocation":"1230:2:14","nodeType":"VariableDeclaration","scope":2348,"src":"1222:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"amount","nameLocation":"1242:6:14","nodeType":"VariableDeclaration","scope":2348,"src":"1234:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:14"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2348,"src":"1268:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2345,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:14"},"scope":2381,"src":"1204:70:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"1280:264:14","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2358,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:14","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"owner","nameLocation":"1576:5:14","nodeType":"VariableDeclaration","scope":2358,"src":"1568:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"spender","nameLocation":"1591:7:14","nodeType":"VariableDeclaration","scope":2358,"src":"1583:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2352,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:14"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"1623:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:14"},"scope":2381,"src":"1549:83:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"1638:642:14","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2368,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:14","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"spender","nameLocation":"2310:7:14","nodeType":"VariableDeclaration","scope":2368,"src":"2302:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"amount","nameLocation":"2327:6:14","nodeType":"VariableDeclaration","scope":2368,"src":"2319:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:14"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2368,"src":"2353:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2365,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:14"},"scope":2381,"src":"2285:74:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"2365:287:14","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2380,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:14","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"from","nameLocation":"2696:4:14","nodeType":"VariableDeclaration","scope":2380,"src":"2688:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"to","nameLocation":"2718:2:14","nodeType":"VariableDeclaration","scope":2380,"src":"2710:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"amount","nameLocation":"2738:6:14","nodeType":"VariableDeclaration","scope":2380,"src":"2730:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:72:14"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2380,"src":"2769:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2377,"name":"bool","nodeType":"ElementaryTypeName","src":"2769:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2768:6:14"},"scope":2381,"src":"2657:118:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2382,"src":"202:2575:14","usedErrors":[]}],"src":"106:2672:14"},"id":14},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"ERC20BurnableUpgradeable":[2445],"ERC20Upgradeable":[2303],"IERC20MetadataUpgradeable":[2530],"IERC20Upgradeable":[2381],"Initializable":[1268]},"id":2446,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2383,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":2384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2446,"sourceUnit":2304,"src":"149:33:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":2385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2446,"sourceUnit":2857,"src":"183:47:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2446,"sourceUnit":1269,"src":"231:48:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2388,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"536:13:15"},"id":2389,"nodeType":"InheritanceSpecifier","src":"536:13:15"},{"baseName":{"id":2390,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"551:18:15"},"id":2391,"nodeType":"InheritanceSpecifier","src":"551:18:15"},{"baseName":{"id":2392,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":2303,"src":"571:16:15"},"id":2393,"nodeType":"InheritanceSpecifier","src":"571:16:15"}],"canonicalName":"ERC20BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"281:208:15","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":2445,"linearizedBaseContracts":[2445,2303,2530,2381,2856,1268],"name":"ERC20BurnableUpgradeable","nameLocation":"508:24:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2398,"nodeType":"Block","src":"652:7:15","statements":[]},"id":2399,"implemented":true,"kind":"function","modifiers":[{"id":2396,"kind":"modifierInvocation","modifierName":{"id":2395,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"635:16:15"},"nodeType":"ModifierInvocation","src":"635:16:15"}],"name":"__ERC20Burnable_init","nameLocation":"603:20:15","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[],"src":"623:2:15"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[],"src":"652:0:15"},"scope":2445,"src":"594:65:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2404,"nodeType":"Block","src":"733:7:15","statements":[]},"id":2405,"implemented":true,"kind":"function","modifiers":[{"id":2402,"kind":"modifierInvocation","modifierName":{"id":2401,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"716:16:15"},"nodeType":"ModifierInvocation","src":"716:16:15"}],"name":"__ERC20Burnable_init_unchained","nameLocation":"674:30:15","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[],"src":"704:2:15"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[],"src":"733:0:15"},"scope":2445,"src":"665:75:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2417,"nodeType":"Block","src":"893:44:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2412,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"909:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"909:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2414,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"923:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2411,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"903:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2416,"nodeType":"ExpressionStatement","src":"903:27:15"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"745:98:15","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"857:4:15","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"amount","nameLocation":"870:6:15","nodeType":"VariableDeclaration","scope":2418,"src":"862:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"861:16:15"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"893:0:15"},"scope":2445,"src":"848:89:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2438,"nodeType":"Block","src":"1309:95:15","statements":[{"expression":{"arguments":[{"id":2427,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1335:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2428,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1344:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1344:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2430,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"1358:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2426,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1319:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1319:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2432,"nodeType":"ExpressionStatement","src":"1319:46:15"},{"expression":{"arguments":[{"id":2434,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1381:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"1390:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2433,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"1375:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1375:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2437,"nodeType":"ExpressionStatement","src":"1375:22:15"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"943:295:15","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1252:8:15","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"account","nameLocation":"1269:7:15","nodeType":"VariableDeclaration","scope":2439,"src":"1261:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"amount","nameLocation":"1286:6:15","nodeType":"VariableDeclaration","scope":2439,"src":"1278:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1260:33:15"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[],"src":"1309:0:15"},"scope":2445,"src":"1243:161:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"1410:254:15","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2444,"mutability":"mutable","name":"__gap","nameLocation":"1689:5:15","nodeType":"VariableDeclaration","scope":2445,"src":"1669:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1669:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2443,"length":{"hexValue":"3530","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:2:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1669:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2446,"src":"490:1207:15","usedErrors":[]}],"src":"124:1574:15"},"id":15},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"ERC20PausableUpgradeable":[2505],"ERC20Upgradeable":[2303],"IERC20MetadataUpgradeable":[2530],"IERC20Upgradeable":[2381],"Initializable":[1268],"PausableUpgradeable":[1531]},"id":2506,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2447,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:16"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":2448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2506,"sourceUnit":2304,"src":"134:33:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"../../../security/PausableUpgradeable.sol","id":2449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2506,"sourceUnit":1532,"src":"168:51:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2506,"sourceUnit":1269,"src":"220:48:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2452,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"586:13:16"},"id":2453,"nodeType":"InheritanceSpecifier","src":"586:13:16"},{"baseName":{"id":2454,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":2303,"src":"601:16:16"},"id":2455,"nodeType":"InheritanceSpecifier","src":"601:16:16"},{"baseName":{"id":2456,"name":"PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1531,"src":"619:19:16"},"id":2457,"nodeType":"InheritanceSpecifier","src":"619:19:16"}],"canonicalName":"ERC20PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"270:269:16","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug."},"fullyImplemented":true,"id":2505,"linearizedBaseContracts":[2505,1531,2303,2530,2381,2856,1268],"name":"ERC20PausableUpgradeable","nameLocation":"558:24:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2465,"nodeType":"Block","src":"703:44:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2462,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"713:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"713:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2464,"nodeType":"ExpressionStatement","src":"713:27:16"}]},"id":2466,"implemented":true,"kind":"function","modifiers":[{"id":2460,"kind":"modifierInvocation","modifierName":{"id":2459,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"686:16:16"},"nodeType":"ModifierInvocation","src":"686:16:16"}],"name":"__ERC20Pausable_init","nameLocation":"654:20:16","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[],"src":"674:2:16"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[],"src":"703:0:16"},"scope":2505,"src":"645:102:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2471,"nodeType":"Block","src":"821:7:16","statements":[]},"id":2472,"implemented":true,"kind":"function","modifiers":[{"id":2469,"kind":"modifierInvocation","modifierName":{"id":2468,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"804:16:16"},"nodeType":"ModifierInvocation","src":"804:16:16"}],"name":"__ERC20Pausable_init_unchained","nameLocation":"762:30:16","nodeType":"FunctionDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[],"src":"792:2:16"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[],"src":"821:0:16"},"scope":2505,"src":"753:75:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2286],"body":{"id":2498,"nodeType":"Block","src":"1100:136:16","statements":[{"expression":{"arguments":[{"id":2486,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"1137:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2487,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1143:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2488,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"1147:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2483,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1110:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PausableUpgradeable_$2505_$","typeString":"type(contract super ERC20PausableUpgradeable)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2286,"src":"1110:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1110:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2490,"nodeType":"ExpressionStatement","src":"1110:44:16"},{"expression":{"arguments":[{"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1173:9:16","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2492,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1174:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1174:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1184:44:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""},"value":"ERC20Pausable: token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""}],"id":2491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1165:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1165:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2497,"nodeType":"ExpressionStatement","src":"1165:64:16"}]},"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"833:134:16","text":" @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"981:20:16","nodeType":"FunctionDefinition","overrides":{"id":2481,"nodeType":"OverrideSpecifier","overrides":[],"src":"1091:8:16"},"parameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"from","nameLocation":"1019:4:16","nodeType":"VariableDeclaration","scope":2499,"src":"1011:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"to","nameLocation":"1041:2:16","nodeType":"VariableDeclaration","scope":2499,"src":"1033:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2476,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"amount","nameLocation":"1061:6:16","nodeType":"VariableDeclaration","scope":2499,"src":"1053:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"1053:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:72:16"},"returnParameters":{"id":2482,"nodeType":"ParameterList","parameters":[],"src":"1100:0:16"},"scope":2505,"src":"972:264:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"1242:254:16","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2504,"mutability":"mutable","name":"__gap","nameLocation":"1521:5:16","nodeType":"VariableDeclaration","scope":2505,"src":"1501:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"length":{"hexValue":"3530","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1509:2:16","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1501:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2506,"src":"540:989:16","usedErrors":[]}],"src":"109:1421:16"},"id":16},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[2530],"IERC20Upgradeable":[2381]},"id":2531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2507,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":2508,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2531,"sourceUnit":2382,"src":"135:34:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2510,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":2381,"src":"327:17:17"},"id":2511,"nodeType":"InheritanceSpecifier","src":"327:17:17"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"171:116:17","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2530,"linearizedBaseContracts":[2530,2381],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"351:54:17","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2517,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:17","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"423:2:17"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2517,"src":"449:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2514,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:17"},"scope":2530,"src":"410:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"470:56:17","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2523,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:17","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[],"src":"546:2:17"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2523,"src":"572:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2520,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:17"},"scope":2530,"src":"531:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2524,"nodeType":"StructuredDocumentation","src":"593:65:17","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2529,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:17","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[],"src":"680:2:17"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2529,"src":"706:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2526,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:17"},"scope":2530,"src":"663:50:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2531,"src":"288:427:17","usedErrors":[]}],"src":"110:606:17"},"id":17},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814]},"id":2815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2532,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"106:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"131:67:18","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2814,"linearizedBaseContracts":[2814],"name":"AddressUpgradeable","nameLocation":"207:18:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":2547,"nodeType":"Block","src":"1257:254:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2541,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"1481:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1481:12:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1481:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1503:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1481:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2540,"id":2546,"nodeType":"Return","src":"1474:30:18"}]},"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"232:954:18","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1200:10:18","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"account","nameLocation":"1219:7:18","nodeType":"VariableDeclaration","scope":2548,"src":"1211:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1210:17:18"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"1251:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2538,"name":"bool","nodeType":"ElementaryTypeName","src":"1251:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1250:6:18"},"scope":2814,"src":"1191:320:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2581,"nodeType":"Block","src":"2499:241:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2559,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2525:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2814","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2814","typeString":"library AddressUpgradeable"}],"id":2558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"2517:7:18","typeDescriptions":{}}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2517:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2562,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"2542:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2517:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2550:31:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2509:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2566,"nodeType":"ExpressionStatement","src":"2509:73:18"},{"assignments":[2568,null],"declarations":[{"constant":false,"id":2568,"mutability":"mutable","name":"success","nameLocation":"2599:7:18","nodeType":"VariableDeclaration","scope":2581,"src":"2594:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2567,"name":"bool","nodeType":"ElementaryTypeName","src":"2594:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2575,"initialValue":{"arguments":[{"hexValue":"","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2642:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2569,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"2612:9:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2612:14:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2571,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"2634:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2612:29:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2612:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2593:52:18"},{"expression":{"arguments":[{"id":2577,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2663:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2672:60:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2655:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2655:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2580,"nodeType":"ExpressionStatement","src":"2655:78:18"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"1517:906:18","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2582,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2437:9:18","nodeType":"FunctionDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"recipient","nameLocation":"2463:9:18","nodeType":"VariableDeclaration","scope":2582,"src":"2447:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"2447:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"amount","nameLocation":"2482:6:18","nodeType":"VariableDeclaration","scope":2582,"src":"2474:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2474:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2446:43:18"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[],"src":"2499:0:18"},"scope":2814,"src":"2428:312:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2599,"nodeType":"Block","src":"3571:96:18","statements":[{"expression":{"arguments":[{"id":2593,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"3610:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2594,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"3618:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3624:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3627:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2592,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2640,2684],"referencedDeclaration":2684,"src":"3588:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3588:72:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2591,"id":2598,"nodeType":"Return","src":"3581:79:18"}]},"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"2746:731:18","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2600,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3491:12:18","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"target","nameLocation":"3512:6:18","nodeType":"VariableDeclaration","scope":2600,"src":"3504:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"data","nameLocation":"3533:4:18","nodeType":"VariableDeclaration","scope":2600,"src":"3520:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2586,"name":"bytes","nodeType":"ElementaryTypeName","src":"3520:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3503:35:18"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2600,"src":"3557:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2589,"name":"bytes","nodeType":"ElementaryTypeName","src":"3557:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3556:14:18"},"scope":2814,"src":"3482:185:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2619,"nodeType":"Block","src":"4036:76:18","statements":[{"expression":{"arguments":[{"id":2613,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"4075:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"4083:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4089:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2616,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4092:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2612,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2640,2684],"referencedDeclaration":2684,"src":"4053:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4053:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2611,"id":2618,"nodeType":"Return","src":"4046:59:18"}]},"documentation":{"id":2601,"nodeType":"StructuredDocumentation","src":"3673:211:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2620,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3898:12:18","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"target","nameLocation":"3928:6:18","nodeType":"VariableDeclaration","scope":2620,"src":"3920:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"3920:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2605,"mutability":"mutable","name":"data","nameLocation":"3957:4:18","nodeType":"VariableDeclaration","scope":2620,"src":"3944:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2604,"name":"bytes","nodeType":"ElementaryTypeName","src":"3944:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"errorMessage","nameLocation":"3985:12:18","nodeType":"VariableDeclaration","scope":2620,"src":"3971:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2606,"name":"string","nodeType":"ElementaryTypeName","src":"3971:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3910:93:18"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2620,"src":"4022:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2609,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4021:14:18"},"scope":2814,"src":"3889:223:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2639,"nodeType":"Block","src":"4617:111:18","statements":[{"expression":{"arguments":[{"id":2633,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"4656:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2634,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4664:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"4670:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4677:43:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2632,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2640,2684],"referencedDeclaration":2684,"src":"4634:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4634:87:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2631,"id":2638,"nodeType":"Return","src":"4627:94:18"}]},"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"4118:351:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2640,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4483:21:18","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"target","nameLocation":"4522:6:18","nodeType":"VariableDeclaration","scope":2640,"src":"4514:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"4514:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"data","nameLocation":"4551:4:18","nodeType":"VariableDeclaration","scope":2640,"src":"4538:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2624,"name":"bytes","nodeType":"ElementaryTypeName","src":"4538:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"value","nameLocation":"4573:5:18","nodeType":"VariableDeclaration","scope":2640,"src":"4565:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"4565:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4504:80:18"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2640,"src":"4603:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2629,"name":"bytes","nodeType":"ElementaryTypeName","src":"4603:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4602:14:18"},"scope":2814,"src":"4474:254:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2683,"nodeType":"Block","src":"5155:267:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2657,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5181:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2814","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2814","typeString":"library AddressUpgradeable"}],"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5173:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:18","typeDescriptions":{}}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5173:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5173:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"5198:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5173:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5205:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5165:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5165:81:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"ExpressionStatement","src":"5165:81:18"},{"assignments":[2666,2668],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"success","nameLocation":"5262:7:18","nodeType":"VariableDeclaration","scope":2683,"src":"5257:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2665,"name":"bool","nodeType":"ElementaryTypeName","src":"5257:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"returndata","nameLocation":"5284:10:18","nodeType":"VariableDeclaration","scope":2683,"src":"5271:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2667,"name":"bytes","nodeType":"ElementaryTypeName","src":"5271:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2675,"initialValue":{"arguments":[{"id":2673,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"5324:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2669,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"5298:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5298:11:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"5317:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5298:25:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5298:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5256:73:18"},{"expression":{"arguments":[{"id":2677,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"5373:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2678,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5381:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2679,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"5390:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2680,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"5402:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2676,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"5346:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5346:69:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2653,"id":2682,"nodeType":"Return","src":"5339:76:18"}]},"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"4734:237:18","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2684,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4985:21:18","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"target","nameLocation":"5024:6:18","nodeType":"VariableDeclaration","scope":2684,"src":"5016:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"5016:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"data","nameLocation":"5053:4:18","nodeType":"VariableDeclaration","scope":2684,"src":"5040:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2644,"name":"bytes","nodeType":"ElementaryTypeName","src":"5040:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"value","nameLocation":"5075:5:18","nodeType":"VariableDeclaration","scope":2684,"src":"5067:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"5067:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"errorMessage","nameLocation":"5104:12:18","nodeType":"VariableDeclaration","scope":2684,"src":"5090:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2648,"name":"string","nodeType":"ElementaryTypeName","src":"5090:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5006:116:18"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2684,"src":"5141:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2651,"name":"bytes","nodeType":"ElementaryTypeName","src":"5141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5140:14:18"},"scope":2814,"src":"4976:446:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2700,"nodeType":"Block","src":"5699:97:18","statements":[{"expression":{"arguments":[{"id":2695,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"5735:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2696,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"5743:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5749:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2694,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2701,2730],"referencedDeclaration":2730,"src":"5716:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5716:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2693,"id":2699,"nodeType":"Return","src":"5709:80:18"}]},"documentation":{"id":2685,"nodeType":"StructuredDocumentation","src":"5428:166:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2701,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5608:18:18","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"target","nameLocation":"5635:6:18","nodeType":"VariableDeclaration","scope":2701,"src":"5627:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2686,"name":"address","nodeType":"ElementaryTypeName","src":"5627:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"data","nameLocation":"5656:4:18","nodeType":"VariableDeclaration","scope":2701,"src":"5643:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2688,"name":"bytes","nodeType":"ElementaryTypeName","src":"5643:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5626:35:18"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2701,"src":"5685:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2691,"name":"bytes","nodeType":"ElementaryTypeName","src":"5685:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5684:14:18"},"scope":2814,"src":"5599:197:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2729,"nodeType":"Block","src":"6138:168:18","statements":[{"assignments":[2714,2716],"declarations":[{"constant":false,"id":2714,"mutability":"mutable","name":"success","nameLocation":"6154:7:18","nodeType":"VariableDeclaration","scope":2729,"src":"6149:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2713,"name":"bool","nodeType":"ElementaryTypeName","src":"6149:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"returndata","nameLocation":"6176:10:18","nodeType":"VariableDeclaration","scope":2729,"src":"6163:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2715,"name":"bytes","nodeType":"ElementaryTypeName","src":"6163:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2721,"initialValue":{"arguments":[{"id":2719,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"6208:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2717,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"6190:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6190:17:18","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6190:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6148:65:18"},{"expression":{"arguments":[{"id":2723,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"6257:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2724,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"6265:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2725,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"6274:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2726,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"6286:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2722,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"6230:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6230:69:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2712,"id":2728,"nodeType":"Return","src":"6223:76:18"}]},"documentation":{"id":2702,"nodeType":"StructuredDocumentation","src":"5802:173:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2730,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5989:18:18","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"target","nameLocation":"6025:6:18","nodeType":"VariableDeclaration","scope":2730,"src":"6017:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2703,"name":"address","nodeType":"ElementaryTypeName","src":"6017:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"data","nameLocation":"6054:4:18","nodeType":"VariableDeclaration","scope":2730,"src":"6041:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2705,"name":"bytes","nodeType":"ElementaryTypeName","src":"6041:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"errorMessage","nameLocation":"6082:12:18","nodeType":"VariableDeclaration","scope":2730,"src":"6068:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2707,"name":"string","nodeType":"ElementaryTypeName","src":"6068:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6007:93:18"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2730,"src":"6124:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2710,"name":"bytes","nodeType":"ElementaryTypeName","src":"6124:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6123:14:18"},"scope":2814,"src":"5980:326:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2768,"nodeType":"Block","src":"6788:434:18","statements":[{"condition":{"id":2744,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6802:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2766,"nodeType":"Block","src":"7158:58:18","statements":[{"expression":{"arguments":[{"id":2762,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"7180:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2763,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7192:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2761,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"7172:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7172:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"ExpressionStatement","src":"7172:33:18"}]},"id":2767,"nodeType":"IfStatement","src":"6798:418:18","trueBody":{"id":2760,"nodeType":"Block","src":"6811:341:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2745,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"6829:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6829:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6850:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6829:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2757,"nodeType":"IfStatement","src":"6825:286:18","trueBody":{"id":2756,"nodeType":"Block","src":"6853:258:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2751,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"7055:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2750,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"7044:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7044:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7064:31:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7036:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7036:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2755,"nodeType":"ExpressionStatement","src":"7036:60:18"}]}},{"expression":{"id":2758,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"7131:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2743,"id":2759,"nodeType":"Return","src":"7124:17:18"}]}}]},"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"6312:277:18","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6603:26:18","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"target","nameLocation":"6647:6:18","nodeType":"VariableDeclaration","scope":2769,"src":"6639:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"6639:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2735,"mutability":"mutable","name":"success","nameLocation":"6668:7:18","nodeType":"VariableDeclaration","scope":2769,"src":"6663:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2734,"name":"bool","nodeType":"ElementaryTypeName","src":"6663:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2737,"mutability":"mutable","name":"returndata","nameLocation":"6698:10:18","nodeType":"VariableDeclaration","scope":2769,"src":"6685:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2736,"name":"bytes","nodeType":"ElementaryTypeName","src":"6685:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"errorMessage","nameLocation":"6732:12:18","nodeType":"VariableDeclaration","scope":2769,"src":"6718:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2738,"name":"string","nodeType":"ElementaryTypeName","src":"6718:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6629:121:18"},"returnParameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2769,"src":"6774:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2741,"name":"bytes","nodeType":"ElementaryTypeName","src":"6774:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6773:14:18"},"scope":2814,"src":"6594:628:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"7603:135:18","statements":[{"condition":{"id":2781,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"7617:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2790,"nodeType":"Block","src":"7674:58:18","statements":[{"expression":{"arguments":[{"id":2786,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"7696:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2787,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"7708:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2785,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"7688:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7688:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2789,"nodeType":"ExpressionStatement","src":"7688:33:18"}]},"id":2791,"nodeType":"IfStatement","src":"7613:119:18","trueBody":{"id":2784,"nodeType":"Block","src":"7626:42:18","statements":[{"expression":{"id":2782,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"7647:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2780,"id":2783,"nodeType":"Return","src":"7640:17:18"}]}}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"7228:210:18","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7452:16:18","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"success","nameLocation":"7483:7:18","nodeType":"VariableDeclaration","scope":2793,"src":"7478:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2771,"name":"bool","nodeType":"ElementaryTypeName","src":"7478:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"returndata","nameLocation":"7513:10:18","nodeType":"VariableDeclaration","scope":2793,"src":"7500:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"7500:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"errorMessage","nameLocation":"7547:12:18","nodeType":"VariableDeclaration","scope":2793,"src":"7533:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2775,"name":"string","nodeType":"ElementaryTypeName","src":"7533:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7468:97:18"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"7589:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2778,"name":"bytes","nodeType":"ElementaryTypeName","src":"7589:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7588:14:18"},"scope":2814,"src":"7443:295:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2812,"nodeType":"Block","src":"7827:457:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2800,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"7903:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7903:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7923:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7903:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2810,"nodeType":"Block","src":"8233:45:18","statements":[{"expression":{"arguments":[{"id":2807,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"8254:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2806,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8247:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8247:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2809,"nodeType":"ExpressionStatement","src":"8247:20:18"}]},"id":2811,"nodeType":"IfStatement","src":"7899:379:18","trueBody":{"id":2805,"nodeType":"Block","src":"7926:301:18","statements":[{"AST":{"nodeType":"YulBlock","src":"8084:133:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8102:40:18","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8131:10:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8125:5:18"},"nodeType":"YulFunctionCall","src":"8125:17:18"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8106:15:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8170:2:18","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8174:10:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8166:3:18"},"nodeType":"YulFunctionCall","src":"8166:19:18"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8187:15:18"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8159:6:18"},"nodeType":"YulFunctionCall","src":"8159:44:18"},"nodeType":"YulExpressionStatement","src":"8159:44:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2795,"isOffset":false,"isSlot":false,"src":"8131:10:18","valueSize":1},{"declaration":2795,"isOffset":false,"isSlot":false,"src":"8174:10:18","valueSize":1}],"id":2804,"nodeType":"InlineAssembly","src":"8075:142:18"}]}}]},"id":2813,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7753:7:18","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"returndata","nameLocation":"7774:10:18","nodeType":"VariableDeclaration","scope":2813,"src":"7761:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2794,"name":"bytes","nodeType":"ElementaryTypeName","src":"7761:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"errorMessage","nameLocation":"7800:12:18","nodeType":"VariableDeclaration","scope":2813,"src":"7786:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2796,"name":"string","nodeType":"ElementaryTypeName","src":"7786:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7760:53:18"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"7827:0:18"},"scope":2814,"src":"7744:540:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2815,"src":"199:8087:18","usedErrors":[]}],"src":"106:8181:18"},"id":18},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"Initializable":[1268]},"id":2857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2816,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:19"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":1269,"src":"110:42:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2819,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"691:13:19"},"id":2820,"nodeType":"InheritanceSpecifier","src":"691:13:19"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"154:496:19","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2856,"linearizedBaseContracts":[2856,1268],"name":"ContextUpgradeable","nameLocation":"669:18:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":2825,"nodeType":"Block","src":"763:7:19","statements":[]},"id":2826,"implemented":true,"kind":"function","modifiers":[{"id":2823,"kind":"modifierInvocation","modifierName":{"id":2822,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"746:16:19"},"nodeType":"ModifierInvocation","src":"746:16:19"}],"name":"__Context_init","nameLocation":"720:14:19","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[],"src":"734:2:19"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[],"src":"763:0:19"},"scope":2856,"src":"711:59:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2831,"nodeType":"Block","src":"838:7:19","statements":[]},"id":2832,"implemented":true,"kind":"function","modifiers":[{"id":2829,"kind":"modifierInvocation","modifierName":{"id":2828,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"821:16:19"},"nodeType":"ModifierInvocation","src":"821:16:19"}],"name":"__Context_init_unchained","nameLocation":"785:24:19","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[],"src":"809:2:19"},"returnParameters":{"id":2830,"nodeType":"ParameterList","parameters":[],"src":"838:0:19"},"scope":2856,"src":"776:69:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2840,"nodeType":"Block","src":"912:34:19","statements":[{"expression":{"expression":{"id":2837,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2836,"id":2839,"nodeType":"Return","src":"922:17:19"}]},"id":2841,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:19","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[],"src":"869:2:19"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2841,"src":"903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2834,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:19"},"scope":2856,"src":"850:96:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2849,"nodeType":"Block","src":"1019:32:19","statements":[{"expression":{"expression":{"id":2846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2845,"id":2848,"nodeType":"Return","src":"1029:15:19"}]},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:19","nodeType":"FunctionDefinition","parameters":{"id":2842,"nodeType":"ParameterList","parameters":[],"src":"969:2:19"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2850,"src":"1003:14:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2843,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:19"},"scope":2856,"src":"952:99:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"1057:254:19","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2855,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:19","nodeType":"VariableDeclaration","scope":2856,"src":"1316:25:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2854,"length":{"hexValue":"3530","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:19","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2857,"src":"651:693:19","usedErrors":[]}],"src":"86:1259:19"},"id":19},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[2916]},"id":2917,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2858,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"130:1148:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":2916,"linearizedBaseContracts":[2916],"name":"StorageSlotUpgradeable","nameLocation":"1287:22:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":2862,"members":[{"constant":false,"id":2861,"mutability":"mutable","name":"value","nameLocation":"1353:5:20","nodeType":"VariableDeclaration","scope":2862,"src":"1345:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1323:11:20","nodeType":"StructDefinition","scope":2916,"src":"1316:49:20","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":2865,"members":[{"constant":false,"id":2864,"mutability":"mutable","name":"value","nameLocation":"1405:5:20","nodeType":"VariableDeclaration","scope":2865,"src":"1400:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2863,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1378:11:20","nodeType":"StructDefinition","scope":2916,"src":"1371:46:20","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":2868,"members":[{"constant":false,"id":2867,"mutability":"mutable","name":"value","nameLocation":"1460:5:20","nodeType":"VariableDeclaration","scope":2868,"src":"1452:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1452:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1430:11:20","nodeType":"StructDefinition","scope":2916,"src":"1423:49:20","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":2871,"members":[{"constant":false,"id":2870,"mutability":"mutable","name":"value","nameLocation":"1515:5:20","nodeType":"VariableDeclaration","scope":2871,"src":"1507:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1485:11:20","nodeType":"StructDefinition","scope":2916,"src":"1478:49:20","visibility":"public"},{"body":{"id":2881,"nodeType":"Block","src":"1709:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1771:38:20","statements":[{"nodeType":"YulAssignment","src":"1785:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"1795:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1785:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2878,"isOffset":false,"isSlot":true,"src":"1785:6:20","suffix":"slot","valueSize":1},{"declaration":2874,"isOffset":false,"isSlot":false,"src":"1795:4:20","valueSize":1}],"id":2880,"nodeType":"InlineAssembly","src":"1762:47:20"}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"1533:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1634:14:20","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"slot","nameLocation":"1657:4:20","nodeType":"VariableDeclaration","scope":2882,"src":"1649:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1649:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1648:14:20"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"r","nameLocation":"1706:1:20","nodeType":"VariableDeclaration","scope":2882,"src":"1686:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2862_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":2877,"nodeType":"UserDefinedTypeName","pathNode":{"id":2876,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":2862,"src":"1686:11:20"},"referencedDeclaration":2862,"src":"1686:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2862_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1685:23:20"},"scope":2916,"src":"1625:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2892,"nodeType":"Block","src":"1997:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2059:38:20","statements":[{"nodeType":"YulAssignment","src":"2073:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2083:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2073:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2889,"isOffset":false,"isSlot":true,"src":"2073:6:20","suffix":"slot","valueSize":1},{"declaration":2885,"isOffset":false,"isSlot":false,"src":"2083:4:20","valueSize":1}],"id":2891,"nodeType":"InlineAssembly","src":"2050:47:20"}]},"documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"1821:87:20","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1922:14:20","nodeType":"FunctionDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"slot","nameLocation":"1945:4:20","nodeType":"VariableDeclaration","scope":2893,"src":"1937:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1937:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1936:14:20"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"r","nameLocation":"1994:1:20","nodeType":"VariableDeclaration","scope":2893,"src":"1974:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2865_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":2888,"nodeType":"UserDefinedTypeName","pathNode":{"id":2887,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":2865,"src":"1974:11:20"},"referencedDeclaration":2865,"src":"1974:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2865_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"1973:23:20"},"scope":2916,"src":"1913:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2903,"nodeType":"Block","src":"2285:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2347:38:20","statements":[{"nodeType":"YulAssignment","src":"2361:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2371:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2361:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2900,"isOffset":false,"isSlot":true,"src":"2361:6:20","suffix":"slot","valueSize":1},{"declaration":2896,"isOffset":false,"isSlot":false,"src":"2371:4:20","valueSize":1}],"id":2902,"nodeType":"InlineAssembly","src":"2338:47:20"}]},"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"2109:87:20","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2904,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2210:14:20","nodeType":"FunctionDefinition","parameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"slot","nameLocation":"2233:4:20","nodeType":"VariableDeclaration","scope":2904,"src":"2225:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:14:20"},"returnParameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"r","nameLocation":"2282:1:20","nodeType":"VariableDeclaration","scope":2904,"src":"2262:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2868_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":2899,"nodeType":"UserDefinedTypeName","pathNode":{"id":2898,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":2868,"src":"2262:11:20"},"referencedDeclaration":2868,"src":"2262:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2868_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2261:23:20"},"scope":2916,"src":"2201:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2914,"nodeType":"Block","src":"2573:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2635:38:20","statements":[{"nodeType":"YulAssignment","src":"2649:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2659:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2649:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2911,"isOffset":false,"isSlot":true,"src":"2649:6:20","suffix":"slot","valueSize":1},{"declaration":2907,"isOffset":false,"isSlot":false,"src":"2659:4:20","valueSize":1}],"id":2913,"nodeType":"InlineAssembly","src":"2626:47:20"}]},"documentation":{"id":2905,"nodeType":"StructuredDocumentation","src":"2397:87:20","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2915,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2498:14:20","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"slot","nameLocation":"2521:4:20","nodeType":"VariableDeclaration","scope":2915,"src":"2513:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2513:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2512:14:20"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"r","nameLocation":"2570:1:20","nodeType":"VariableDeclaration","scope":2915,"src":"2550:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":2910,"nodeType":"UserDefinedTypeName","pathNode":{"id":2909,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"2550:11:20"},"referencedDeclaration":2871,"src":"2550:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2549:23:20"},"scope":2916,"src":"2489:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2917,"src":"1279:1402:20","usedErrors":[]}],"src":"105:2577:20"},"id":20},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[4654],"StringsUpgradeable":[3091]},"id":3092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2918,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:21"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":2919,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3092,"sourceUnit":4655,"src":"131:36:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2920,"nodeType":"StructuredDocumentation","src":"169:34:21","text":" @dev String operations."},"fullyImplemented":true,"id":3091,"linearizedBaseContracts":[3091],"name":"StringsUpgradeable","nameLocation":"212:18:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2923,"mutability":"constant","name":"_SYMBOLS","nameLocation":"262:8:21","nodeType":"VariableDeclaration","scope":3091,"src":"237:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2921,"name":"bytes16","nodeType":"ElementaryTypeName","src":"237:7:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"273:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2926,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"320:15:21","nodeType":"VariableDeclaration","scope":3091,"src":"297:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2924,"name":"uint8","nodeType":"ElementaryTypeName","src":"297:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"338:2:21","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2973,"nodeType":"Block","src":"513:636:21","statements":[{"id":2972,"nodeType":"UncheckedBlock","src":"523:620:21","statements":[{"assignments":[2935],"declarations":[{"constant":false,"id":2935,"mutability":"mutable","name":"length","nameLocation":"555:6:21","nodeType":"VariableDeclaration","scope":2972,"src":"547:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2942,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"586:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2936,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"564:15:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4654_$","typeString":"type(library MathUpgradeable)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4491,"src":"564:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"564:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"595:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"564:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"547:49:21"},{"assignments":[2944],"declarations":[{"constant":false,"id":2944,"mutability":"mutable","name":"buffer","nameLocation":"624:6:21","nodeType":"VariableDeclaration","scope":2972,"src":"610:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2943,"name":"string","nodeType":"ElementaryTypeName","src":"610:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2949,"initialValue":{"arguments":[{"id":2947,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"644:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"633:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2945,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"633:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"610:41:21"},{"assignments":[2951],"declarations":[{"constant":false,"id":2951,"mutability":"mutable","name":"ptr","nameLocation":"673:3:21","nodeType":"VariableDeclaration","scope":2972,"src":"665:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2952,"nodeType":"VariableDeclarationStatement","src":"665:11:21"},{"AST":{"nodeType":"YulBlock","src":"746:67:21","statements":[{"nodeType":"YulAssignment","src":"764:35:21","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"775:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"787:2:21","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"791:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"783:3:21"},"nodeType":"YulFunctionCall","src":"783:15:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"771:3:21"},"nodeType":"YulFunctionCall","src":"771:28:21"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"764:3:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2944,"isOffset":false,"isSlot":false,"src":"775:6:21","valueSize":1},{"declaration":2935,"isOffset":false,"isSlot":false,"src":"791:6:21","valueSize":1},{"declaration":2951,"isOffset":false,"isSlot":false,"src":"764:3:21","valueSize":1}],"id":2953,"nodeType":"InlineAssembly","src":"737:76:21"},{"body":{"id":2968,"nodeType":"Block","src":"839:267:21","statements":[{"expression":{"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"857:5:21","subExpression":{"id":2955,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"857:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2957,"nodeType":"ExpressionStatement","src":"857:5:21"},{"AST":{"nodeType":"YulBlock","src":"940:84:21","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"970:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"984:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"991:2:21","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"980:3:21"},"nodeType":"YulFunctionCall","src":"980:14:21"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"996:8:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"975:4:21"},"nodeType":"YulFunctionCall","src":"975:30:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"962:7:21"},"nodeType":"YulFunctionCall","src":"962:44:21"},"nodeType":"YulExpressionStatement","src":"962:44:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2923,"isOffset":false,"isSlot":false,"src":"996:8:21","valueSize":1},{"declaration":2951,"isOffset":false,"isSlot":false,"src":"970:3:21","valueSize":1},{"declaration":2929,"isOffset":false,"isSlot":false,"src":"984:5:21","valueSize":1}],"id":2958,"nodeType":"InlineAssembly","src":"931:93:21"},{"expression":{"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"1041:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1041:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2962,"nodeType":"ExpressionStatement","src":"1041:11:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"1074:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1083:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1074:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2967,"nodeType":"IfStatement","src":"1070:21:21","trueBody":{"id":2966,"nodeType":"Break","src":"1086:5:21"}}]},"condition":{"hexValue":"74727565","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"833:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2969,"nodeType":"WhileStatement","src":"826:280:21"},{"expression":{"id":2970,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"1126:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2933,"id":2971,"nodeType":"Return","src":"1119:13:21"}]}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"347:90:21","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2974,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"451:8:21","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"value","nameLocation":"468:5:21","nodeType":"VariableDeclaration","scope":2974,"src":"460:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"460:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"459:15:21"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2974,"src":"498:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2931,"name":"string","nodeType":"ElementaryTypeName","src":"498:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"497:15:21"},"scope":3091,"src":"442:707:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"1328:111:21","statements":[{"id":2992,"nodeType":"UncheckedBlock","src":"1338:95:21","statements":[{"expression":{"arguments":[{"id":2983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"1381:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"1411:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2984,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"1388:15:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4654_$","typeString":"type(library MathUpgradeable)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4614,"src":"1388:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1388:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1388:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2982,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2994,3070,3090],"referencedDeclaration":3070,"src":"1369:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1369:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2981,"id":2991,"nodeType":"Return","src":"1362:60:21"}]}]},"documentation":{"id":2975,"nodeType":"StructuredDocumentation","src":"1155:94:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2994,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1263:11:21","nodeType":"FunctionDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"value","nameLocation":"1283:5:21","nodeType":"VariableDeclaration","scope":2994,"src":"1275:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1274:15:21"},"returnParameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2994,"src":"1313:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2979,"name":"string","nodeType":"ElementaryTypeName","src":"1313:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1312:15:21"},"scope":3091,"src":"1254:185:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3069,"nodeType":"Block","src":"1652:347:21","statements":[{"assignments":[3005],"declarations":[{"constant":false,"id":3005,"mutability":"mutable","name":"buffer","nameLocation":"1675:6:21","nodeType":"VariableDeclaration","scope":3069,"src":"1662:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3004,"name":"bytes","nodeType":"ElementaryTypeName","src":"1662:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3014,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1694:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3009,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"1698:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1694:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1707:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1694:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1684:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3006,"name":"bytes","nodeType":"ElementaryTypeName","src":"1688:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1684:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1662:47:21"},{"expression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3015,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"1719:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3017,"indexExpression":{"hexValue":"30","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1726:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1719:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1731:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1719:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3020,"nodeType":"ExpressionStatement","src":"1719:15:21"},{"expression":{"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3021,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"1744:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3023,"indexExpression":{"hexValue":"31","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1751:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1744:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1756:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1744:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3026,"nodeType":"ExpressionStatement","src":"1744:15:21"},{"body":{"id":3055,"nodeType":"Block","src":"1814:83:21","statements":[{"expression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3041,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"1828:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3043,"indexExpression":{"id":3042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"1835:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1828:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3044,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"1840:8:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3048,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1849:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1849:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1840:21:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1828:33:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3050,"nodeType":"ExpressionStatement","src":"1828:33:21"},{"expression":{"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1875:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1885:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1875:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3054,"nodeType":"ExpressionStatement","src":"1875:11:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"1802:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1806:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1802:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3056,"initializationExpression":{"assignments":[3028],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"i","nameLocation":"1782:1:21","nodeType":"VariableDeclaration","scope":3056,"src":"1774:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1774:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3034,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1786:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3030,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"1790:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1786:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1799:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1786:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1774:26:21"},"loopExpression":{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1809:3:21","subExpression":{"id":3038,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"1811:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3040,"nodeType":"ExpressionStatement","src":"1809:3:21"},"nodeType":"ForStatement","src":"1769:128:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1914:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1923:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1914:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1926:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1906:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1906:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3063,"nodeType":"ExpressionStatement","src":"1906:55:21"},{"expression":{"arguments":[{"id":3066,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"1985:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1978:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3064,"name":"string","nodeType":"ElementaryTypeName","src":"1978:6:21","typeDescriptions":{}}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1978:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3003,"id":3068,"nodeType":"Return","src":"1971:21:21"}]},"documentation":{"id":2995,"nodeType":"StructuredDocumentation","src":"1445:112:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1571:11:21","nodeType":"FunctionDefinition","parameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"value","nameLocation":"1591:5:21","nodeType":"VariableDeclaration","scope":3070,"src":"1583:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"length","nameLocation":"1606:6:21","nodeType":"VariableDeclaration","scope":3070,"src":"1598:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1582:31:21"},"returnParameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3070,"src":"1637:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3001,"name":"string","nodeType":"ElementaryTypeName","src":"1637:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1636:15:21"},"scope":3091,"src":"1562:437:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3089,"nodeType":"Block","src":"2224:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3083,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2269:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2261:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3081,"name":"uint160","nodeType":"ElementaryTypeName","src":"2261:7:21","typeDescriptions":{}}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2253:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:21","typeDescriptions":{}}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2253:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3086,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"2277:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3078,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2994,3070,3090],"referencedDeclaration":3070,"src":"2241:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2241:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3077,"id":3088,"nodeType":"Return","src":"2234:59:21"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"2005:141:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3090,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2160:11:21","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"addr","nameLocation":"2180:4:21","nodeType":"VariableDeclaration","scope":3090,"src":"2172:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"2172:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2171:14:21"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3090,"src":"2209:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3075,"name":"string","nodeType":"ElementaryTypeName","src":"2209:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2208:15:21"},"scope":3091,"src":"2151:149:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3092,"src":"204:2098:21","usedErrors":[]}],"src":"106:2197:21"},"id":21},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","exportedSymbols":{"ECDSAUpgradeable":[3452],"MathUpgradeable":[4654],"StringsUpgradeable":[3091]},"id":3453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3093,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:22"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../StringsUpgradeable.sol","id":3094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3453,"sourceUnit":3092,"src":"142:35:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSAUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"179:205:22","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3452,"linearizedBaseContracts":[3452],"name":"ECDSAUpgradeable","nameLocation":"393:16:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSAUpgradeable.RecoverError","id":3101,"members":[{"id":3096,"name":"NoError","nameLocation":"444:7:22","nodeType":"EnumValue","src":"444:7:22"},{"id":3097,"name":"InvalidSignature","nameLocation":"461:16:22","nodeType":"EnumValue","src":"461:16:22"},{"id":3098,"name":"InvalidSignatureLength","nameLocation":"487:22:22","nodeType":"EnumValue","src":"487:22:22"},{"id":3099,"name":"InvalidSignatureS","nameLocation":"519:17:22","nodeType":"EnumValue","src":"519:17:22"},{"id":3100,"name":"InvalidSignatureV","nameLocation":"546:17:22","nodeType":"EnumValue","src":"546:17:22"}],"name":"RecoverError","nameLocation":"421:12:22","nodeType":"EnumDefinition","src":"416:175:22"},{"body":{"id":3144,"nodeType":"Block","src":"651:457:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"665:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3108,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"674:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3101_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3096,"src":"674:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"665:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3113,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"761:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3114,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"770:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3101_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3097,"src":"770:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"761:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"870:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3123,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"879:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3101_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3098,"src":"879:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"870:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"992:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3132,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"1001:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3101_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"1001:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"992:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3140,"nodeType":"IfStatement","src":"988:114:22","trueBody":{"id":3139,"nodeType":"Block","src":"1033:69:22","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1054:36:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":3135,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1047:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1047:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3138,"nodeType":"ExpressionStatement","src":"1047:44:22"}]}},"id":3141,"nodeType":"IfStatement","src":"866:236:22","trueBody":{"id":3130,"nodeType":"Block","src":"916:66:22","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"937:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":3126,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"930:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"930:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3129,"nodeType":"ExpressionStatement","src":"930:41:22"}]}},"id":3142,"nodeType":"IfStatement","src":"757:345:22","trueBody":{"id":3121,"nodeType":"Block","src":"801:59:22","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"822:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":3117,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"815:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"815:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3120,"nodeType":"ExpressionStatement","src":"815:34:22"}]}},"id":3143,"nodeType":"IfStatement","src":"661:441:22","trueBody":{"id":3112,"nodeType":"Block","src":"696:55:22","statements":[{"functionReturnParameters":3106,"id":3111,"nodeType":"Return","src":"710:7:22"}]}}]},"id":3145,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"606:11:22","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"error","nameLocation":"631:5:22","nodeType":"VariableDeclaration","scope":3145,"src":"618:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3103,"nodeType":"UserDefinedTypeName","pathNode":{"id":3102,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3101,"src":"618:12:22"},"referencedDeclaration":3101,"src":"618:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"617:20:22"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[],"src":"651:0:22"},"scope":3452,"src":"597:511:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3190,"nodeType":"Block","src":"2276:626:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3158,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"2290:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2290:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:2:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2290:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3188,"nodeType":"Block","src":"2815:81:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2845:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2837:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"2837:7:22","typeDescriptions":{}}},"id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2837:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3184,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"2849:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3101_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3098,"src":"2849:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2836:49:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3157,"id":3187,"nodeType":"Return","src":"2829:56:22"}]},"id":3189,"nodeType":"IfStatement","src":"2286:610:22","trueBody":{"id":3179,"nodeType":"Block","src":"2314:495:22","statements":[{"assignments":[3163],"declarations":[{"constant":false,"id":3163,"mutability":"mutable","name":"r","nameLocation":"2336:1:22","nodeType":"VariableDeclaration","scope":3179,"src":"2328:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2328:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3164,"nodeType":"VariableDeclarationStatement","src":"2328:9:22"},{"assignments":[3166],"declarations":[{"constant":false,"id":3166,"mutability":"mutable","name":"s","nameLocation":"2359:1:22","nodeType":"VariableDeclaration","scope":3179,"src":"2351:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2351:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3167,"nodeType":"VariableDeclarationStatement","src":"2351:9:22"},{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"v","nameLocation":"2380:1:22","nodeType":"VariableDeclaration","scope":3179,"src":"2374:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3168,"name":"uint8","nodeType":"ElementaryTypeName","src":"2374:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3170,"nodeType":"VariableDeclarationStatement","src":"2374:7:22"},{"AST":{"nodeType":"YulBlock","src":"2582:171:22","statements":[{"nodeType":"YulAssignment","src":"2600:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2615:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2626:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2611:3:22"},"nodeType":"YulFunctionCall","src":"2611:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2605:5:22"},"nodeType":"YulFunctionCall","src":"2605:27:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2600:1:22"}]},{"nodeType":"YulAssignment","src":"2649:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2664:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2675:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2660:3:22"},"nodeType":"YulFunctionCall","src":"2660:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2654:5:22"},"nodeType":"YulFunctionCall","src":"2654:27:22"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2649:1:22"}]},{"nodeType":"YulAssignment","src":"2698:41:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2708:1:22","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2721:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2732:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2717:3:22"},"nodeType":"YulFunctionCall","src":"2717:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2711:5:22"},"nodeType":"YulFunctionCall","src":"2711:27:22"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2703:4:22"},"nodeType":"YulFunctionCall","src":"2703:36:22"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2698:1:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3163,"isOffset":false,"isSlot":false,"src":"2600:1:22","valueSize":1},{"declaration":3166,"isOffset":false,"isSlot":false,"src":"2649:1:22","valueSize":1},{"declaration":3150,"isOffset":false,"isSlot":false,"src":"2615:9:22","valueSize":1},{"declaration":3150,"isOffset":false,"isSlot":false,"src":"2664:9:22","valueSize":1},{"declaration":3150,"isOffset":false,"isSlot":false,"src":"2721:9:22","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"2698:1:22","valueSize":1}],"id":3171,"nodeType":"InlineAssembly","src":"2573:180:22"},{"expression":{"arguments":[{"id":3173,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"2784:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3174,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"2790:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3175,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"2793:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3176,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"2796:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3172,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3191,3265,3359],"referencedDeclaration":3359,"src":"2773:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3157,"id":3178,"nodeType":"Return","src":"2766:32:22"}]}}]},"documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"1114:1053:22","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":3191,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2181:10:22","nodeType":"FunctionDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"hash","nameLocation":"2200:4:22","nodeType":"VariableDeclaration","scope":3191,"src":"2192:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2192:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"signature","nameLocation":"2219:9:22","nodeType":"VariableDeclaration","scope":3191,"src":"2206:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3149,"name":"bytes","nodeType":"ElementaryTypeName","src":"2206:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2191:38:22"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"2253:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"2253:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"2262:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3155,"nodeType":"UserDefinedTypeName","pathNode":{"id":3154,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3101,"src":"2262:12:22"},"referencedDeclaration":3101,"src":"2262:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"2252:23:22"},"scope":3452,"src":"2172:730:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3217,"nodeType":"Block","src":"3775:140:22","statements":[{"assignments":[3202,3205],"declarations":[{"constant":false,"id":3202,"mutability":"mutable","name":"recovered","nameLocation":"3794:9:22","nodeType":"VariableDeclaration","scope":3217,"src":"3786:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"3786:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"error","nameLocation":"3818:5:22","nodeType":"VariableDeclaration","scope":3217,"src":"3805:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3204,"nodeType":"UserDefinedTypeName","pathNode":{"id":3203,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3101,"src":"3805:12:22"},"referencedDeclaration":3101,"src":"3805:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3210,"initialValue":{"arguments":[{"id":3207,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"3838:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3208,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"3844:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3206,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3191,3265,3359],"referencedDeclaration":3191,"src":"3827:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3827:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3785:69:22"},{"expression":{"arguments":[{"id":3212,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3876:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3211,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"3864:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3101_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3864:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3214,"nodeType":"ExpressionStatement","src":"3864:18:22"},{"expression":{"id":3215,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"3899:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3200,"id":3216,"nodeType":"Return","src":"3892:16:22"}]},"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"2908:775:22","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":3218,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3697:7:22","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"hash","nameLocation":"3713:4:22","nodeType":"VariableDeclaration","scope":3218,"src":"3705:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3705:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"signature","nameLocation":"3732:9:22","nodeType":"VariableDeclaration","scope":3218,"src":"3719:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3195,"name":"bytes","nodeType":"ElementaryTypeName","src":"3719:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3704:38:22"},"returnParameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3218,"src":"3766:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"3766:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3765:9:22"},"scope":3452,"src":"3688:227:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3264,"nodeType":"Block","src":"4302:203:22","statements":[{"assignments":[3234],"declarations":[{"constant":false,"id":3234,"mutability":"mutable","name":"s","nameLocation":"4320:1:22","nodeType":"VariableDeclaration","scope":3264,"src":"4312:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4312:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3241,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"4324:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4337:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4329:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4329:7:22","typeDescriptions":{}}},"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4329:75:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4324:80:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4312:92:22"},{"assignments":[3243],"declarations":[{"constant":false,"id":3243,"mutability":"mutable","name":"v","nameLocation":"4420:1:22","nodeType":"VariableDeclaration","scope":3264,"src":"4414:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3242,"name":"uint8","nodeType":"ElementaryTypeName","src":"4414:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3256,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3248,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"4439:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4431:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4431:7:22","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4431:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4446:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4431:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4430:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4453:2:22","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4430:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4424:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3244,"name":"uint8","nodeType":"ElementaryTypeName","src":"4424:5:22","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4424:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4414:42:22"},{"expression":{"arguments":[{"id":3258,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"4484:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3259,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"4490:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3260,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"4493:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3261,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"4496:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3257,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3191,3265,3359],"referencedDeclaration":3359,"src":"4473:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4473:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3232,"id":3263,"nodeType":"Return","src":"4466:32:22"}]},"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"3921:243:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4178:10:22","nodeType":"FunctionDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"hash","nameLocation":"4206:4:22","nodeType":"VariableDeclaration","scope":3265,"src":"4198:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4198:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"r","nameLocation":"4228:1:22","nodeType":"VariableDeclaration","scope":3265,"src":"4220:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4220:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"vs","nameLocation":"4247:2:22","nodeType":"VariableDeclaration","scope":3265,"src":"4239:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4239:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4188:67:22"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"4279:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"4279:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"4288:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3230,"nodeType":"UserDefinedTypeName","pathNode":{"id":3229,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3101,"src":"4288:12:22"},"referencedDeclaration":3101,"src":"4288:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"4278:23:22"},"scope":3452,"src":"4169:336:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3294,"nodeType":"Block","src":"4786:136:22","statements":[{"assignments":[3278,3281],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"recovered","nameLocation":"4805:9:22","nodeType":"VariableDeclaration","scope":3294,"src":"4797:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3277,"name":"address","nodeType":"ElementaryTypeName","src":"4797:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"error","nameLocation":"4829:5:22","nodeType":"VariableDeclaration","scope":3294,"src":"4816:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3280,"nodeType":"UserDefinedTypeName","pathNode":{"id":3279,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3101,"src":"4816:12:22"},"referencedDeclaration":3101,"src":"4816:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3287,"initialValue":{"arguments":[{"id":3283,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"4849:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3284,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"4855:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3285,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"4858:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3282,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3191,3265,3359],"referencedDeclaration":3265,"src":"4838:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4838:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4796:65:22"},{"expression":{"arguments":[{"id":3289,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"4883:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3288,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"4871:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3101_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4871:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3291,"nodeType":"ExpressionStatement","src":"4871:18:22"},{"expression":{"id":3292,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"4906:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3276,"id":3293,"nodeType":"Return","src":"4899:16:22"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"4511:154:22","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":3295,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4679:7:22","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"hash","nameLocation":"4704:4:22","nodeType":"VariableDeclaration","scope":3295,"src":"4696:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4696:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"r","nameLocation":"4726:1:22","nodeType":"VariableDeclaration","scope":3295,"src":"4718:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4718:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"vs","nameLocation":"4745:2:22","nodeType":"VariableDeclaration","scope":3295,"src":"4737:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4737:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4686:67:22"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3295,"src":"4777:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3274,"name":"address","nodeType":"ElementaryTypeName","src":"4777:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4776:9:22"},"scope":3452,"src":"4670:252:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3358,"nodeType":"Block","src":"5245:1345:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3314,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6141:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6133:7:22","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6146:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6133:79:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3327,"nodeType":"IfStatement","src":"6129:161:22","trueBody":{"id":3326,"nodeType":"Block","src":"6214:76:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6244:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6236:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3318,"name":"address","nodeType":"ElementaryTypeName","src":"6236:7:22","typeDescriptions":{}}},"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6236:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3322,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"6248:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3101_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"6248:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6235:44:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3311,"id":3325,"nodeType":"Return","src":"6228:51:22"}]}},{"assignments":[3329],"declarations":[{"constant":false,"id":3329,"mutability":"mutable","name":"signer","nameLocation":"6392:6:22","nodeType":"VariableDeclaration","scope":3358,"src":"6384:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3328,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3336,"initialValue":{"arguments":[{"id":3331,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"6411:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3332,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"6417:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3333,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"6420:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3334,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6423:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3330,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6401:9:22","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6401:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6384:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"6439:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6457:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6449:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3338,"name":"address","nodeType":"ElementaryTypeName","src":"6449:7:22","typeDescriptions":{}}},"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6449:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6439:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3352,"nodeType":"IfStatement","src":"6435:101:22","trueBody":{"id":3351,"nodeType":"Block","src":"6461:75:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6491:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6483:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3343,"name":"address","nodeType":"ElementaryTypeName","src":"6483:7:22","typeDescriptions":{}}},"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6483:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3347,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"6495:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3101_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3097,"src":"6495:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6482:43:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3311,"id":3350,"nodeType":"Return","src":"6475:50:22"}]}},{"expression":{"components":[{"id":3353,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"6554:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3354,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"6562:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3101_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3096,"src":"6562:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6553:30:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3311,"id":3357,"nodeType":"Return","src":"6546:37:22"}]},"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"4928:163:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5105:10:22","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"hash","nameLocation":"5133:4:22","nodeType":"VariableDeclaration","scope":3359,"src":"5125:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5125:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"v","nameLocation":"5153:1:22","nodeType":"VariableDeclaration","scope":3359,"src":"5147:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3299,"name":"uint8","nodeType":"ElementaryTypeName","src":"5147:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"r","nameLocation":"5172:1:22","nodeType":"VariableDeclaration","scope":3359,"src":"5164:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5164:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"s","nameLocation":"5191:1:22","nodeType":"VariableDeclaration","scope":3359,"src":"5183:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5183:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5115:83:22"},"returnParameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3359,"src":"5222:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3306,"name":"address","nodeType":"ElementaryTypeName","src":"5222:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3359,"src":"5231:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3309,"nodeType":"UserDefinedTypeName","pathNode":{"id":3308,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3101,"src":"5231:12:22"},"referencedDeclaration":3101,"src":"5231:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"5221:23:22"},"scope":3452,"src":"5096:1494:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3391,"nodeType":"Block","src":"6855:138:22","statements":[{"assignments":[3374,3377],"declarations":[{"constant":false,"id":3374,"mutability":"mutable","name":"recovered","nameLocation":"6874:9:22","nodeType":"VariableDeclaration","scope":3391,"src":"6866:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3373,"name":"address","nodeType":"ElementaryTypeName","src":"6866:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"error","nameLocation":"6898:5:22","nodeType":"VariableDeclaration","scope":3391,"src":"6885:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3376,"nodeType":"UserDefinedTypeName","pathNode":{"id":3375,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3101,"src":"6885:12:22"},"referencedDeclaration":3101,"src":"6885:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3384,"initialValue":{"arguments":[{"id":3379,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"6918:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3380,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"6924:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3381,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"6927:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3382,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"6930:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3378,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3191,3265,3359],"referencedDeclaration":3359,"src":"6907:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6907:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3101_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6865:67:22"},{"expression":{"arguments":[{"id":3386,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"6954:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3101","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3385,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"6942:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3101_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6942:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3388,"nodeType":"ExpressionStatement","src":"6942:18:22"},{"expression":{"id":3389,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"6977:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3372,"id":3390,"nodeType":"Return","src":"6970:16:22"}]},"documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"6596:122:22","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3392,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6732:7:22","nodeType":"FunctionDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"hash","nameLocation":"6757:4:22","nodeType":"VariableDeclaration","scope":3392,"src":"6749:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6749:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3364,"mutability":"mutable","name":"v","nameLocation":"6777:1:22","nodeType":"VariableDeclaration","scope":3392,"src":"6771:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3363,"name":"uint8","nodeType":"ElementaryTypeName","src":"6771:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"r","nameLocation":"6796:1:22","nodeType":"VariableDeclaration","scope":3392,"src":"6788:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6788:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"s","nameLocation":"6815:1:22","nodeType":"VariableDeclaration","scope":3392,"src":"6807:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6739:83:22"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3392,"src":"6846:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3370,"name":"address","nodeType":"ElementaryTypeName","src":"6846:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6845:9:22"},"scope":3452,"src":"6723:270:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3408,"nodeType":"Block","src":"7361:187:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7499:34:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":3404,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"7535:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3401,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7482:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7482:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7482:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3400,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7472:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7472:69:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3399,"id":3407,"nodeType":"Return","src":"7465:76:22"}]},"documentation":{"id":3393,"nodeType":"StructuredDocumentation","src":"6999:279:22","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3409,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7292:22:22","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"hash","nameLocation":"7323:4:22","nodeType":"VariableDeclaration","scope":3409,"src":"7315:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7315:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7314:14:22"},"returnParameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3409,"src":"7352:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7352:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7351:9:22"},"scope":3452,"src":"7283:265:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3430,"nodeType":"Block","src":"7913:127:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7957:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3423,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"8019:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8019:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3421,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"7991:18:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3091_$","typeString":"type(library StringsUpgradeable)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2974,"src":"7991:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7991:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3426,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"8030:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3418,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7940:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7940:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7940:92:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3417,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7930:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7930:103:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3416,"id":3429,"nodeType":"Return","src":"7923:110:22"}]},"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"7554:274:22","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3431,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7842:22:22","nodeType":"FunctionDefinition","parameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"s","nameLocation":"7878:1:22","nodeType":"VariableDeclaration","scope":3431,"src":"7865:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3411,"name":"bytes","nodeType":"ElementaryTypeName","src":"7865:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7864:16:22"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3431,"src":"7904:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7904:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7903:9:22"},"scope":3452,"src":"7833:207:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3450,"nodeType":"Block","src":"8481:92:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8525:10:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":3445,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"8537:15:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3446,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"8554:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3442,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8508:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8508:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8508:57:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3441,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8498:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8498:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3440,"id":3449,"nodeType":"Return","src":"8491:75:22"}]},"documentation":{"id":3432,"nodeType":"StructuredDocumentation","src":"8046:328:22","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":3451,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8388:15:22","nodeType":"FunctionDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"domainSeparator","nameLocation":"8412:15:22","nodeType":"VariableDeclaration","scope":3451,"src":"8404:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8404:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"structHash","nameLocation":"8437:10:22","nodeType":"VariableDeclaration","scope":3451,"src":"8429:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8403:45:22"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3451,"src":"8472:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8472:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8471:9:22"},"scope":3452,"src":"8379:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3453,"src":"385:8190:22","usedErrors":[]}],"src":"117:8459:22"},"id":22},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ECDSAUpgradeable":[3452],"EIP712Upgradeable":[3602],"Initializable":[1268],"MathUpgradeable":[4654],"StringsUpgradeable":[3091]},"id":3603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3454,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:23"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"./ECDSAUpgradeable.sol","id":3455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3603,"sourceUnit":3453,"src":"143:32:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":3456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3603,"sourceUnit":1269,"src":"176:45:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3458,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"1435:13:23"},"id":3459,"nodeType":"InheritanceSpecifier","src":"1435:13:23"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3457,"nodeType":"StructuredDocumentation","src":"223:1172:23","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._\n @custom:storage-size 52"},"fullyImplemented":true,"id":3602,"linearizedBaseContracts":[3602,1268],"name":"EIP712Upgradeable","nameLocation":"1414:17:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3461,"mutability":"mutable","name":"_HASHED_NAME","nameLocation":"1516:12:23","nodeType":"VariableDeclaration","scope":3602,"src":"1500:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1500:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3463,"mutability":"mutable","name":"_HASHED_VERSION","nameLocation":"1550:15:23","nodeType":"VariableDeclaration","scope":3602,"src":"1534:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1534:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":3468,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1596:10:23","nodeType":"VariableDeclaration","scope":3602,"src":"1571:133:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1571:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:84:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3465,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1609:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1609:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":3483,"nodeType":"Block","src":"2412:55:23","statements":[{"expression":{"arguments":[{"id":3479,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"2446:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3480,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2452:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3478,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2422:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2422:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3482,"nodeType":"ExpressionStatement","src":"2422:38:23"}]},"documentation":{"id":3469,"nodeType":"StructuredDocumentation","src":"1756:559:23","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3484,"implemented":true,"kind":"function","modifiers":[{"id":3476,"kind":"modifierInvocation","modifierName":{"id":3475,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"2395:16:23"},"nodeType":"ModifierInvocation","src":"2395:16:23"}],"name":"__EIP712_init","nameLocation":"2329:13:23","nodeType":"FunctionDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"name","nameLocation":"2357:4:23","nodeType":"VariableDeclaration","scope":3484,"src":"2343:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3470,"name":"string","nodeType":"ElementaryTypeName","src":"2343:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"version","nameLocation":"2377:7:23","nodeType":"VariableDeclaration","scope":3484,"src":"2363:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3472,"name":"string","nodeType":"ElementaryTypeName","src":"2363:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2342:43:23"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[],"src":"2412:0:23"},"scope":3602,"src":"2320:147:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3519,"nodeType":"Block","src":"2575:195:23","statements":[{"assignments":[3494],"declarations":[{"constant":false,"id":3494,"mutability":"mutable","name":"hashedName","nameLocation":"2593:10:23","nodeType":"VariableDeclaration","scope":3519,"src":"2585:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2585:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3501,"initialValue":{"arguments":[{"arguments":[{"id":3498,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"2622:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2616:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3496,"name":"bytes","nodeType":"ElementaryTypeName","src":"2616:5:23","typeDescriptions":{}}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3495,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2606:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2606:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2585:43:23"},{"assignments":[3503],"declarations":[{"constant":false,"id":3503,"mutability":"mutable","name":"hashedVersion","nameLocation":"2646:13:23","nodeType":"VariableDeclaration","scope":3519,"src":"2638:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2638:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3510,"initialValue":{"arguments":[{"arguments":[{"id":3507,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"2678:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2672:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3505,"name":"bytes","nodeType":"ElementaryTypeName","src":"2672:5:23","typeDescriptions":{}}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2672:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3504,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2662:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2662:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2638:49:23"},{"expression":{"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3511,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"2697:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3512,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"2712:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2697:25:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3514,"nodeType":"ExpressionStatement","src":"2697:25:23"},{"expression":{"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3515,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"2732:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3516,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"2750:13:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2732:31:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3518,"nodeType":"ExpressionStatement","src":"2732:31:23"}]},"id":3520,"implemented":true,"kind":"function","modifiers":[{"id":3491,"kind":"modifierInvocation","modifierName":{"id":3490,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"2558:16:23"},"nodeType":"ModifierInvocation","src":"2558:16:23"}],"name":"__EIP712_init_unchained","nameLocation":"2482:23:23","nodeType":"FunctionDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"name","nameLocation":"2520:4:23","nodeType":"VariableDeclaration","scope":3520,"src":"2506:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3485,"name":"string","nodeType":"ElementaryTypeName","src":"2506:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"version","nameLocation":"2540:7:23","nodeType":"VariableDeclaration","scope":3520,"src":"2526:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3487,"name":"string","nodeType":"ElementaryTypeName","src":"2526:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2505:43:23"},"returnParameters":{"id":3492,"nodeType":"ParameterList","parameters":[],"src":"2575:0:23"},"scope":3602,"src":"2473:297:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3534,"nodeType":"Block","src":"2918:98:23","statements":[{"expression":{"arguments":[{"id":3527,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"2957:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3528,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"2969:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2969:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3530,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"2988:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2988:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3526,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"2935:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2935:74:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3525,"id":3533,"nodeType":"Return","src":"2928:81:23"}]},"documentation":{"id":3521,"nodeType":"StructuredDocumentation","src":"2776:75:23","text":" @dev Returns the domain separator for the current chain."},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"2865:18:23","nodeType":"FunctionDefinition","parameters":{"id":3522,"nodeType":"ParameterList","parameters":[],"src":"2883:2:23"},"returnParameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3535,"src":"2909:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2909:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2908:9:23"},"scope":3602,"src":"2856:160:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3561,"nodeType":"Block","src":"3171:108:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":3549,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"3209:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3550,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"3219:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3551,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"3229:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3552,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3242:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3242:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3556,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3265:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3602","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3602","typeString":"contract EIP712Upgradeable"}],"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3257:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3554,"name":"address","nodeType":"ElementaryTypeName","src":"3257:7:23","typeDescriptions":{}}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3257:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3547,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3198:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3198:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3198:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3546,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3188:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3188:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3545,"id":3560,"nodeType":"Return","src":"3181:91:23"}]},"id":3562,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3031:21:23","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"typeHash","nameLocation":"3070:8:23","nodeType":"VariableDeclaration","scope":3562,"src":"3062:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3062:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3539,"mutability":"mutable","name":"nameHash","nameLocation":"3096:8:23","nodeType":"VariableDeclaration","scope":3562,"src":"3088:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3088:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"versionHash","nameLocation":"3122:11:23","nodeType":"VariableDeclaration","scope":3562,"src":"3114:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3114:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3052:87:23"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3562,"src":"3162:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3162:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3161:9:23"},"scope":3602,"src":"3022:257:23","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3577,"nodeType":"Block","src":"3990:90:23","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3572,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"4040:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4040:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3574,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"4062:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3570,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"4007:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$3452_$","typeString":"type(library ECDSAUpgradeable)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"4007:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4007:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3569,"id":3576,"nodeType":"Return","src":"4000:73:23"}]},"documentation":{"id":3563,"nodeType":"StructuredDocumentation","src":"3285:614:23","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3578,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"3913:16:23","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"structHash","nameLocation":"3938:10:23","nodeType":"VariableDeclaration","scope":3578,"src":"3930:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3930:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3929:20:23"},"returnParameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3578,"src":"3981:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3981:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3980:9:23"},"scope":3602,"src":"3904:176:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3586,"nodeType":"Block","src":"4383:36:23","statements":[{"expression":{"id":3584,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"4400:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3583,"id":3585,"nodeType":"Return","src":"4393:19:23"}]},"documentation":{"id":3579,"nodeType":"StructuredDocumentation","src":"4086:225:23","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":3587,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"4325:15:23","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[],"src":"4340:2:23"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3587,"src":"4374:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4374:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4373:9:23"},"scope":3602,"src":"4316:103:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3595,"nodeType":"Block","src":"4728:39:23","statements":[{"expression":{"id":3593,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"4745:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3592,"id":3594,"nodeType":"Return","src":"4738:22:23"}]},"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"4425:228:23","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":3596,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"4667:18:23","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[],"src":"4685:2:23"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3596,"src":"4719:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4719:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4718:9:23"},"scope":3602,"src":"4658:109:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":3597,"nodeType":"StructuredDocumentation","src":"4773:254:23","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3601,"mutability":"mutable","name":"__gap","nameLocation":"5052:5:23","nodeType":"VariableDeclaration","scope":3602,"src":"5032:25:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"5032:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"length":{"hexValue":"3530","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5040:2:23","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"5032:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3603,"src":"1396:3664:23","usedErrors":[]}],"src":"118:4943:23"},"id":23},"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ECDSAUpgradeable":[3452],"EIP712Upgradeable":[3602],"Initializable":[1268],"MathUpgradeable":[4654],"StringsUpgradeable":[3091]},"id":3606,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3604,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:24"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"./EIP712Upgradeable.sol","id":3605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3606,"sourceUnit":3603,"src":"213:33:24","symbolAliases":[],"unitAlias":""}],"src":"124:123:24"},"id":24},"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"EscrowUpgradeable":[3733],"Initializable":[1268],"OwnableUpgradeable":[710]},"id":3734,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3607,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:25"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"../../access/OwnableUpgradeable.sol","id":3608,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3734,"sourceUnit":711,"src":"132:45:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../AddressUpgradeable.sol","id":3609,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3734,"sourceUnit":2815,"src":"178:35:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":3610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3734,"sourceUnit":1269,"src":"214:45:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3612,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"923:13:25"},"id":3613,"nodeType":"InheritanceSpecifier","src":"923:13:25"},{"baseName":{"id":3614,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":710,"src":"938:18:25"},"id":3615,"nodeType":"InheritanceSpecifier","src":"938:18:25"}],"canonicalName":"EscrowUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3611,"nodeType":"StructuredDocumentation","src":"261:631:25","text":" @title Escrow\n @dev Base escrow contract, holds funds designated for a payee until they\n withdraw them.\n Intended usage: This contract (and derived escrow contracts) should be a\n standalone contract, that only interacts with the contract that instantiated\n it. That way, it is guaranteed that all Ether will be handled according to\n the `Escrow` rules, and there is no need to check for payable functions or\n transfers in the inheritance tree. The contract that uses the escrow as its\n payment method should be its owner, and provide public methods redirecting\n to the escrow's deposit and withdraw."},"fullyImplemented":true,"id":3733,"linearizedBaseContracts":[3733,710,2856,1268],"name":"EscrowUpgradeable","nameLocation":"902:17:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":3623,"nodeType":"Block","src":"1014:43:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3620,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1024:24:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1024:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3622,"nodeType":"ExpressionStatement","src":"1024:26:25"}]},"id":3624,"implemented":true,"kind":"function","modifiers":[{"id":3618,"kind":"modifierInvocation","modifierName":{"id":3617,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"997:16:25"},"nodeType":"ModifierInvocation","src":"997:16:25"}],"name":"__Escrow_init","nameLocation":"972:13:25","nodeType":"FunctionDefinition","parameters":{"id":3616,"nodeType":"ParameterList","parameters":[],"src":"985:2:25"},"returnParameters":{"id":3619,"nodeType":"ParameterList","parameters":[],"src":"1014:0:25"},"scope":3733,"src":"963:94:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3629,"nodeType":"Block","src":"1124:7:25","statements":[]},"id":3630,"implemented":true,"kind":"function","modifiers":[{"id":3627,"kind":"modifierInvocation","modifierName":{"id":3626,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1107:16:25"},"nodeType":"ModifierInvocation","src":"1107:16:25"}],"name":"__Escrow_init_unchained","nameLocation":"1072:23:25","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[],"src":"1095:2:25"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[],"src":"1124:0:25"},"scope":3733,"src":"1063:68:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3638,"nodeType":"Block","src":"1185:32:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3635,"name":"__Escrow_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"1195:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3637,"nodeType":"ExpressionStatement","src":"1195:15:25"}]},"functionSelector":"8129fc1c","id":3639,"implemented":true,"kind":"function","modifiers":[{"id":3633,"kind":"modifierInvocation","modifierName":{"id":3632,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":1170,"src":"1173:11:25"},"nodeType":"ModifierInvocation","src":"1173:11:25"}],"name":"initialize","nameLocation":"1145:10:25","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[],"src":"1155:2:25"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[],"src":"1185:0:25"},"scope":3733,"src":"1136:81:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":3642,"libraryName":{"id":3640,"name":"AddressUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2814,"src":"1228:18:25"},"nodeType":"UsingForDirective","src":"1222:45:25","typeName":{"id":3641,"name":"address","nodeType":"ElementaryTypeName","src":"1251:15:25","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"anonymous":false,"id":3648,"name":"Deposited","nameLocation":"1279:9:25","nodeType":"EventDefinition","parameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3644,"indexed":true,"mutability":"mutable","name":"payee","nameLocation":"1305:5:25","nodeType":"VariableDeclaration","scope":3648,"src":"1289:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3643,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3646,"indexed":false,"mutability":"mutable","name":"weiAmount","nameLocation":"1320:9:25","nodeType":"VariableDeclaration","scope":3648,"src":"1312:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1312:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1288:42:25"},"src":"1273:58:25"},{"anonymous":false,"id":3654,"name":"Withdrawn","nameLocation":"1342:9:25","nodeType":"EventDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"indexed":true,"mutability":"mutable","name":"payee","nameLocation":"1368:5:25","nodeType":"VariableDeclaration","scope":3654,"src":"1352:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3649,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3652,"indexed":false,"mutability":"mutable","name":"weiAmount","nameLocation":"1383:9:25","nodeType":"VariableDeclaration","scope":3654,"src":"1375:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1351:42:25"},"src":"1336:58:25"},{"constant":false,"id":3658,"mutability":"mutable","name":"_deposits","nameLocation":"1436:9:25","nodeType":"VariableDeclaration","scope":3733,"src":"1400:45:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3657,"keyType":{"id":3655,"name":"address","nodeType":"ElementaryTypeName","src":"1408:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1400:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1419:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":3669,"nodeType":"Block","src":"1517:40:25","statements":[{"expression":{"baseExpression":{"id":3665,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1534:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3667,"indexExpression":{"id":3666,"name":"payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"1544:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1534:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3664,"id":3668,"nodeType":"Return","src":"1527:23:25"}]},"functionSelector":"e3a9db1a","id":3670,"implemented":true,"kind":"function","modifiers":[],"name":"depositsOf","nameLocation":"1461:10:25","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"payee","nameLocation":"1480:5:25","nodeType":"VariableDeclaration","scope":3670,"src":"1472:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3659,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1471:15:25"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3670,"src":"1508:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1508:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1507:9:25"},"scope":3733,"src":"1452:105:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3694,"nodeType":"Block","src":"1805:118:25","statements":[{"assignments":[3679],"declarations":[{"constant":false,"id":3679,"mutability":"mutable","name":"amount","nameLocation":"1823:6:25","nodeType":"VariableDeclaration","scope":3694,"src":"1815:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3682,"initialValue":{"expression":{"id":3680,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1832:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1832:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1815:26:25"},{"expression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3683,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1851:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3685,"indexExpression":{"id":3684,"name":"payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"1861:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1851:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3686,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"1871:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1851:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3688,"nodeType":"ExpressionStatement","src":"1851:26:25"},{"eventCall":{"arguments":[{"id":3690,"name":"payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"1902:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3691,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"1909:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3689,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"1892:9:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1892:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3693,"nodeType":"EmitStatement","src":"1887:29:25"}]},"documentation":{"id":3671,"nodeType":"StructuredDocumentation","src":"1563:172:25","text":" @dev Stores the sent amount as credit to be withdrawn.\n @param payee The destination address of the funds.\n Emits a {Deposited} event."},"functionSelector":"f340fa01","id":3695,"implemented":true,"kind":"function","modifiers":[{"id":3676,"kind":"modifierInvocation","modifierName":{"id":3675,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":624,"src":"1795:9:25"},"nodeType":"ModifierInvocation","src":"1795:9:25"}],"name":"deposit","nameLocation":"1749:7:25","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"payee","nameLocation":"1765:5:25","nodeType":"VariableDeclaration","scope":3695,"src":"1757:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3672,"name":"address","nodeType":"ElementaryTypeName","src":"1757:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1756:15:25"},"returnParameters":{"id":3677,"nodeType":"ParameterList","parameters":[],"src":"1805:0:25"},"scope":3733,"src":"1740:183:25","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":3726,"nodeType":"Block","src":"2468:158:25","statements":[{"assignments":[3704],"declarations":[{"constant":false,"id":3704,"mutability":"mutable","name":"payment","nameLocation":"2486:7:25","nodeType":"VariableDeclaration","scope":3726,"src":"2478:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2478:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3708,"initialValue":{"baseExpression":{"id":3705,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2496:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3707,"indexExpression":{"id":3706,"name":"payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2506:5:25","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2496:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2478:34:25"},{"expression":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3709,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"2523:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3711,"indexExpression":{"id":3710,"name":"payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2533:5:25","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2523:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2542:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2523:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3714,"nodeType":"ExpressionStatement","src":"2523:20:25"},{"expression":{"arguments":[{"id":3718,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"2570:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3715,"name":"payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2554:5:25","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":2582,"src":"2554:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2554:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3720,"nodeType":"ExpressionStatement","src":"2554:24:25"},{"eventCall":{"arguments":[{"id":3722,"name":"payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2604:5:25","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3723,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"2611:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3721,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2594:9:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2594:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3725,"nodeType":"EmitStatement","src":"2589:30:25"}]},"documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"1929:468:25","text":" @dev Withdraw accumulated balance for a payee, forwarding all gas to the\n recipient.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee The address whose funds will be withdrawn and transferred to.\n Emits a {Withdrawn} event."},"functionSelector":"51cff8d9","id":3727,"implemented":true,"kind":"function","modifiers":[{"id":3701,"kind":"modifierInvocation","modifierName":{"id":3700,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":624,"src":"2458:9:25"},"nodeType":"ModifierInvocation","src":"2458:9:25"}],"name":"withdraw","nameLocation":"2411:8:25","nodeType":"FunctionDefinition","parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"payee","nameLocation":"2436:5:25","nodeType":"VariableDeclaration","scope":3727,"src":"2420:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3697,"name":"address","nodeType":"ElementaryTypeName","src":"2420:15:25","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2419:23:25"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[],"src":"2468:0:25"},"scope":3733,"src":"2402:224:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"2632:254:25","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3732,"mutability":"mutable","name":"__gap","nameLocation":"2911:5:25","nodeType":"VariableDeclaration","scope":3733,"src":"2891:25:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2891:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"length":{"hexValue":"3439","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2899:2:25","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2891:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":3734,"src":"893:2026:25","usedErrors":[]}],"src":"107:2813:25"},"id":25},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2814],"ERC165Upgradeable":[3777],"IERC165Upgradeable":[3789],"Initializable":[1268]},"id":3778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3735,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:26"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":3736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3778,"sourceUnit":3790,"src":"124:34:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":3737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3778,"sourceUnit":1269,"src":"159:45:26","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3739,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"822:13:26"},"id":3740,"nodeType":"InheritanceSpecifier","src":"822:13:26"},{"baseName":{"id":3741,"name":"IERC165Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":3789,"src":"837:18:26"},"id":3742,"nodeType":"InheritanceSpecifier","src":"837:18:26"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3738,"nodeType":"StructuredDocumentation","src":"206:576:26","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3777,"linearizedBaseContracts":[3777,3789,1268],"name":"ERC165Upgradeable","nameLocation":"801:17:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":3747,"nodeType":"Block","src":"913:7:26","statements":[]},"id":3748,"implemented":true,"kind":"function","modifiers":[{"id":3745,"kind":"modifierInvocation","modifierName":{"id":3744,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"896:16:26"},"nodeType":"ModifierInvocation","src":"896:16:26"}],"name":"__ERC165_init","nameLocation":"871:13:26","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[],"src":"884:2:26"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[],"src":"913:0:26"},"scope":3777,"src":"862:58:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3753,"nodeType":"Block","src":"987:7:26","statements":[]},"id":3754,"implemented":true,"kind":"function","modifiers":[{"id":3751,"kind":"modifierInvocation","modifierName":{"id":3750,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"970:16:26"},"nodeType":"ModifierInvocation","src":"970:16:26"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:26","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[],"src":"958:2:26"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[],"src":"987:0:26"},"scope":3777,"src":"926:68:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3788],"body":{"id":3770,"nodeType":"Block","src":"1151:75:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"1168:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3765,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1188:18:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$3789_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$3789_$","typeString":"type(contract IERC165Upgradeable)"}],"id":3764,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1183:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$3789","typeString":"type(contract IERC165Upgradeable)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3762,"id":3769,"nodeType":"Return","src":"1161:58:26"}]},"documentation":{"id":3755,"nodeType":"StructuredDocumentation","src":"999:56:26","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3771,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:26","nodeType":"FunctionDefinition","overrides":{"id":3759,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:26"},"parameters":{"id":3758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:26","nodeType":"VariableDeclaration","scope":3771,"src":"1087:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3756,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:26"},"returnParameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3771,"src":"1145:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3760,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:26"},"scope":3777,"src":"1060:166:26","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":3772,"nodeType":"StructuredDocumentation","src":"1232:254:26","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3776,"mutability":"mutable","name":"__gap","nameLocation":"1511:5:26","nodeType":"VariableDeclaration","scope":3777,"src":"1491:25:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3775,"length":{"hexValue":"3530","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:26","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3778,"src":"783:736:26","usedErrors":[]}],"src":"99:1421:26"},"id":26},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[3789]},"id":3790,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3780,"nodeType":"StructuredDocumentation","src":"125:279:27","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3789,"linearizedBaseContracts":[3789],"name":"IERC165Upgradeable","nameLocation":"415:18:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3781,"nodeType":"StructuredDocumentation","src":"440:340:27","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3788,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:27","nodeType":"FunctionDefinition","parameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:27","nodeType":"VariableDeclaration","scope":3788,"src":"812:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3782,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:27"},"returnParameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3788,"src":"855:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3785,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:27"},"scope":3789,"src":"785:76:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3790,"src":"405:458:27","usedErrors":[]}],"src":"100:764:27"},"id":27},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[4654]},"id":4655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3791,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3792,"nodeType":"StructuredDocumentation","src":"133:73:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4654,"linearizedBaseContracts":[4654],"name":"MathUpgradeable","nameLocation":"215:15:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":3796,"members":[{"id":3793,"name":"Down","nameLocation":"261:4:28","nodeType":"EnumValue","src":"261:4:28"},{"id":3794,"name":"Up","nameLocation":"303:2:28","nodeType":"EnumValue","src":"303:2:28"},{"id":3795,"name":"Zero","nameLocation":"334:4:28","nodeType":"EnumValue","src":"334:4:28"}],"name":"Rounding","nameLocation":"242:8:28","nodeType":"EnumDefinition","src":"237:122:28"},{"body":{"id":3813,"nodeType":"Block","src":"496:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"513:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3807,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"517:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"513:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3810,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"525:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"513:13:28","trueExpression":{"id":3809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"521:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3805,"id":3812,"nodeType":"Return","src":"506:20:28"}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"365:59:28","text":" @dev Returns the largest of two numbers."},"id":3814,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"438:3:28","nodeType":"FunctionDefinition","parameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"a","nameLocation":"450:1:28","nodeType":"VariableDeclaration","scope":3814,"src":"442:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"b","nameLocation":"461:1:28","nodeType":"VariableDeclaration","scope":3814,"src":"453:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"441:22:28"},"returnParameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"487:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"486:9:28"},"scope":4654,"src":"429:104:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3831,"nodeType":"Block","src":"671:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"688:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"692:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"688:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"700:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"688:13:28","trueExpression":{"id":3827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"696:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3823,"id":3830,"nodeType":"Return","src":"681:20:28"}]},"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"539:60:28","text":" @dev Returns the smallest of two numbers."},"id":3832,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"613:3:28","nodeType":"FunctionDefinition","parameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"a","nameLocation":"625:1:28","nodeType":"VariableDeclaration","scope":3832,"src":"617:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3819,"mutability":"mutable","name":"b","nameLocation":"636:1:28","nodeType":"VariableDeclaration","scope":3832,"src":"628:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"616:22:28"},"returnParameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3832,"src":"662:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"661:9:28"},"scope":4654,"src":"604:104:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3854,"nodeType":"Block","src":"892:82:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"947:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3843,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"951:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"947:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"946:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"957:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"961:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"957:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"956:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"966:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"956:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"946:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3841,"id":3853,"nodeType":"Return","src":"939:28:28"}]},"documentation":{"id":3833,"nodeType":"StructuredDocumentation","src":"714:102:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3855,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"830:7:28","nodeType":"FunctionDefinition","parameters":{"id":3838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"a","nameLocation":"846:1:28","nodeType":"VariableDeclaration","scope":3855,"src":"838:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"b","nameLocation":"857:1:28","nodeType":"VariableDeclaration","scope":3855,"src":"849:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"837:22:28"},"returnParameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3855,"src":"883:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3839,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"882:9:28"},"scope":4654,"src":"821:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3879,"nodeType":"Block","src":"1244:123:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"1332:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1332:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"1346:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1346:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1345:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3873,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"1355:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1345:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1359:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1345:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1332:28:28","trueExpression":{"hexValue":"30","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1341:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3864,"id":3878,"nodeType":"Return","src":"1325:35:28"}]},"documentation":{"id":3856,"nodeType":"StructuredDocumentation","src":"980:188:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3880,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1182:7:28","nodeType":"FunctionDefinition","parameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"a","nameLocation":"1198:1:28","nodeType":"VariableDeclaration","scope":3880,"src":"1190:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"b","nameLocation":"1209:1:28","nodeType":"VariableDeclaration","scope":3880,"src":"1201:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1201:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1189:22:28"},"returnParameters":{"id":3864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3880,"src":"1235:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1234:9:28"},"scope":4654,"src":"1173:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4001,"nodeType":"Block","src":"1811:3797:28","statements":[{"id":4000,"nodeType":"UncheckedBlock","src":"1821:3781:28","statements":[{"assignments":[3893],"declarations":[{"constant":false,"id":3893,"mutability":"mutable","name":"prod0","nameLocation":"2150:5:28","nodeType":"VariableDeclaration","scope":4000,"src":"2142:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2142:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3894,"nodeType":"VariableDeclarationStatement","src":"2142:13:28"},{"assignments":[3896],"declarations":[{"constant":false,"id":3896,"mutability":"mutable","name":"prod1","nameLocation":"2222:5:28","nodeType":"VariableDeclaration","scope":4000,"src":"2214:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2214:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3897,"nodeType":"VariableDeclarationStatement","src":"2214:13:28"},{"AST":{"nodeType":"YulBlock","src":"2294:157:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2312:30:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2329:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"2332:1:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2339:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2335:3:28"},"nodeType":"YulFunctionCall","src":"2335:6:28"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2322:6:28"},"nodeType":"YulFunctionCall","src":"2322:20:28"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2316:2:28","type":""}]},{"nodeType":"YulAssignment","src":"2359:18:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2372:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"2375:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2368:3:28"},"nodeType":"YulFunctionCall","src":"2368:9:28"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2359:5:28"}]},{"nodeType":"YulAssignment","src":"2394:43:28","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2411:2:28"},{"name":"prod0","nodeType":"YulIdentifier","src":"2415:5:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2407:3:28"},"nodeType":"YulFunctionCall","src":"2407:14:28"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2426:2:28"},{"name":"prod0","nodeType":"YulIdentifier","src":"2430:5:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2423:2:28"},"nodeType":"YulFunctionCall","src":"2423:13:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2403:3:28"},"nodeType":"YulFunctionCall","src":"2403:34:28"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2394:5:28"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3893,"isOffset":false,"isSlot":false,"src":"2359:5:28","valueSize":1},{"declaration":3893,"isOffset":false,"isSlot":false,"src":"2415:5:28","valueSize":1},{"declaration":3893,"isOffset":false,"isSlot":false,"src":"2430:5:28","valueSize":1},{"declaration":3896,"isOffset":false,"isSlot":false,"src":"2394:5:28","valueSize":1},{"declaration":3883,"isOffset":false,"isSlot":false,"src":"2329:1:28","valueSize":1},{"declaration":3883,"isOffset":false,"isSlot":false,"src":"2372:1:28","valueSize":1},{"declaration":3885,"isOffset":false,"isSlot":false,"src":"2332:1:28","valueSize":1},{"declaration":3885,"isOffset":false,"isSlot":false,"src":"2375:1:28","valueSize":1}],"id":3898,"nodeType":"InlineAssembly","src":"2285:166:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"2532:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2541:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2532:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3907,"nodeType":"IfStatement","src":"2528:75:28","trueBody":{"id":3906,"nodeType":"Block","src":"2544:59:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3902,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"2569:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3903,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2577:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2569:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3891,"id":3905,"nodeType":"Return","src":"2562:26:28"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2713:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3910,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"2727:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2713:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3908,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2705:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2705:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3913,"nodeType":"ExpressionStatement","src":"2705:28:28"},{"assignments":[3915],"declarations":[{"constant":false,"id":3915,"mutability":"mutable","name":"remainder","nameLocation":"2997:9:28","nodeType":"VariableDeclaration","scope":4000,"src":"2989:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3916,"nodeType":"VariableDeclarationStatement","src":"2989:17:28"},{"AST":{"nodeType":"YulBlock","src":"3029:291:28","statements":[{"nodeType":"YulAssignment","src":"3098:38:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3118:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"3121:1:28"},{"name":"denominator","nodeType":"YulIdentifier","src":"3124:11:28"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3111:6:28"},"nodeType":"YulFunctionCall","src":"3111:25:28"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3098:9:28"}]},{"nodeType":"YulAssignment","src":"3218:41:28","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3231:5:28"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3241:9:28"},{"name":"prod0","nodeType":"YulIdentifier","src":"3252:5:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3238:2:28"},"nodeType":"YulFunctionCall","src":"3238:20:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3227:3:28"},"nodeType":"YulFunctionCall","src":"3227:32:28"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3218:5:28"}]},{"nodeType":"YulAssignment","src":"3276:30:28","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3289:5:28"},{"name":"remainder","nodeType":"YulIdentifier","src":"3296:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3285:3:28"},"nodeType":"YulFunctionCall","src":"3285:21:28"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3276:5:28"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3887,"isOffset":false,"isSlot":false,"src":"3124:11:28","valueSize":1},{"declaration":3893,"isOffset":false,"isSlot":false,"src":"3252:5:28","valueSize":1},{"declaration":3893,"isOffset":false,"isSlot":false,"src":"3276:5:28","valueSize":1},{"declaration":3893,"isOffset":false,"isSlot":false,"src":"3289:5:28","valueSize":1},{"declaration":3896,"isOffset":false,"isSlot":false,"src":"3218:5:28","valueSize":1},{"declaration":3896,"isOffset":false,"isSlot":false,"src":"3231:5:28","valueSize":1},{"declaration":3915,"isOffset":false,"isSlot":false,"src":"3098:9:28","valueSize":1},{"declaration":3915,"isOffset":false,"isSlot":false,"src":"3241:9:28","valueSize":1},{"declaration":3915,"isOffset":false,"isSlot":false,"src":"3296:9:28","valueSize":1},{"declaration":3883,"isOffset":false,"isSlot":false,"src":"3118:1:28","valueSize":1},{"declaration":3885,"isOffset":false,"isSlot":false,"src":"3121:1:28","valueSize":1}],"id":3917,"nodeType":"InlineAssembly","src":"3020:300:28"},{"assignments":[3919],"declarations":[{"constant":false,"id":3919,"mutability":"mutable","name":"twos","nameLocation":"3635:4:28","nodeType":"VariableDeclaration","scope":4000,"src":"3627:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3918,"name":"uint256","nodeType":"ElementaryTypeName","src":"3627:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3927,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3920,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3642:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3657:12:28","subExpression":{"id":3921,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3658:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3672:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3657:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3656:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3642:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3627:47:28"},{"AST":{"nodeType":"YulBlock","src":"3697:362:28","statements":[{"nodeType":"YulAssignment","src":"3762:37:28","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3781:11:28"},{"name":"twos","nodeType":"YulIdentifier","src":"3794:4:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3777:3:28"},"nodeType":"YulFunctionCall","src":"3777:22:28"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3762:11:28"}]},{"nodeType":"YulAssignment","src":"3866:25:28","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3879:5:28"},{"name":"twos","nodeType":"YulIdentifier","src":"3886:4:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3875:3:28"},"nodeType":"YulFunctionCall","src":"3875:16:28"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3866:5:28"}]},{"nodeType":"YulAssignment","src":"4006:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4026:1:28","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4029:4:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4022:3:28"},"nodeType":"YulFunctionCall","src":"4022:12:28"},{"name":"twos","nodeType":"YulIdentifier","src":"4036:4:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4018:3:28"},"nodeType":"YulFunctionCall","src":"4018:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4043:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4014:3:28"},"nodeType":"YulFunctionCall","src":"4014:31:28"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4006:4:28"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3887,"isOffset":false,"isSlot":false,"src":"3762:11:28","valueSize":1},{"declaration":3887,"isOffset":false,"isSlot":false,"src":"3781:11:28","valueSize":1},{"declaration":3893,"isOffset":false,"isSlot":false,"src":"3866:5:28","valueSize":1},{"declaration":3893,"isOffset":false,"isSlot":false,"src":"3879:5:28","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"3794:4:28","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"3886:4:28","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"4006:4:28","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"4029:4:28","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"4036:4:28","valueSize":1}],"id":3928,"nodeType":"InlineAssembly","src":"3688:371:28"},{"expression":{"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3929,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"4125:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"4134:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3931,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"4142:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4134:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4125:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3934,"nodeType":"ExpressionStatement","src":"4125:21:28"},{"assignments":[3936],"declarations":[{"constant":false,"id":3936,"mutability":"mutable","name":"inverse","nameLocation":"4472:7:28","nodeType":"VariableDeclaration","scope":4000,"src":"4464:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"4464:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3943,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4483:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3938,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4487:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4482:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4502:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4482:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4464:39:28"},{"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3944,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4731:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4735:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3947,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4749:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4735:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4731:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4720:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3951,"nodeType":"ExpressionStatement","src":"4720:36:28"},{"expression":{"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3952,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4789:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4800:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3954,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4804:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3955,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4818:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4804:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4800:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4789:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3959,"nodeType":"ExpressionStatement","src":"4789:36:28"},{"expression":{"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3960,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4859:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4870:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3962,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4874:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3963,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4888:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4874:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4870:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4859:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3967,"nodeType":"ExpressionStatement","src":"4859:36:28"},{"expression":{"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3968,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4929:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4940:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4944:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3971,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4958:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4944:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4940:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4929:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3975,"nodeType":"ExpressionStatement","src":"4929:36:28"},{"expression":{"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3976,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4999:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5010:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"5014:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3979,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"5028:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5010:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4999:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3983,"nodeType":"ExpressionStatement","src":"4999:36:28"},{"expression":{"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3984,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"5070:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5081:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"5085:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3987,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"5099:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5085:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5081:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5070:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3991,"nodeType":"ExpressionStatement","src":"5070:36:28"},{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"5540:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"5549:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3994,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"5557:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5549:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5540:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3997,"nodeType":"ExpressionStatement","src":"5540:24:28"},{"expression":{"id":3998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"5585:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3891,"id":3999,"nodeType":"Return","src":"5578:13:28"}]}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"1373:305:28","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4002,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1692:6:28","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"x","nameLocation":"1716:1:28","nodeType":"VariableDeclaration","scope":4002,"src":"1708:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"y","nameLocation":"1735:1:28","nodeType":"VariableDeclaration","scope":4002,"src":"1727:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1727:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3887,"mutability":"mutable","name":"denominator","nameLocation":"1754:11:28","nodeType":"VariableDeclaration","scope":4002,"src":"1746:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1746:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1698:73:28"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"result","nameLocation":"1803:6:28","nodeType":"VariableDeclaration","scope":4002,"src":"1795:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1795:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1794:16:28"},"scope":4654,"src":"1683:3925:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"5888:189:28","statements":[{"assignments":[4018],"declarations":[{"constant":false,"id":4018,"mutability":"mutable","name":"result","nameLocation":"5906:6:28","nodeType":"VariableDeclaration","scope":4045,"src":"5898:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4024,"initialValue":{"arguments":[{"id":4020,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"5922:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4021,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"5925:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4022,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"5928:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4019,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4002,4046],"referencedDeclaration":4002,"src":"5915:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5915:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5898:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"5954:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4026,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"5966:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3796_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"5966:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"src":"5954:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4030,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"5988:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4031,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"5991:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4032,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"5994:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4029,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5981:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5981:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6009:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5981:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5954:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4042,"nodeType":"IfStatement","src":"5950:98:28","trueBody":{"id":4041,"nodeType":"Block","src":"6012:36:28","statements":[{"expression":{"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"6026:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6036:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6026:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4040,"nodeType":"ExpressionStatement","src":"6026:11:28"}]}},{"expression":{"id":4043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"6064:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4016,"id":4044,"nodeType":"Return","src":"6057:13:28"}]},"documentation":{"id":4003,"nodeType":"StructuredDocumentation","src":"5614:121:28","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5749:6:28","nodeType":"FunctionDefinition","parameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"x","nameLocation":"5773:1:28","nodeType":"VariableDeclaration","scope":4046,"src":"5765:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"5765:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"y","nameLocation":"5792:1:28","nodeType":"VariableDeclaration","scope":4046,"src":"5784:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"5784:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"denominator","nameLocation":"5811:11:28","nodeType":"VariableDeclaration","scope":4046,"src":"5803:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"5803:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4012,"mutability":"mutable","name":"rounding","nameLocation":"5841:8:28","nodeType":"VariableDeclaration","scope":4046,"src":"5832:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4011,"nodeType":"UserDefinedTypeName","pathNode":{"id":4010,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"5832:8:28"},"referencedDeclaration":3796,"src":"5832:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"5755:100:28"},"returnParameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"5879:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"5879:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5878:9:28"},"scope":4654,"src":"5740:337:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4157,"nodeType":"Block","src":"6353:1585:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4054,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"6367:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6372:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6367:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4060,"nodeType":"IfStatement","src":"6363:45:28","trueBody":{"id":4059,"nodeType":"Block","src":"6375:33:28","statements":[{"expression":{"hexValue":"30","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4053,"id":4058,"nodeType":"Return","src":"6389:8:28"}]}},{"assignments":[4062],"declarations":[{"constant":false,"id":4062,"mutability":"mutable","name":"result","nameLocation":"7095:6:28","nodeType":"VariableDeclaration","scope":4157,"src":"7087:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"7087:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4071,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7104:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7115:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4064,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4326,4362],"referencedDeclaration":4326,"src":"7110:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7110:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7121:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7110:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7109:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7104:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7087:36:28"},{"id":4156,"nodeType":"UncheckedBlock","src":"7524:408:28","statements":[{"expression":{"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7548:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7558:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7567:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7571:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7567:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7558:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7557:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7557:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7548:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4082,"nodeType":"ExpressionStatement","src":"7548:35:28"},{"expression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7597:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7607:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7616:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7620:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7616:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7607:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7606:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7631:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7606:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7597:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4093,"nodeType":"ExpressionStatement","src":"7597:35:28"},{"expression":{"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7646:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7656:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7665:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7669:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7665:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7656:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7655:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7680:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7655:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7646:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4104,"nodeType":"ExpressionStatement","src":"7646:35:28"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7695:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7705:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7714:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7718:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7714:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7704:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7729:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7704:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7695:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"7695:35:28"},{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7744:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7754:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7763:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7767:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7763:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7754:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7753:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7778:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7753:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7744:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4126,"nodeType":"ExpressionStatement","src":"7744:35:28"},{"expression":{"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7793:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7803:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4129,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7812:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7816:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4137,"nodeType":"ExpressionStatement","src":"7793:35:28"},{"expression":{"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7842:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7852:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7861:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7865:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4148,"nodeType":"ExpressionStatement","src":"7842:35:28"},{"expression":{"arguments":[{"id":4150,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7902:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"7910:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"7914:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4149,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"7898:3:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7898:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4053,"id":4155,"nodeType":"Return","src":"7891:30:28"}]}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"6083:208:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4158,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6305:4:28","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"a","nameLocation":"6318:1:28","nodeType":"VariableDeclaration","scope":4158,"src":"6310:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6309:11:28"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4158,"src":"6344:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"6344:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6343:9:28"},"scope":4654,"src":"6296:1642:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4193,"nodeType":"Block","src":"8114:161:28","statements":[{"id":4192,"nodeType":"UncheckedBlock","src":"8124:145:28","statements":[{"assignments":[4170],"declarations":[{"constant":false,"id":4170,"mutability":"mutable","name":"result","nameLocation":"8156:6:28","nodeType":"VariableDeclaration","scope":4192,"src":"8148:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"8148:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4174,"initialValue":{"arguments":[{"id":4172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"8170:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4171,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4158,4194],"referencedDeclaration":4158,"src":"8165:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8165:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8148:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"8193:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"8203:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4177,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"8215:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3796_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"8215:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"src":"8203:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"8230:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"8239:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8230:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4183,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"8248:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8230:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8203:46:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8203:54:28","trueExpression":{"hexValue":"31","id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8252:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8202:56:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8193:65:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4168,"id":4191,"nodeType":"Return","src":"8186:72:28"}]}]},"documentation":{"id":4159,"nodeType":"StructuredDocumentation","src":"7944:89:28","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4194,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8047:4:28","nodeType":"FunctionDefinition","parameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"a","nameLocation":"8060:1:28","nodeType":"VariableDeclaration","scope":4194,"src":"8052:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"8052:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4164,"mutability":"mutable","name":"rounding","nameLocation":"8072:8:28","nodeType":"VariableDeclaration","scope":4194,"src":"8063:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4163,"nodeType":"UserDefinedTypeName","pathNode":{"id":4162,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"8063:8:28"},"referencedDeclaration":3796,"src":"8063:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8051:30:28"},"returnParameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4194,"src":"8105:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"8105:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8104:9:28"},"scope":4654,"src":"8038:237:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4325,"nodeType":"Block","src":"8460:922:28","statements":[{"assignments":[4203],"declarations":[{"constant":false,"id":4203,"mutability":"mutable","name":"result","nameLocation":"8478:6:28","nodeType":"VariableDeclaration","scope":4325,"src":"8470:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"8470:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4205,"initialValue":{"hexValue":"30","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8487:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8470:18:28"},{"id":4322,"nodeType":"UncheckedBlock","src":"8498:855:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8526:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8535:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8526:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8541:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8526:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4220,"nodeType":"IfStatement","src":"8522:99:28","trueBody":{"id":4219,"nodeType":"Block","src":"8544:77:28","statements":[{"expression":{"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8562:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8572:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8562:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4214,"nodeType":"ExpressionStatement","src":"8562:13:28"},{"expression":{"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8593:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8603:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8593:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4218,"nodeType":"ExpressionStatement","src":"8593:13:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8638:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8647:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8638:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8652:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8638:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4235,"nodeType":"IfStatement","src":"8634:96:28","trueBody":{"id":4234,"nodeType":"Block","src":"8655:75:28","statements":[{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8673:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8673:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4229,"nodeType":"ExpressionStatement","src":"8673:12:28"},{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8703:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8713:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8703:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4233,"nodeType":"ExpressionStatement","src":"8703:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8747:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8756:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8747:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8761:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8747:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4250,"nodeType":"IfStatement","src":"8743:96:28","trueBody":{"id":4249,"nodeType":"Block","src":"8764:75:28","statements":[{"expression":{"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8782:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8792:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8782:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4244,"nodeType":"ExpressionStatement","src":"8782:12:28"},{"expression":{"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4245,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8812:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8822:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8812:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4248,"nodeType":"ExpressionStatement","src":"8812:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8856:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8865:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8856:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8870:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8856:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4265,"nodeType":"IfStatement","src":"8852:96:28","trueBody":{"id":4264,"nodeType":"Block","src":"8873:75:28","statements":[{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8891:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8901:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8891:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"8891:12:28"},{"expression":{"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8921:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8931:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8921:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4263,"nodeType":"ExpressionStatement","src":"8921:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8965:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8974:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8965:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8978:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8965:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4280,"nodeType":"IfStatement","src":"8961:93:28","trueBody":{"id":4279,"nodeType":"Block","src":"8981:73:28","statements":[{"expression":{"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"8999:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8999:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4274,"nodeType":"ExpressionStatement","src":"8999:11:28"},{"expression":{"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"9028:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9038:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9028:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4278,"nodeType":"ExpressionStatement","src":"9028:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"9071:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9080:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9071:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9084:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9071:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4295,"nodeType":"IfStatement","src":"9067:93:28","trueBody":{"id":4294,"nodeType":"Block","src":"9087:73:28","statements":[{"expression":{"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"9105:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9105:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4289,"nodeType":"ExpressionStatement","src":"9105:11:28"},{"expression":{"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"9134:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9144:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9134:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4293,"nodeType":"ExpressionStatement","src":"9134:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"9177:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9186:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9177:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9190:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9177:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4310,"nodeType":"IfStatement","src":"9173:93:28","trueBody":{"id":4309,"nodeType":"Block","src":"9193:73:28","statements":[{"expression":{"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"9211:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9221:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9211:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4304,"nodeType":"ExpressionStatement","src":"9211:11:28"},{"expression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"9240:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9250:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9240:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4308,"nodeType":"ExpressionStatement","src":"9240:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"9283:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9292:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9283:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9296:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9283:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4321,"nodeType":"IfStatement","src":"9279:64:28","trueBody":{"id":4320,"nodeType":"Block","src":"9299:44:28","statements":[{"expression":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4316,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"9317:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9317:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4319,"nodeType":"ExpressionStatement","src":"9317:11:28"}]}}]},{"expression":{"id":4323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"9369:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4201,"id":4324,"nodeType":"Return","src":"9362:13:28"}]},"documentation":{"id":4195,"nodeType":"StructuredDocumentation","src":"8281:113:28","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4326,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8408:4:28","nodeType":"FunctionDefinition","parameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"value","nameLocation":"8421:5:28","nodeType":"VariableDeclaration","scope":4326,"src":"8413:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"8413:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8412:15:28"},"returnParameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4326,"src":"8451:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"8451:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8450:9:28"},"scope":4654,"src":"8399:983:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4361,"nodeType":"Block","src":"9615:165:28","statements":[{"id":4360,"nodeType":"UncheckedBlock","src":"9625:149:28","statements":[{"assignments":[4338],"declarations":[{"constant":false,"id":4338,"mutability":"mutable","name":"result","nameLocation":"9657:6:28","nodeType":"VariableDeclaration","scope":4360,"src":"9649:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"9649:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4342,"initialValue":{"arguments":[{"id":4340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"9671:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4339,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4326,4362],"referencedDeclaration":4326,"src":"9666:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9666:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9649:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"9698:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4344,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"9708:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4345,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"9720:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3796_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"9720:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"src":"9708:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9735:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"9740:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9735:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"9749:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9735:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9708:46:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9761:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9708:54:28","trueExpression":{"hexValue":"31","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9757:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9707:56:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9698:65:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4336,"id":4359,"nodeType":"Return","src":"9691:72:28"}]}]},"documentation":{"id":4327,"nodeType":"StructuredDocumentation","src":"9388:142:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4362,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9544:4:28","nodeType":"FunctionDefinition","parameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"value","nameLocation":"9557:5:28","nodeType":"VariableDeclaration","scope":4362,"src":"9549:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"9549:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"rounding","nameLocation":"9573:8:28","nodeType":"VariableDeclaration","scope":4362,"src":"9564:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4331,"nodeType":"UserDefinedTypeName","pathNode":{"id":4330,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"9564:8:28"},"referencedDeclaration":3796,"src":"9564:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9548:34:28"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4362,"src":"9606:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4334,"name":"uint256","nodeType":"ElementaryTypeName","src":"9606:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9605:9:28"},"scope":4654,"src":"9535:245:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4490,"nodeType":"Block","src":"9967:828:28","statements":[{"assignments":[4371],"declarations":[{"constant":false,"id":4371,"mutability":"mutable","name":"result","nameLocation":"9985:6:28","nodeType":"VariableDeclaration","scope":4490,"src":"9977:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4370,"name":"uint256","nodeType":"ElementaryTypeName","src":"9977:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4373,"initialValue":{"hexValue":"30","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9994:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9977:18:28"},{"id":4487,"nodeType":"UncheckedBlock","src":"10005:761:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10033:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10042:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10046:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10042:6:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10033:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4390,"nodeType":"IfStatement","src":"10029:99:28","trueBody":{"id":4389,"nodeType":"Block","src":"10050:78:28","statements":[{"expression":{"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10068:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10077:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10081:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10077:6:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10068:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4384,"nodeType":"ExpressionStatement","src":"10068:15:28"},{"expression":{"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"10101:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10111:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10101:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4388,"nodeType":"ExpressionStatement","src":"10101:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10145:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10154:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10158:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10154:6:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10145:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4407,"nodeType":"IfStatement","src":"10141:99:28","trueBody":{"id":4406,"nodeType":"Block","src":"10162:78:28","statements":[{"expression":{"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10180:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10189:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10193:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10189:6:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10180:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4401,"nodeType":"ExpressionStatement","src":"10180:15:28"},{"expression":{"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"10213:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10223:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10213:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4405,"nodeType":"ExpressionStatement","src":"10213:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10257:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10270:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10266:6:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10257:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4424,"nodeType":"IfStatement","src":"10253:99:28","trueBody":{"id":4423,"nodeType":"Block","src":"10274:78:28","statements":[{"expression":{"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10292:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10301:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10305:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10301:6:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10292:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4418,"nodeType":"ExpressionStatement","src":"10292:15:28"},{"expression":{"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"10325:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10335:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10325:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4422,"nodeType":"ExpressionStatement","src":"10325:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10369:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10378:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10382:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10378:5:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10369:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4441,"nodeType":"IfStatement","src":"10365:96:28","trueBody":{"id":4440,"nodeType":"Block","src":"10385:76:28","statements":[{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10403:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10412:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10416:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10412:5:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10403:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"10403:14:28"},{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"10435:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10445:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10435:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"nodeType":"ExpressionStatement","src":"10435:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10478:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10487:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10491:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10487:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10478:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4458,"nodeType":"IfStatement","src":"10474:96:28","trueBody":{"id":4457,"nodeType":"Block","src":"10494:76:28","statements":[{"expression":{"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10512:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10521:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10521:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10512:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4452,"nodeType":"ExpressionStatement","src":"10512:14:28"},{"expression":{"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"10544:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10554:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10544:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4456,"nodeType":"ExpressionStatement","src":"10544:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10587:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10596:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10600:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10596:5:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10587:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4475,"nodeType":"IfStatement","src":"10583:96:28","trueBody":{"id":4474,"nodeType":"Block","src":"10603:76:28","statements":[{"expression":{"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10621:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10634:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10630:5:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10621:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"nodeType":"ExpressionStatement","src":"10621:14:28"},{"expression":{"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"10653:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10663:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10653:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4473,"nodeType":"ExpressionStatement","src":"10653:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10696:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10705:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10709:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10705:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10696:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4486,"nodeType":"IfStatement","src":"10692:64:28","trueBody":{"id":4485,"nodeType":"Block","src":"10712:44:28","statements":[{"expression":{"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"10730:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10740:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10730:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4484,"nodeType":"ExpressionStatement","src":"10730:11:28"}]}}]},{"expression":{"id":4488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"10782:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4369,"id":4489,"nodeType":"Return","src":"10775:13:28"}]},"documentation":{"id":4363,"nodeType":"StructuredDocumentation","src":"9786:114:28","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4491,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9914:5:28","nodeType":"FunctionDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"value","nameLocation":"9928:5:28","nodeType":"VariableDeclaration","scope":4491,"src":"9920:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"9920:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9919:15:28"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4491,"src":"9958:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"9958:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9957:9:28"},"scope":4654,"src":"9905:890:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4526,"nodeType":"Block","src":"11030:165:28","statements":[{"id":4525,"nodeType":"UncheckedBlock","src":"11040:149:28","statements":[{"assignments":[4503],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"result","nameLocation":"11072:6:28","nodeType":"VariableDeclaration","scope":4525,"src":"11064:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"11064:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4507,"initialValue":{"arguments":[{"id":4505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"11087:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4504,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4491,4527],"referencedDeclaration":4491,"src":"11081:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11081:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11064:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"11114:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"11124:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4510,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"11136:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3796_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"11136:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"src":"11124:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11151:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"11155:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11151:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"11164:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11151:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11124:45:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11176:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11124:53:28","trueExpression":{"hexValue":"31","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11172:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11123:55:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11114:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4501,"id":4524,"nodeType":"Return","src":"11107:71:28"}]}]},"documentation":{"id":4492,"nodeType":"StructuredDocumentation","src":"10801:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4527,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10958:5:28","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"value","nameLocation":"10972:5:28","nodeType":"VariableDeclaration","scope":4527,"src":"10964:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"10964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"rounding","nameLocation":"10988:8:28","nodeType":"VariableDeclaration","scope":4527,"src":"10979:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4496,"nodeType":"UserDefinedTypeName","pathNode":{"id":4495,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"10979:8:28"},"referencedDeclaration":3796,"src":"10979:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"10963:34:28"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4527,"src":"11021:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"11021:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11020:9:28"},"scope":4654,"src":"10949:246:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4613,"nodeType":"Block","src":"11509:600:28","statements":[{"assignments":[4536],"declarations":[{"constant":false,"id":4536,"mutability":"mutable","name":"result","nameLocation":"11527:6:28","nodeType":"VariableDeclaration","scope":4613,"src":"11519:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"11519:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4538,"initialValue":{"hexValue":"30","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11536:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11519:18:28"},{"id":4610,"nodeType":"UncheckedBlock","src":"11547:533:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"11575:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11584:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11575:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11590:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11575:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4553,"nodeType":"IfStatement","src":"11571:98:28","trueBody":{"id":4552,"nodeType":"Block","src":"11593:76:28","statements":[{"expression":{"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"11611:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11621:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11611:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4547,"nodeType":"ExpressionStatement","src":"11611:13:28"},{"expression":{"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"11642:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11652:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11642:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4551,"nodeType":"ExpressionStatement","src":"11642:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"11686:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11695:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11686:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11700:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11686:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"nodeType":"IfStatement","src":"11682:95:28","trueBody":{"id":4567,"nodeType":"Block","src":"11703:74:28","statements":[{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"11721:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11731:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11721:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4562,"nodeType":"ExpressionStatement","src":"11721:12:28"},{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"11751:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11761:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11751:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ExpressionStatement","src":"11751:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"11794:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11803:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11794:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11808:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11794:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4583,"nodeType":"IfStatement","src":"11790:95:28","trueBody":{"id":4582,"nodeType":"Block","src":"11811:74:28","statements":[{"expression":{"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"11829:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11839:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11829:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4577,"nodeType":"ExpressionStatement","src":"11829:12:28"},{"expression":{"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"11859:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11869:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11859:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4581,"nodeType":"ExpressionStatement","src":"11859:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"11902:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11911:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11902:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11916:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11902:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4598,"nodeType":"IfStatement","src":"11898:95:28","trueBody":{"id":4597,"nodeType":"Block","src":"11919:74:28","statements":[{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"11937:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11937:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4592,"nodeType":"ExpressionStatement","src":"11937:12:28"},{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"11967:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11977:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11967:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4596,"nodeType":"ExpressionStatement","src":"11967:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"12010:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12019:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12010:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12010:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4609,"nodeType":"IfStatement","src":"12006:64:28","trueBody":{"id":4608,"nodeType":"Block","src":"12026:44:28","statements":[{"expression":{"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"12044:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12054:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12044:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4607,"nodeType":"ExpressionStatement","src":"12044:11:28"}]}}]},{"expression":{"id":4611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"12096:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4534,"id":4612,"nodeType":"Return","src":"12089:13:28"}]},"documentation":{"id":4528,"nodeType":"StructuredDocumentation","src":"11201:240:28","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4614,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11455:6:28","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4530,"mutability":"mutable","name":"value","nameLocation":"11470:5:28","nodeType":"VariableDeclaration","scope":4614,"src":"11462:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"11462:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11461:15:28"},"returnParameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4614,"src":"11500:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"11500:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11499:9:28"},"scope":4654,"src":"11446:663:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4652,"nodeType":"Block","src":"12345:173:28","statements":[{"id":4651,"nodeType":"UncheckedBlock","src":"12355:157:28","statements":[{"assignments":[4626],"declarations":[{"constant":false,"id":4626,"mutability":"mutable","name":"result","nameLocation":"12387:6:28","nodeType":"VariableDeclaration","scope":4651,"src":"12379:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"12379:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4630,"initialValue":{"arguments":[{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"12403:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4627,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4614,4653],"referencedDeclaration":4614,"src":"12396:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12396:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12379:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"12430:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4632,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"12440:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4633,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"12452:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3796_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"12452:11:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"src":"12440:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"12473:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12482:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12473:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12472:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12467:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"12487:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12467:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12440:52:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12499:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12440:60:28","trueExpression":{"hexValue":"31","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12495:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12439:62:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12430:71:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4624,"id":4650,"nodeType":"Return","src":"12423:78:28"}]}]},"documentation":{"id":4615,"nodeType":"StructuredDocumentation","src":"12115:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4653,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12272:6:28","nodeType":"FunctionDefinition","parameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"value","nameLocation":"12287:5:28","nodeType":"VariableDeclaration","scope":4653,"src":"12279:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4616,"name":"uint256","nodeType":"ElementaryTypeName","src":"12279:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4620,"mutability":"mutable","name":"rounding","nameLocation":"12303:8:28","nodeType":"VariableDeclaration","scope":4653,"src":"12294:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4619,"nodeType":"UserDefinedTypeName","pathNode":{"id":4618,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"12294:8:28"},"referencedDeclaration":3796,"src":"12294:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3796","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12278:34:28"},"returnParameters":{"id":4624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4653,"src":"12336:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4622,"name":"uint256","nodeType":"ElementaryTypeName","src":"12336:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12335:9:28"},"scope":4654,"src":"12263:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4655,"src":"207:12313:28","usedErrors":[]}],"src":"108:12413:28"},"id":28},"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","exportedSymbols":{"SafeMathUpgradeable":[4966]},"id":4967,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4656,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"285:196:29","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":4966,"linearizedBaseContracts":[4966],"name":"SafeMathUpgradeable","nameLocation":"490:19:29","nodeType":"ContractDefinition","nodes":[{"body":{"id":4688,"nodeType":"Block","src":"728:140:29","statements":[{"id":4687,"nodeType":"UncheckedBlock","src":"738:124:29","statements":[{"assignments":[4670],"declarations":[{"constant":false,"id":4670,"mutability":"mutable","name":"c","nameLocation":"770:1:29","nodeType":"VariableDeclaration","scope":4687,"src":"762:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4674,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"774:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4672,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"778:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"774:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"762:17:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"797:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"801:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"797:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4682,"nodeType":"IfStatement","src":"793:28:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"812:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"819:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"811:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4668,"id":4681,"nodeType":"Return","src":"804:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"843:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4684,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"849:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"842:9:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4668,"id":4686,"nodeType":"Return","src":"835:16:29"}]}]},"documentation":{"id":4658,"nodeType":"StructuredDocumentation","src":"516:131:29","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":4689,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"661:6:29","nodeType":"FunctionDefinition","parameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"mutability":"mutable","name":"a","nameLocation":"676:1:29","nodeType":"VariableDeclaration","scope":4689,"src":"668:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4662,"mutability":"mutable","name":"b","nameLocation":"687:1:29","nodeType":"VariableDeclaration","scope":4689,"src":"679:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"679:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"667:22:29"},"returnParameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4689,"src":"713:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4664,"name":"bool","nodeType":"ElementaryTypeName","src":"713:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4689,"src":"719:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"719:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"712:15:29"},"scope":4966,"src":"652:216:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4716,"nodeType":"Block","src":"1089:113:29","statements":[{"id":4715,"nodeType":"UncheckedBlock","src":"1099:97:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"1127:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"1131:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1127:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4708,"nodeType":"IfStatement","src":"1123:28:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1142:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1149:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1141:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4700,"id":4707,"nodeType":"Return","src":"1134:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1173:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"1179:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4711,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"1183:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1179:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1172:13:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4700,"id":4714,"nodeType":"Return","src":"1165:20:29"}]}]},"documentation":{"id":4690,"nodeType":"StructuredDocumentation","src":"874:134:29","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":4717,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1022:6:29","nodeType":"FunctionDefinition","parameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"a","nameLocation":"1037:1:29","nodeType":"VariableDeclaration","scope":4717,"src":"1029:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4694,"mutability":"mutable","name":"b","nameLocation":"1048:1:29","nodeType":"VariableDeclaration","scope":4717,"src":"1040:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1028:22:29"},"returnParameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4717,"src":"1074:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4696,"name":"bool","nodeType":"ElementaryTypeName","src":"1074:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4717,"src":"1080:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1073:15:29"},"scope":4966,"src":"1013:189:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4758,"nodeType":"Block","src":"1426:417:29","statements":[{"id":4757,"nodeType":"UncheckedBlock","src":"1436:401:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"1694:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1699:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1694:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4736,"nodeType":"IfStatement","src":"1690:28:29","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1710:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1709:9:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4728,"id":4735,"nodeType":"Return","src":"1702:16:29"}},{"assignments":[4738],"declarations":[{"constant":false,"id":4738,"mutability":"mutable","name":"c","nameLocation":"1740:1:29","nodeType":"VariableDeclaration","scope":4757,"src":"1732:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4742,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"1744:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"1748:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1744:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1732:17:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4743,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"1767:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"1771:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1767:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4746,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"1776:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1767:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4752,"nodeType":"IfStatement","src":"1763:33:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1787:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1794:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1786:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4728,"id":4751,"nodeType":"Return","src":"1779:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1818:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4754,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"1824:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1817:9:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4728,"id":4756,"nodeType":"Return","src":"1810:16:29"}]}]},"documentation":{"id":4718,"nodeType":"StructuredDocumentation","src":"1208:137:29","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1359:6:29","nodeType":"FunctionDefinition","parameters":{"id":4723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"a","nameLocation":"1374:1:29","nodeType":"VariableDeclaration","scope":4759,"src":"1366:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4722,"mutability":"mutable","name":"b","nameLocation":"1385:1:29","nodeType":"VariableDeclaration","scope":4759,"src":"1377:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1365:22:29"},"returnParameters":{"id":4728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4759,"src":"1411:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4724,"name":"bool","nodeType":"ElementaryTypeName","src":"1411:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4759,"src":"1417:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1410:15:29"},"scope":4966,"src":"1350:493:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4786,"nodeType":"Block","src":"2068:114:29","statements":[{"id":4785,"nodeType":"UncheckedBlock","src":"2078:98:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"2106:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2111:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2106:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4778,"nodeType":"IfStatement","src":"2102:29:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2122:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2129:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2121:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4770,"id":4777,"nodeType":"Return","src":"2114:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2153:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4780,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"2159:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4781,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"2163:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2159:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2152:13:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4770,"id":4784,"nodeType":"Return","src":"2145:20:29"}]}]},"documentation":{"id":4760,"nodeType":"StructuredDocumentation","src":"1849:138:29","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":4787,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"2001:6:29","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"a","nameLocation":"2016:1:29","nodeType":"VariableDeclaration","scope":4787,"src":"2008:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4764,"mutability":"mutable","name":"b","nameLocation":"2027:1:29","nodeType":"VariableDeclaration","scope":4787,"src":"2019:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4763,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:22:29"},"returnParameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"2053:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4766,"name":"bool","nodeType":"ElementaryTypeName","src":"2053:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"2059:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2052:15:29"},"scope":4966,"src":"1992:190:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4814,"nodeType":"Block","src":"2417:114:29","statements":[{"id":4813,"nodeType":"UncheckedBlock","src":"2427:98:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"2455:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2460:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2455:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4806,"nodeType":"IfStatement","src":"2451:29:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2471:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2478:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2470:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4798,"id":4805,"nodeType":"Return","src":"2463:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2502:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"2508:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4809,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"2512:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2508:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2501:13:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4798,"id":4812,"nodeType":"Return","src":"2494:20:29"}]}]},"documentation":{"id":4788,"nodeType":"StructuredDocumentation","src":"2188:148:29","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":4815,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2350:6:29","nodeType":"FunctionDefinition","parameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"a","nameLocation":"2365:1:29","nodeType":"VariableDeclaration","scope":4815,"src":"2357:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4792,"mutability":"mutable","name":"b","nameLocation":"2376:1:29","nodeType":"VariableDeclaration","scope":4815,"src":"2368:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2356:22:29"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4815,"src":"2402:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4794,"name":"bool","nodeType":"ElementaryTypeName","src":"2402:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4815,"src":"2408:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2401:15:29"},"scope":4966,"src":"2341:190:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4829,"nodeType":"Block","src":"2833:29:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"2850:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"2854:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2850:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4824,"id":4828,"nodeType":"Return","src":"2843:12:29"}]},"documentation":{"id":4816,"nodeType":"StructuredDocumentation","src":"2537:224:29","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2775:3:29","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"a","nameLocation":"2787:1:29","nodeType":"VariableDeclaration","scope":4830,"src":"2779:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4820,"mutability":"mutable","name":"b","nameLocation":"2798:1:29","nodeType":"VariableDeclaration","scope":4830,"src":"2790:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2790:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2778:22:29"},"returnParameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4830,"src":"2824:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2823:9:29"},"scope":4966,"src":"2766:96:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4844,"nodeType":"Block","src":"3200:29:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"3217:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4841,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"3221:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3217:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4839,"id":4843,"nodeType":"Return","src":"3210:12:29"}]},"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"2868:260:29","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":4845,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3142:3:29","nodeType":"FunctionDefinition","parameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"a","nameLocation":"3154:1:29","nodeType":"VariableDeclaration","scope":4845,"src":"3146:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4835,"mutability":"mutable","name":"b","nameLocation":"3165:1:29","nodeType":"VariableDeclaration","scope":4845,"src":"3157:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"3157:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3145:22:29"},"returnParameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4845,"src":"3191:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3190:9:29"},"scope":4966,"src":"3133:96:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4859,"nodeType":"Block","src":"3543:29:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4855,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"3560:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4856,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"3564:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3560:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4854,"id":4858,"nodeType":"Return","src":"3553:12:29"}]},"documentation":{"id":4846,"nodeType":"StructuredDocumentation","src":"3235:236:29","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":4860,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3485:3:29","nodeType":"FunctionDefinition","parameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4848,"mutability":"mutable","name":"a","nameLocation":"3497:1:29","nodeType":"VariableDeclaration","scope":4860,"src":"3489:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4850,"mutability":"mutable","name":"b","nameLocation":"3508:1:29","nodeType":"VariableDeclaration","scope":4860,"src":"3500:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4849,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3488:22:29"},"returnParameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4860,"src":"3534:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4852,"name":"uint256","nodeType":"ElementaryTypeName","src":"3534:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3533:9:29"},"scope":4966,"src":"3476:96:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4874,"nodeType":"Block","src":"3928:29:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"3945:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4871,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"3949:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3945:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4869,"id":4873,"nodeType":"Return","src":"3938:12:29"}]},"documentation":{"id":4861,"nodeType":"StructuredDocumentation","src":"3578:278:29","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":4875,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3870:3:29","nodeType":"FunctionDefinition","parameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"a","nameLocation":"3882:1:29","nodeType":"VariableDeclaration","scope":4875,"src":"3874:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4865,"mutability":"mutable","name":"b","nameLocation":"3893:1:29","nodeType":"VariableDeclaration","scope":4875,"src":"3885:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:22:29"},"returnParameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4875,"src":"3919:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3919:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:9:29"},"scope":4966,"src":"3861:96:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4889,"nodeType":"Block","src":"4477:29:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"4494:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4886,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"4498:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4494:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4884,"id":4888,"nodeType":"Return","src":"4487:12:29"}]},"documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"3963:442:29","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4419:3:29","nodeType":"FunctionDefinition","parameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"a","nameLocation":"4431:1:29","nodeType":"VariableDeclaration","scope":4890,"src":"4423:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4880,"mutability":"mutable","name":"b","nameLocation":"4442:1:29","nodeType":"VariableDeclaration","scope":4890,"src":"4434:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"4434:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4422:22:29"},"returnParameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4890,"src":"4468:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"4468:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4467:9:29"},"scope":4966,"src":"4410:96:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4914,"nodeType":"Block","src":"5095:106:29","statements":[{"id":4913,"nodeType":"UncheckedBlock","src":"5105:90:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"5137:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"5142:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5137:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4906,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"5145:12:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5129:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5129:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4908,"nodeType":"ExpressionStatement","src":"5129:29:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"5179:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4910,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"5183:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5179:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4901,"id":4912,"nodeType":"Return","src":"5172:12:29"}]}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"4512:453:29","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":4915,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4979:3:29","nodeType":"FunctionDefinition","parameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"a","nameLocation":"5000:1:29","nodeType":"VariableDeclaration","scope":4915,"src":"4992:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"4992:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4895,"mutability":"mutable","name":"b","nameLocation":"5019:1:29","nodeType":"VariableDeclaration","scope":4915,"src":"5011:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4897,"mutability":"mutable","name":"errorMessage","nameLocation":"5044:12:29","nodeType":"VariableDeclaration","scope":4915,"src":"5030:26:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4896,"name":"string","nodeType":"ElementaryTypeName","src":"5030:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4982:80:29"},"returnParameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4915,"src":"5086:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"5086:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5085:9:29"},"scope":4966,"src":"4970:231:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4939,"nodeType":"Block","src":"5810:105:29","statements":[{"id":4938,"nodeType":"UncheckedBlock","src":"5820:89:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4928,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"5852:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5856:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5852:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4931,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"5859:12:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4927,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5844:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5844:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4933,"nodeType":"ExpressionStatement","src":"5844:28:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"5893:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4935,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"5897:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5893:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4926,"id":4937,"nodeType":"Return","src":"5886:12:29"}]}]},"documentation":{"id":4916,"nodeType":"StructuredDocumentation","src":"5207:473:29","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4940,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5694:3:29","nodeType":"FunctionDefinition","parameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"a","nameLocation":"5715:1:29","nodeType":"VariableDeclaration","scope":4940,"src":"5707:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4917,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4920,"mutability":"mutable","name":"b","nameLocation":"5734:1:29","nodeType":"VariableDeclaration","scope":4940,"src":"5726:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"5726:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4922,"mutability":"mutable","name":"errorMessage","nameLocation":"5759:12:29","nodeType":"VariableDeclaration","scope":4940,"src":"5745:26:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4921,"name":"string","nodeType":"ElementaryTypeName","src":"5745:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5697:80:29"},"returnParameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4940,"src":"5801:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"5801:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5800:9:29"},"scope":4966,"src":"5685:230:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4964,"nodeType":"Block","src":"6686:105:29","statements":[{"id":4963,"nodeType":"UncheckedBlock","src":"6696:89:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4953,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"6728:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6732:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6728:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4956,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"6735:12:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6720:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6720:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4958,"nodeType":"ExpressionStatement","src":"6720:28:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"6769:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"6773:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6769:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4951,"id":4962,"nodeType":"Return","src":"6762:12:29"}]}]},"documentation":{"id":4941,"nodeType":"StructuredDocumentation","src":"5921:635:29","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4965,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6570:3:29","nodeType":"FunctionDefinition","parameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"a","nameLocation":"6591:1:29","nodeType":"VariableDeclaration","scope":4965,"src":"6583:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"6583:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4945,"mutability":"mutable","name":"b","nameLocation":"6610:1:29","nodeType":"VariableDeclaration","scope":4965,"src":"6602:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"6602:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4947,"mutability":"mutable","name":"errorMessage","nameLocation":"6635:12:29","nodeType":"VariableDeclaration","scope":4965,"src":"6621:26:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4946,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6573:80:29"},"returnParameters":{"id":4951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4965,"src":"6677:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4949,"name":"uint256","nodeType":"ElementaryTypeName","src":"6677:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6676:9:29"},"scope":4966,"src":"6561:230:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4967,"src":"482:6311:29","usedErrors":[]}],"src":"107:6687:29"},"id":29},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[5579]},"id":5580,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4968,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"210:23:30"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":4969,"nodeType":"StructuredDocumentation","src":"235:1090:30","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":5579,"linearizedBaseContracts":[5579],"name":"EnumerableSetUpgradeable","nameLocation":"1334:24:30","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":4977,"members":[{"constant":false,"id":4972,"mutability":"mutable","name":"_values","nameLocation":"1869:7:30","nodeType":"VariableDeclaration","scope":4977,"src":"1859:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1859:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4971,"nodeType":"ArrayTypeName","src":"1859:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4976,"mutability":"mutable","name":"_indexes","nameLocation":"2037:8:30","nodeType":"VariableDeclaration","scope":4977,"src":"2009:36:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":4975,"keyType":{"id":4973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2009:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":4974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2028:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1812:3:30","nodeType":"StructDefinition","scope":5579,"src":"1805:247:30","visibility":"public"},{"body":{"id":5018,"nodeType":"Block","src":"2291:335:30","statements":[{"condition":{"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2305:22:30","subExpression":{"arguments":[{"id":4989,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"2316:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":4990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"2321:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4988,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"2306:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2306:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5016,"nodeType":"Block","src":"2583:37:30","statements":[{"expression":{"hexValue":"66616c7365","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2604:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4987,"id":5015,"nodeType":"Return","src":"2597:12:30"}]},"id":5017,"nodeType":"IfStatement","src":"2301:319:30","trueBody":{"id":5013,"nodeType":"Block","src":"2329:248:30","statements":[{"expression":{"arguments":[{"id":4998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"2360:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":4993,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"2343:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":4996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"2343:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2343:16:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2343:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5000,"nodeType":"ExpressionStatement","src":"2343:23:30"},{"expression":{"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5001,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"2501:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"2501:12:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5005,"indexExpression":{"id":5003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"2514:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2501:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":5006,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"2523:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"2523:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2523:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:40:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5010,"nodeType":"ExpressionStatement","src":"2501:40:30"},{"expression":{"hexValue":"74727565","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2562:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4987,"id":5012,"nodeType":"Return","src":"2555:11:30"}]}}]},"documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"2058:159:30","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5019,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2231:4:30","nodeType":"FunctionDefinition","parameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"set","nameLocation":"2248:3:30","nodeType":"VariableDeclaration","scope":5019,"src":"2236:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":4980,"nodeType":"UserDefinedTypeName","pathNode":{"id":4979,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4977,"src":"2236:3:30"},"referencedDeclaration":4977,"src":"2236:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":4983,"mutability":"mutable","name":"value","nameLocation":"2261:5:30","nodeType":"VariableDeclaration","scope":5019,"src":"2253:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2253:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2235:32:30"},"returnParameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5019,"src":"2285:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4985,"name":"bool","nodeType":"ElementaryTypeName","src":"2285:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2284:6:30"},"scope":5579,"src":"2222:404:30","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5102,"nodeType":"Block","src":"2866:1316:30","statements":[{"assignments":[5031],"declarations":[{"constant":false,"id":5031,"mutability":"mutable","name":"valueIndex","nameLocation":"2984:10:30","nodeType":"VariableDeclaration","scope":5102,"src":"2976:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"2976:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5036,"initialValue":{"baseExpression":{"expression":{"id":5032,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"2997:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"2997:12:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5035,"indexExpression":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"3010:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2997:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2976:40:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5037,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"3031:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3045:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3031:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5100,"nodeType":"Block","src":"4139:37:30","statements":[{"expression":{"hexValue":"66616c7365","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4160:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5029,"id":5099,"nodeType":"Return","src":"4153:12:30"}]},"id":5101,"nodeType":"IfStatement","src":"3027:1149:30","trueBody":{"id":5097,"nodeType":"Block","src":"3048:1085:30","statements":[{"assignments":[5041],"declarations":[{"constant":false,"id":5041,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3408:13:30","nodeType":"VariableDeclaration","scope":5097,"src":"3400:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5040,"name":"uint256","nodeType":"ElementaryTypeName","src":"3400:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5045,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5042,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"3424:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3437:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3424:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3400:38:30"},{"assignments":[5047],"declarations":[{"constant":false,"id":5047,"mutability":"mutable","name":"lastIndex","nameLocation":"3460:9:30","nodeType":"VariableDeclaration","scope":5097,"src":"3452:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5046,"name":"uint256","nodeType":"ElementaryTypeName","src":"3452:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5053,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5048,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"3472:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"3472:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3472:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3493:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3472:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3452:42:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5054,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"3513:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5055,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"3526:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3513:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5081,"nodeType":"IfStatement","src":"3509:398:30","trueBody":{"id":5080,"nodeType":"Block","src":"3541:366:30","statements":[{"assignments":[5058],"declarations":[{"constant":false,"id":5058,"mutability":"mutable","name":"lastValue","nameLocation":"3567:9:30","nodeType":"VariableDeclaration","scope":5080,"src":"3559:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3559:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5063,"initialValue":{"baseExpression":{"expression":{"id":5059,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"3579:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"3579:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5062,"indexExpression":{"id":5061,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"3591:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3579:22:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3559:42:30"},{"expression":{"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5064,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"3701:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"3701:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5068,"indexExpression":{"id":5066,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"3713:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3701:26:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5069,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"3730:9:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3701:38:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5071,"nodeType":"ExpressionStatement","src":"3701:38:30"},{"expression":{"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5072,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"3813:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"3813:12:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5076,"indexExpression":{"id":5074,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"3826:9:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3813:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5077,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"3839:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3813:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5079,"nodeType":"ExpressionStatement","src":"3813:36:30"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5082,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"3985:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"3985:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3985:15:30","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3985:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5088,"nodeType":"ExpressionStatement","src":"3985:17:30"},{"expression":{"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4070:26:30","subExpression":{"baseExpression":{"expression":{"id":5089,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"4077:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"4077:12:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5092,"indexExpression":{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"4090:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4077:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5094,"nodeType":"ExpressionStatement","src":"4070:26:30"},{"expression":{"hexValue":"74727565","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4118:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5029,"id":5096,"nodeType":"Return","src":"4111:11:30"}]}}]},"documentation":{"id":5020,"nodeType":"StructuredDocumentation","src":"2632:157:30","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5103,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2803:7:30","nodeType":"FunctionDefinition","parameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"set","nameLocation":"2823:3:30","nodeType":"VariableDeclaration","scope":5103,"src":"2811:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5022,"nodeType":"UserDefinedTypeName","pathNode":{"id":5021,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4977,"src":"2811:3:30"},"referencedDeclaration":4977,"src":"2811:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5025,"mutability":"mutable","name":"value","nameLocation":"2836:5:30","nodeType":"VariableDeclaration","scope":5103,"src":"2828:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2828:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2810:32:30"},"returnParameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5103,"src":"2860:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5027,"name":"bool","nodeType":"ElementaryTypeName","src":"2860:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2859:6:30"},"scope":5579,"src":"2794:1388:30","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5121,"nodeType":"Block","src":"4342:48:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":5114,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"4359:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"4359:12:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5117,"indexExpression":{"id":5116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5109,"src":"4372:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4359:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4382:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4359:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5113,"id":5120,"nodeType":"Return","src":"4352:31:30"}]},"documentation":{"id":5104,"nodeType":"StructuredDocumentation","src":"4188:70:30","text":" @dev Returns true if the value is in the set. O(1)."},"id":5122,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4272:9:30","nodeType":"FunctionDefinition","parameters":{"id":5110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"set","nameLocation":"4294:3:30","nodeType":"VariableDeclaration","scope":5122,"src":"4282:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5106,"nodeType":"UserDefinedTypeName","pathNode":{"id":5105,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4977,"src":"4282:3:30"},"referencedDeclaration":4977,"src":"4282:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5109,"mutability":"mutable","name":"value","nameLocation":"4307:5:30","nodeType":"VariableDeclaration","scope":5122,"src":"4299:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4299:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4281:32:30"},"returnParameters":{"id":5113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5122,"src":"4336:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5111,"name":"bool","nodeType":"ElementaryTypeName","src":"4336:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4335:6:30"},"scope":5579,"src":"4263:127:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5135,"nodeType":"Block","src":"4536:42:30","statements":[{"expression":{"expression":{"expression":{"id":5131,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"4553:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"4553:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4553:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5130,"id":5134,"nodeType":"Return","src":"4546:25:30"}]},"documentation":{"id":5123,"nodeType":"StructuredDocumentation","src":"4396:70:30","text":" @dev Returns the number of values on the set. O(1)."},"id":5136,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4480:7:30","nodeType":"FunctionDefinition","parameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"set","nameLocation":"4500:3:30","nodeType":"VariableDeclaration","scope":5136,"src":"4488:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5125,"nodeType":"UserDefinedTypeName","pathNode":{"id":5124,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4977,"src":"4488:3:30"},"referencedDeclaration":4977,"src":"4488:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4487:17:30"},"returnParameters":{"id":5130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5136,"src":"4527:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"4527:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4526:9:30"},"scope":5579,"src":"4471:107:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5152,"nodeType":"Block","src":"4996:42:30","statements":[{"expression":{"baseExpression":{"expression":{"id":5147,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"5013:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"5013:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5150,"indexExpression":{"id":5149,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"5025:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5013:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5146,"id":5151,"nodeType":"Return","src":"5006:25:30"}]},"documentation":{"id":5137,"nodeType":"StructuredDocumentation","src":"4584:331:30","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5153,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4929:3:30","nodeType":"FunctionDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5140,"mutability":"mutable","name":"set","nameLocation":"4945:3:30","nodeType":"VariableDeclaration","scope":5153,"src":"4933:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5139,"nodeType":"UserDefinedTypeName","pathNode":{"id":5138,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4977,"src":"4933:3:30"},"referencedDeclaration":4977,"src":"4933:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5142,"mutability":"mutable","name":"index","nameLocation":"4958:5:30","nodeType":"VariableDeclaration","scope":5153,"src":"4950:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5141,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4932:32:30"},"returnParameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5153,"src":"4987:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4987:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4986:9:30"},"scope":5579,"src":"4920:118:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5166,"nodeType":"Block","src":"5652:35:30","statements":[{"expression":{"expression":{"id":5163,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"5669:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4972,"src":"5669:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":5162,"id":5165,"nodeType":"Return","src":"5662:18:30"}]},"documentation":{"id":5154,"nodeType":"StructuredDocumentation","src":"5044:529:30","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5167,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5587:7:30","nodeType":"FunctionDefinition","parameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"set","nameLocation":"5607:3:30","nodeType":"VariableDeclaration","scope":5167,"src":"5595:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5156,"nodeType":"UserDefinedTypeName","pathNode":{"id":5155,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4977,"src":"5595:3:30"},"referencedDeclaration":4977,"src":"5595:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5594:17:30"},"returnParameters":{"id":5162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5167,"src":"5634:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5634:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5160,"nodeType":"ArrayTypeName","src":"5634:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5633:18:30"},"scope":5579,"src":"5578:109:30","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":5171,"members":[{"constant":false,"id":5170,"mutability":"mutable","name":"_inner","nameLocation":"5744:6:30","nodeType":"VariableDeclaration","scope":5171,"src":"5740:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5169,"nodeType":"UserDefinedTypeName","pathNode":{"id":5168,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4977,"src":"5740:3:30"},"referencedDeclaration":4977,"src":"5740:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5719:10:30","nodeType":"StructDefinition","scope":5579,"src":"5712:45:30","visibility":"public"},{"body":{"id":5188,"nodeType":"Block","src":"6003:47:30","statements":[{"expression":{"arguments":[{"expression":{"id":5183,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"6025:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5170,"src":"6025:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"6037:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5182,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"6020:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6020:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5181,"id":5187,"nodeType":"Return","src":"6013:30:30"}]},"documentation":{"id":5172,"nodeType":"StructuredDocumentation","src":"5763:159:30","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5189,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5936:3:30","nodeType":"FunctionDefinition","parameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"set","nameLocation":"5959:3:30","nodeType":"VariableDeclaration","scope":5189,"src":"5940:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5174,"nodeType":"UserDefinedTypeName","pathNode":{"id":5173,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"5940:10:30"},"referencedDeclaration":5171,"src":"5940:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5177,"mutability":"mutable","name":"value","nameLocation":"5972:5:30","nodeType":"VariableDeclaration","scope":5189,"src":"5964:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5964:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5939:39:30"},"returnParameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5189,"src":"5997:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5179,"name":"bool","nodeType":"ElementaryTypeName","src":"5997:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5996:6:30"},"scope":5579,"src":"5927:123:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5206,"nodeType":"Block","src":"6297:50:30","statements":[{"expression":{"arguments":[{"expression":{"id":5201,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"6322:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5170,"src":"6322:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"6334:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5200,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"6314:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6314:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5199,"id":5205,"nodeType":"Return","src":"6307:33:30"}]},"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"6056:157:30","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5207,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6227:6:30","nodeType":"FunctionDefinition","parameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5193,"mutability":"mutable","name":"set","nameLocation":"6253:3:30","nodeType":"VariableDeclaration","scope":5207,"src":"6234:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5192,"nodeType":"UserDefinedTypeName","pathNode":{"id":5191,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"6234:10:30"},"referencedDeclaration":5171,"src":"6234:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5195,"mutability":"mutable","name":"value","nameLocation":"6266:5:30","nodeType":"VariableDeclaration","scope":5207,"src":"6258:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6258:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6233:39:30"},"returnParameters":{"id":5199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5207,"src":"6291:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5197,"name":"bool","nodeType":"ElementaryTypeName","src":"6291:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6290:6:30"},"scope":5579,"src":"6218:129:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5224,"nodeType":"Block","src":"6514:52:30","statements":[{"expression":{"arguments":[{"expression":{"id":5219,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"6541:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5170,"src":"6541:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"6553:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5218,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"6531:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6531:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5217,"id":5223,"nodeType":"Return","src":"6524:35:30"}]},"documentation":{"id":5208,"nodeType":"StructuredDocumentation","src":"6353:70:30","text":" @dev Returns true if the value is in the set. O(1)."},"id":5225,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6437:8:30","nodeType":"FunctionDefinition","parameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"set","nameLocation":"6465:3:30","nodeType":"VariableDeclaration","scope":5225,"src":"6446:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5210,"nodeType":"UserDefinedTypeName","pathNode":{"id":5209,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"6446:10:30"},"referencedDeclaration":5171,"src":"6446:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5213,"mutability":"mutable","name":"value","nameLocation":"6478:5:30","nodeType":"VariableDeclaration","scope":5225,"src":"6470:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6470:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6445:39:30"},"returnParameters":{"id":5217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5225,"src":"6508:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5215,"name":"bool","nodeType":"ElementaryTypeName","src":"6508:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6507:6:30"},"scope":5579,"src":"6428:138:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5239,"nodeType":"Block","src":"6719:43:30","statements":[{"expression":{"arguments":[{"expression":{"id":5235,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"6744:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5170,"src":"6744:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5234,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"6736:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6736:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5233,"id":5238,"nodeType":"Return","src":"6729:26:30"}]},"documentation":{"id":5226,"nodeType":"StructuredDocumentation","src":"6572:70:30","text":" @dev Returns the number of values in the set. O(1)."},"id":5240,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6656:6:30","nodeType":"FunctionDefinition","parameters":{"id":5230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"set","nameLocation":"6682:3:30","nodeType":"VariableDeclaration","scope":5240,"src":"6663:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5228,"nodeType":"UserDefinedTypeName","pathNode":{"id":5227,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"6663:10:30"},"referencedDeclaration":5171,"src":"6663:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6662:24:30"},"returnParameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5240,"src":"6710:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"6710:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6709:9:30"},"scope":5579,"src":"6647:115:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5257,"nodeType":"Block","src":"7187:46:30","statements":[{"expression":{"arguments":[{"expression":{"id":5252,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"7208:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5170,"src":"7208:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5254,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"7220:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5251,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"7204:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7204:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5250,"id":5256,"nodeType":"Return","src":"7197:29:30"}]},"documentation":{"id":5241,"nodeType":"StructuredDocumentation","src":"6768:331:30","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5258,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7113:2:30","nodeType":"FunctionDefinition","parameters":{"id":5247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"set","nameLocation":"7135:3:30","nodeType":"VariableDeclaration","scope":5258,"src":"7116:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5243,"nodeType":"UserDefinedTypeName","pathNode":{"id":5242,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"7116:10:30"},"referencedDeclaration":5171,"src":"7116:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5246,"mutability":"mutable","name":"index","nameLocation":"7148:5:30","nodeType":"VariableDeclaration","scope":5258,"src":"7140:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5245,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7115:39:30"},"returnParameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5258,"src":"7178:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7178:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7177:9:30"},"scope":5579,"src":"7104:129:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5287,"nodeType":"Block","src":"7854:219:30","statements":[{"assignments":[5272],"declarations":[{"constant":false,"id":5272,"mutability":"mutable","name":"store","nameLocation":"7881:5:30","nodeType":"VariableDeclaration","scope":5287,"src":"7864:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7864:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5271,"nodeType":"ArrayTypeName","src":"7864:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5277,"initialValue":{"arguments":[{"expression":{"id":5274,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"7897:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5170,"src":"7897:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5273,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"7889:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7889:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7864:44:30"},{"assignments":[5282],"declarations":[{"constant":false,"id":5282,"mutability":"mutable","name":"result","nameLocation":"7935:6:30","nodeType":"VariableDeclaration","scope":5287,"src":"7918:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7918:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5281,"nodeType":"ArrayTypeName","src":"7918:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5283,"nodeType":"VariableDeclarationStatement","src":"7918:23:30"},{"AST":{"nodeType":"YulBlock","src":"8004:39:30","statements":[{"nodeType":"YulAssignment","src":"8018:15:30","value":{"name":"store","nodeType":"YulIdentifier","src":"8028:5:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8018:6:30"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5282,"isOffset":false,"isSlot":false,"src":"8018:6:30","valueSize":1},{"declaration":5272,"isOffset":false,"isSlot":false,"src":"8028:5:30","valueSize":1}],"id":5284,"nodeType":"InlineAssembly","src":"7995:48:30"},{"expression":{"id":5285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"8060:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":5267,"id":5286,"nodeType":"Return","src":"8053:13:30"}]},"documentation":{"id":5259,"nodeType":"StructuredDocumentation","src":"7239:529:30","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5288,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7782:6:30","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"set","nameLocation":"7808:3:30","nodeType":"VariableDeclaration","scope":5288,"src":"7789:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5261,"nodeType":"UserDefinedTypeName","pathNode":{"id":5260,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":5171,"src":"7789:10:30"},"referencedDeclaration":5171,"src":"7789:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5171_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7788:24:30"},"returnParameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5288,"src":"7836:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7836:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5265,"nodeType":"ArrayTypeName","src":"7836:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7835:18:30"},"scope":5579,"src":"7773:300:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":5292,"members":[{"constant":false,"id":5291,"mutability":"mutable","name":"_inner","nameLocation":"8130:6:30","nodeType":"VariableDeclaration","scope":5292,"src":"8126:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5290,"nodeType":"UserDefinedTypeName","pathNode":{"id":5289,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4977,"src":"8126:3:30"},"referencedDeclaration":4977,"src":"8126:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8105:10:30","nodeType":"StructDefinition","scope":5579,"src":"8098:45:30","visibility":"public"},{"body":{"id":5318,"nodeType":"Block","src":"8389:74:30","statements":[{"expression":{"arguments":[{"expression":{"id":5304,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"8411:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5291,"src":"8411:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"8447:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8439:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5310,"name":"uint160","nodeType":"ElementaryTypeName","src":"8439:7:30","typeDescriptions":{}}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8439:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5308,"name":"uint256","nodeType":"ElementaryTypeName","src":"8431:7:30","typeDescriptions":{}}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8431:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8423:7:30","typeDescriptions":{}}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5303,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"8406:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8406:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5302,"id":5317,"nodeType":"Return","src":"8399:57:30"}]},"documentation":{"id":5293,"nodeType":"StructuredDocumentation","src":"8149:159:30","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5319,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8322:3:30","nodeType":"FunctionDefinition","parameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"set","nameLocation":"8345:3:30","nodeType":"VariableDeclaration","scope":5319,"src":"8326:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5295,"nodeType":"UserDefinedTypeName","pathNode":{"id":5294,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5292,"src":"8326:10:30"},"referencedDeclaration":5292,"src":"8326:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5298,"mutability":"mutable","name":"value","nameLocation":"8358:5:30","nodeType":"VariableDeclaration","scope":5319,"src":"8350:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5297,"name":"address","nodeType":"ElementaryTypeName","src":"8350:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8325:39:30"},"returnParameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5319,"src":"8383:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5300,"name":"bool","nodeType":"ElementaryTypeName","src":"8383:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8382:6:30"},"scope":5579,"src":"8313:150:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5345,"nodeType":"Block","src":"8710:77:30","statements":[{"expression":{"arguments":[{"expression":{"id":5331,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"8735:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5291,"src":"8735:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"8771:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8763:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5337,"name":"uint160","nodeType":"ElementaryTypeName","src":"8763:7:30","typeDescriptions":{}}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8763:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5335,"name":"uint256","nodeType":"ElementaryTypeName","src":"8755:7:30","typeDescriptions":{}}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8755:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8747:7:30","typeDescriptions":{}}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5330,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"8727:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8727:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5329,"id":5344,"nodeType":"Return","src":"8720:60:30"}]},"documentation":{"id":5320,"nodeType":"StructuredDocumentation","src":"8469:157:30","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5346,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8640:6:30","nodeType":"FunctionDefinition","parameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"set","nameLocation":"8666:3:30","nodeType":"VariableDeclaration","scope":5346,"src":"8647:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5322,"nodeType":"UserDefinedTypeName","pathNode":{"id":5321,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5292,"src":"8647:10:30"},"referencedDeclaration":5292,"src":"8647:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5325,"mutability":"mutable","name":"value","nameLocation":"8679:5:30","nodeType":"VariableDeclaration","scope":5346,"src":"8671:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5324,"name":"address","nodeType":"ElementaryTypeName","src":"8671:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8646:39:30"},"returnParameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"8704:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5327,"name":"bool","nodeType":"ElementaryTypeName","src":"8704:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8703:6:30"},"scope":5579,"src":"8631:156:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5372,"nodeType":"Block","src":"8954:79:30","statements":[{"expression":{"arguments":[{"expression":{"id":5358,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"8981:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5291,"src":"8981:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"9017:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9009:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5364,"name":"uint160","nodeType":"ElementaryTypeName","src":"9009:7:30","typeDescriptions":{}}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9009:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"9001:7:30","typeDescriptions":{}}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9001:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8993:7:30","typeDescriptions":{}}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5357,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"8971:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8971:55:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5356,"id":5371,"nodeType":"Return","src":"8964:62:30"}]},"documentation":{"id":5347,"nodeType":"StructuredDocumentation","src":"8793:70:30","text":" @dev Returns true if the value is in the set. O(1)."},"id":5373,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8877:8:30","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"set","nameLocation":"8905:3:30","nodeType":"VariableDeclaration","scope":5373,"src":"8886:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5349,"nodeType":"UserDefinedTypeName","pathNode":{"id":5348,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5292,"src":"8886:10:30"},"referencedDeclaration":5292,"src":"8886:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5352,"mutability":"mutable","name":"value","nameLocation":"8918:5:30","nodeType":"VariableDeclaration","scope":5373,"src":"8910:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5351,"name":"address","nodeType":"ElementaryTypeName","src":"8910:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8885:39:30"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5373,"src":"8948:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5354,"name":"bool","nodeType":"ElementaryTypeName","src":"8948:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8947:6:30"},"scope":5579,"src":"8868:165:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5387,"nodeType":"Block","src":"9186:43:30","statements":[{"expression":{"arguments":[{"expression":{"id":5383,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"9211:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5291,"src":"9211:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5382,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"9203:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9203:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5381,"id":5386,"nodeType":"Return","src":"9196:26:30"}]},"documentation":{"id":5374,"nodeType":"StructuredDocumentation","src":"9039:70:30","text":" @dev Returns the number of values in the set. O(1)."},"id":5388,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9123:6:30","nodeType":"FunctionDefinition","parameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"set","nameLocation":"9149:3:30","nodeType":"VariableDeclaration","scope":5388,"src":"9130:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5376,"nodeType":"UserDefinedTypeName","pathNode":{"id":5375,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5292,"src":"9130:10:30"},"referencedDeclaration":5292,"src":"9130:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9129:24:30"},"returnParameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5388,"src":"9177:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"9177:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9176:9:30"},"scope":5579,"src":"9114:115:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5414,"nodeType":"Block","src":"9654:73:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":5406,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"9699:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5291,"src":"9699:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5408,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"9711:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5405,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"9695:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9695:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9687:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"9687:7:30","typeDescriptions":{}}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9687:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5401,"name":"uint160","nodeType":"ElementaryTypeName","src":"9679:7:30","typeDescriptions":{}}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5399,"name":"address","nodeType":"ElementaryTypeName","src":"9671:7:30","typeDescriptions":{}}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:49:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5398,"id":5413,"nodeType":"Return","src":"9664:56:30"}]},"documentation":{"id":5389,"nodeType":"StructuredDocumentation","src":"9235:331:30","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5415,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9580:2:30","nodeType":"FunctionDefinition","parameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"set","nameLocation":"9602:3:30","nodeType":"VariableDeclaration","scope":5415,"src":"9583:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5391,"nodeType":"UserDefinedTypeName","pathNode":{"id":5390,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5292,"src":"9583:10:30"},"referencedDeclaration":5292,"src":"9583:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5394,"mutability":"mutable","name":"index","nameLocation":"9615:5:30","nodeType":"VariableDeclaration","scope":5415,"src":"9607:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9582:39:30"},"returnParameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5415,"src":"9645:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5396,"name":"address","nodeType":"ElementaryTypeName","src":"9645:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9644:9:30"},"scope":5579,"src":"9571:156:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5444,"nodeType":"Block","src":"10348:219:30","statements":[{"assignments":[5429],"declarations":[{"constant":false,"id":5429,"mutability":"mutable","name":"store","nameLocation":"10375:5:30","nodeType":"VariableDeclaration","scope":5444,"src":"10358:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10358:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5428,"nodeType":"ArrayTypeName","src":"10358:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5434,"initialValue":{"arguments":[{"expression":{"id":5431,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"10391:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5291,"src":"10391:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5430,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"10383:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10383:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10358:44:30"},{"assignments":[5439],"declarations":[{"constant":false,"id":5439,"mutability":"mutable","name":"result","nameLocation":"10429:6:30","nodeType":"VariableDeclaration","scope":5444,"src":"10412:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5437,"name":"address","nodeType":"ElementaryTypeName","src":"10412:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5438,"nodeType":"ArrayTypeName","src":"10412:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5440,"nodeType":"VariableDeclarationStatement","src":"10412:23:30"},{"AST":{"nodeType":"YulBlock","src":"10498:39:30","statements":[{"nodeType":"YulAssignment","src":"10512:15:30","value":{"name":"store","nodeType":"YulIdentifier","src":"10522:5:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10512:6:30"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5439,"isOffset":false,"isSlot":false,"src":"10512:6:30","valueSize":1},{"declaration":5429,"isOffset":false,"isSlot":false,"src":"10522:5:30","valueSize":1}],"id":5441,"nodeType":"InlineAssembly","src":"10489:48:30"},{"expression":{"id":5442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"10554:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5424,"id":5443,"nodeType":"Return","src":"10547:13:30"}]},"documentation":{"id":5416,"nodeType":"StructuredDocumentation","src":"9733:529:30","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5445,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10276:6:30","nodeType":"FunctionDefinition","parameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"set","nameLocation":"10302:3:30","nodeType":"VariableDeclaration","scope":5445,"src":"10283:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5418,"nodeType":"UserDefinedTypeName","pathNode":{"id":5417,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":5292,"src":"10283:10:30"},"referencedDeclaration":5292,"src":"10283:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5292_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10282:24:30"},"returnParameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5445,"src":"10330:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5421,"name":"address","nodeType":"ElementaryTypeName","src":"10330:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5422,"nodeType":"ArrayTypeName","src":"10330:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10329:18:30"},"scope":5579,"src":"10267:300:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":5449,"members":[{"constant":false,"id":5448,"mutability":"mutable","name":"_inner","nameLocation":"10618:6:30","nodeType":"VariableDeclaration","scope":5449,"src":"10614:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5447,"nodeType":"UserDefinedTypeName","pathNode":{"id":5446,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4977,"src":"10614:3:30"},"referencedDeclaration":4977,"src":"10614:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10596:7:30","nodeType":"StructDefinition","scope":5579,"src":"10589:42:30","visibility":"public"},{"body":{"id":5469,"nodeType":"Block","src":"10874:56:30","statements":[{"expression":{"arguments":[{"expression":{"id":5461,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"10896:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5448,"src":"10896:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":5465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"10916:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10908:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10908:7:30","typeDescriptions":{}}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10908:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5460,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"10891:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10891:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5459,"id":5468,"nodeType":"Return","src":"10884:39:30"}]},"documentation":{"id":5450,"nodeType":"StructuredDocumentation","src":"10637:159:30","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5470,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10810:3:30","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"set","nameLocation":"10830:3:30","nodeType":"VariableDeclaration","scope":5470,"src":"10814:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5452,"nodeType":"UserDefinedTypeName","pathNode":{"id":5451,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5449,"src":"10814:7:30"},"referencedDeclaration":5449,"src":"10814:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":5455,"mutability":"mutable","name":"value","nameLocation":"10843:5:30","nodeType":"VariableDeclaration","scope":5470,"src":"10835:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"10835:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10813:36:30"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5470,"src":"10868:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5457,"name":"bool","nodeType":"ElementaryTypeName","src":"10868:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10867:6:30"},"scope":5579,"src":"10801:129:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5490,"nodeType":"Block","src":"11174:59:30","statements":[{"expression":{"arguments":[{"expression":{"id":5482,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"11199:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5448,"src":"11199:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"11219:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11211:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11211:7:30","typeDescriptions":{}}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11211:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5481,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"11191:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11191:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5480,"id":5489,"nodeType":"Return","src":"11184:42:30"}]},"documentation":{"id":5471,"nodeType":"StructuredDocumentation","src":"10936:157:30","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5491,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11107:6:30","nodeType":"FunctionDefinition","parameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5474,"mutability":"mutable","name":"set","nameLocation":"11130:3:30","nodeType":"VariableDeclaration","scope":5491,"src":"11114:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5473,"nodeType":"UserDefinedTypeName","pathNode":{"id":5472,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5449,"src":"11114:7:30"},"referencedDeclaration":5449,"src":"11114:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":5476,"mutability":"mutable","name":"value","nameLocation":"11143:5:30","nodeType":"VariableDeclaration","scope":5491,"src":"11135:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11113:36:30"},"returnParameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5491,"src":"11168:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5478,"name":"bool","nodeType":"ElementaryTypeName","src":"11168:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11167:6:30"},"scope":5579,"src":"11098:135:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5511,"nodeType":"Block","src":"11397:61:30","statements":[{"expression":{"arguments":[{"expression":{"id":5503,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"11424:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5448,"src":"11424:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"11444:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11436:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11436:7:30","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11436:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5502,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"11414:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11414:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5501,"id":5510,"nodeType":"Return","src":"11407:44:30"}]},"documentation":{"id":5492,"nodeType":"StructuredDocumentation","src":"11239:70:30","text":" @dev Returns true if the value is in the set. O(1)."},"id":5512,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11323:8:30","nodeType":"FunctionDefinition","parameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"set","nameLocation":"11348:3:30","nodeType":"VariableDeclaration","scope":5512,"src":"11332:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5494,"nodeType":"UserDefinedTypeName","pathNode":{"id":5493,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5449,"src":"11332:7:30"},"referencedDeclaration":5449,"src":"11332:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":5497,"mutability":"mutable","name":"value","nameLocation":"11361:5:30","nodeType":"VariableDeclaration","scope":5512,"src":"11353:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5496,"name":"uint256","nodeType":"ElementaryTypeName","src":"11353:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11331:36:30"},"returnParameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5512,"src":"11391:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5499,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11390:6:30"},"scope":5579,"src":"11314:144:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5526,"nodeType":"Block","src":"11608:43:30","statements":[{"expression":{"arguments":[{"expression":{"id":5522,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"11633:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5448,"src":"11633:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5521,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"11625:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11625:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5520,"id":5525,"nodeType":"Return","src":"11618:26:30"}]},"documentation":{"id":5513,"nodeType":"StructuredDocumentation","src":"11464:70:30","text":" @dev Returns the number of values in the set. O(1)."},"id":5527,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11548:6:30","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"set","nameLocation":"11571:3:30","nodeType":"VariableDeclaration","scope":5527,"src":"11555:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5515,"nodeType":"UserDefinedTypeName","pathNode":{"id":5514,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5449,"src":"11555:7:30"},"referencedDeclaration":5449,"src":"11555:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11554:21:30"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5527,"src":"11599:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5518,"name":"uint256","nodeType":"ElementaryTypeName","src":"11599:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11598:9:30"},"scope":5579,"src":"11539:112:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5547,"nodeType":"Block","src":"12073:55:30","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5541,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"12102:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5448,"src":"12102:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5543,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"12114:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5540,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"12098:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12098:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12090:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"12090:7:30","typeDescriptions":{}}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12090:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5537,"id":5546,"nodeType":"Return","src":"12083:38:30"}]},"documentation":{"id":5528,"nodeType":"StructuredDocumentation","src":"11657:331:30","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5548,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12002:2:30","nodeType":"FunctionDefinition","parameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"set","nameLocation":"12021:3:30","nodeType":"VariableDeclaration","scope":5548,"src":"12005:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5530,"nodeType":"UserDefinedTypeName","pathNode":{"id":5529,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5449,"src":"12005:7:30"},"referencedDeclaration":5449,"src":"12005:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":5533,"mutability":"mutable","name":"index","nameLocation":"12034:5:30","nodeType":"VariableDeclaration","scope":5548,"src":"12026:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"12026:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12004:36:30"},"returnParameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5548,"src":"12064:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5535,"name":"uint256","nodeType":"ElementaryTypeName","src":"12064:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12063:9:30"},"scope":5579,"src":"11993:135:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5577,"nodeType":"Block","src":"12746:219:30","statements":[{"assignments":[5562],"declarations":[{"constant":false,"id":5562,"mutability":"mutable","name":"store","nameLocation":"12773:5:30","nodeType":"VariableDeclaration","scope":5577,"src":"12756:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12756:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5561,"nodeType":"ArrayTypeName","src":"12756:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5567,"initialValue":{"arguments":[{"expression":{"id":5564,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"12789:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5448,"src":"12789:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4977_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5563,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"12781:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4977_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12781:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12756:44:30"},{"assignments":[5572],"declarations":[{"constant":false,"id":5572,"mutability":"mutable","name":"result","nameLocation":"12827:6:30","nodeType":"VariableDeclaration","scope":5577,"src":"12810:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"12810:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5571,"nodeType":"ArrayTypeName","src":"12810:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5573,"nodeType":"VariableDeclarationStatement","src":"12810:23:30"},{"AST":{"nodeType":"YulBlock","src":"12896:39:30","statements":[{"nodeType":"YulAssignment","src":"12910:15:30","value":{"name":"store","nodeType":"YulIdentifier","src":"12920:5:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12910:6:30"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5572,"isOffset":false,"isSlot":false,"src":"12910:6:30","valueSize":1},{"declaration":5562,"isOffset":false,"isSlot":false,"src":"12920:5:30","valueSize":1}],"id":5574,"nodeType":"InlineAssembly","src":"12887:48:30"},{"expression":{"id":5575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"12952:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5557,"id":5576,"nodeType":"Return","src":"12945:13:30"}]},"documentation":{"id":5549,"nodeType":"StructuredDocumentation","src":"12134:529:30","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5578,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12677:6:30","nodeType":"FunctionDefinition","parameters":{"id":5553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"set","nameLocation":"12700:3:30","nodeType":"VariableDeclaration","scope":5578,"src":"12684:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5551,"nodeType":"UserDefinedTypeName","pathNode":{"id":5550,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":5449,"src":"12684:7:30"},"referencedDeclaration":5449,"src":"12684:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5449_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12683:21:30"},"returnParameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5578,"src":"12728:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5554,"name":"uint256","nodeType":"ElementaryTypeName","src":"12728:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5555,"nodeType":"ArrayTypeName","src":"12728:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12727:18:30"},"scope":5579,"src":"12668:297:30","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5580,"src":"1326:11641:30","usedErrors":[]}],"src":"210:12758:30"},"id":30},"contracts/KRBTokenV01.sol":{"ast":{"absolutePath":"contracts/KRBTokenV01.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[144],"AccessControlUpgradeable":[480],"AddressUpgradeable":[2814],"ContextUpgradeable":[2856],"ECDSAUpgradeable":[3452],"EIP712Upgradeable":[3602],"ERC165Upgradeable":[3777],"ERC1967UpgradeUpgradeable":[1089],"ERC20BurnableUpgradeable":[2445],"ERC20PausableUpgradeable":[2505],"ERC20Upgradeable":[2303],"EnumerableSetUpgradeable":[5579],"EscrowUpgradeable":[3733],"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578],"IBeaconUpgradeable":[1099],"IERC165Upgradeable":[3789],"IERC1822ProxiableUpgradeable":[720],"IERC20MetadataUpgradeable":[2530],"IERC20Upgradeable":[2381],"Initializable":[1268],"KRBTokenV01":[7241],"MathUpgradeable":[4654],"OwnableUpgradeable":[710],"PausableUpgradeable":[1531],"PullPaymentUpgradeable":[1618],"ReentrancyGuardUpgradeable":[1691],"SafeMathUpgradeable":[4966],"StorageSlotUpgradeable":[2916],"StringsUpgradeable":[3091],"UUPSUpgradeable":[1404],"VCTypesV01":[7614]},"id":7242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5581,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"133:23:31"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":5582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":2304,"src":"209:78:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","id":5583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":2446,"src":"288:97:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","id":5584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":2506,"src":"386:97:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol","id":5585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":3606,"src":"484:92:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","id":5586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":145,"src":"577:91:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":5587,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":2857,"src":"669:74:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":5588,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":1269,"src":"744:75:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":5589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":1405,"src":"820:77:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","id":5590,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":3453,"src":"898:85:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","id":5591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":4967,"src":"984:80:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol","id":5592,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":1619,"src":"1065:81:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":5593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":1692,"src":"1147:85:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/VCTypesV01.sol","file":"./VCTypesV01.sol","id":5594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7242,"sourceUnit":7615,"src":"1234:26:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5596,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"1903:13:31"},"id":5597,"nodeType":"InheritanceSpecifier","src":"1903:13:31"},{"baseName":{"id":5598,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"1922:18:31"},"id":5599,"nodeType":"InheritanceSpecifier","src":"1922:18:31"},{"baseName":{"id":5600,"name":"AccessControlEnumerableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":144,"src":"1946:34:31"},"id":5601,"nodeType":"InheritanceSpecifier","src":"1946:34:31"},{"baseName":{"id":5602,"name":"ERC20BurnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2445,"src":"1986:24:31"},"id":5603,"nodeType":"InheritanceSpecifier","src":"1986:24:31"},{"baseName":{"id":5604,"name":"ERC20PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2505,"src":"2016:24:31"},"id":5605,"nodeType":"InheritanceSpecifier","src":"2016:24:31"},{"baseName":{"id":5606,"name":"EIP712Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":3602,"src":"2046:17:31"},"id":5607,"nodeType":"InheritanceSpecifier","src":"2046:17:31"},{"baseName":{"id":5608,"name":"UUPSUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1404,"src":"2069:15:31"},"id":5609,"nodeType":"InheritanceSpecifier","src":"2069:15:31"},{"baseName":{"id":5610,"name":"PullPaymentUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1618,"src":"2090:22:31"},"id":5611,"nodeType":"InheritanceSpecifier","src":"2090:22:31"},{"baseName":{"id":5612,"name":"ReentrancyGuardUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1691,"src":"2118:26:31"},"id":5613,"nodeType":"InheritanceSpecifier","src":"2118:26:31"}],"canonicalName":"KRBTokenV01","contractDependencies":[3733],"contractKind":"contract","documentation":{"id":5595,"nodeType":"StructuredDocumentation","src":"1262:612:31","text":" @notice {ERC20} token with OpenZeppelin Extensions:\n - Initializable,\n - ERC2771ContextUpgradeable,\n - UUPSUpgradeable\n - AccessControlEnumerableUpgradeable,\n - ERC20BurnableUpgradeable,\n - ERC20PausableUpgradeable,\n - EIP712Upgradeable,\n - PullPaymentUpgradeable,\n - ReentrancyGuardUpgradeable\n This contract uses {AccessControlEnumerable} to lock permissioned functions using the\n different roles:\n The account that deploys the contract will be granted the govern role,\n as well as the default admin role, which will let it grant govern roles\n to other accounts."},"fullyImplemented":true,"id":7241,"linearizedBaseContracts":[7241,1691,1618,1404,1089,720,3602,2505,1531,2445,2303,2530,2381,144,480,3777,3789,505,578,2856,1268],"name":"KRBTokenV01","nameLocation":"1884:11:31","nodeType":"ContractDefinition","nodes":[{"id":5616,"libraryName":{"id":5614,"name":"SafeMathUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":4966,"src":"2157:19:31"},"nodeType":"UsingForDirective","src":"2151:38:31","typeName":{"id":5615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2181:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"38b7f446","id":5621,"mutability":"constant","name":"GOVERN_ROLE","nameLocation":"2219:11:31","nodeType":"VariableDeclaration","scope":7241,"src":"2195:62:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2195:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"474f5645524e5f524f4c45","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2243:13:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e","typeString":"literal_string \"GOVERN_ROLE\""},"value":"GOVERN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e","typeString":"literal_string \"GOVERN_ROLE\""}],"id":5618,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2233:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"documentation":{"id":5622,"nodeType":"StructuredDocumentation","src":"2264:34:31","text":" @notice ERC2771"},"functionSelector":"7da0a877","id":5624,"mutability":"mutable","name":"trustedForwarder","nameLocation":"2318:16:31","nodeType":"VariableDeclaration","scope":7241,"src":"2303:31:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5623,"name":"address","nodeType":"ElementaryTypeName","src":"2303:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":5625,"nodeType":"StructuredDocumentation","src":"2341:50:31","text":" @notice Min Balance to Transfer"},"functionSelector":"e5a2b28e","id":5627,"mutability":"mutable","name":"minBalanceToTransfer","nameLocation":"2411:20:31","nodeType":"VariableDeclaration","scope":7241,"src":"2396:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"2396:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"2437:50:31","text":" @notice  Min Balance to Receive"},"functionSelector":"07a77292","id":5630,"mutability":"mutable","name":"minBalanceToReceive","nameLocation":"2507:19:31","nodeType":"VariableDeclaration","scope":7241,"src":"2492:34:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2492:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":5631,"nodeType":"StructuredDocumentation","src":"2532:70:31","text":" @notice Min Balance to Issue Verifiable Credentials"},"functionSelector":"af4e720d","id":5633,"mutability":"mutable","name":"minBalanceToIssue","nameLocation":"2622:17:31","nodeType":"VariableDeclaration","scope":7241,"src":"2607:32:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":5634,"nodeType":"StructuredDocumentation","src":"2645:69:31","text":" @notice  Min Value to Issue Verifiable Credentials"},"functionSelector":"ee2b1b4d","id":5636,"mutability":"mutable","name":"minPriceToIssue","nameLocation":"2734:15:31","nodeType":"VariableDeclaration","scope":7241,"src":"2719:30:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5635,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":5637,"nodeType":"StructuredDocumentation","src":"2755:69:31","text":" @notice  Max Value to Issue Verifiable Credentials"},"functionSelector":"a775aabd","id":5639,"mutability":"mutable","name":"maxPriceToIssue","nameLocation":"2844:15:31","nodeType":"VariableDeclaration","scope":7241,"src":"2829:30:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2829:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"2865:69:31","text":" @notice  Min Stake to Issue Verifiable Credentials"},"functionSelector":"de9d2b1c","id":5642,"mutability":"mutable","name":"minStakeToIssue","nameLocation":"2954:15:31","nodeType":"VariableDeclaration","scope":7241,"src":"2939:30:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2939:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":5643,"nodeType":"StructuredDocumentation","src":"2975:69:31","text":" @notice  Max Stake to Issue Verifiable Credentials"},"functionSelector":"07a0d798","id":5645,"mutability":"mutable","name":"maxStakeToIssue","nameLocation":"3064:15:31","nodeType":"VariableDeclaration","scope":7241,"src":"3049:30:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"3049:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":5646,"nodeType":"StructuredDocumentation","src":"3085:63:31","text":" @notice  Fee to Issue Verifiable Credentials"},"functionSelector":"a001ecdd","id":5648,"mutability":"mutable","name":"feePercentage","nameLocation":"3168:13:31","nodeType":"VariableDeclaration","scope":7241,"src":"3153:28:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3153:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":5649,"nodeType":"StructuredDocumentation","src":"3187:63:31","text":" @notice Total fees collected by the contract"},"functionSelector":"de5785d5","id":5651,"mutability":"mutable","name":"feesAvailableForWithdraw","nameLocation":"3270:24:31","nodeType":"VariableDeclaration","scope":7241,"src":"3255:39:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3255:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"3307:42:31","text":" @dev For config updates"},"id":5654,"name":"Updated","nameLocation":"3360:7:31","nodeType":"EventDefinition","parameters":{"id":5653,"nodeType":"ParameterList","parameters":[],"src":"3367:2:31"},"src":"3354:16:31"},{"canonicalName":"KRBTokenV01.Status","id":5661,"members":[{"id":5655,"name":"None","nameLocation":"3456:4:31","nodeType":"EnumValue","src":"3456:4:31"},{"id":5656,"name":"Issued","nameLocation":"3470:6:31","nodeType":"EnumValue","src":"3470:6:31"},{"id":5657,"name":"Disputed","nameLocation":"3486:8:31","nodeType":"EnumValue","src":"3486:8:31"},{"id":5658,"name":"Revoked","nameLocation":"3504:7:31","nodeType":"EnumValue","src":"3504:7:31"},{"id":5659,"name":"Suspended","nameLocation":"3521:9:31","nodeType":"EnumValue","src":"3521:9:31"},{"id":5660,"name":"Expired","nameLocation":"3540:7:31","nodeType":"EnumValue","src":"3540:7:31"}],"name":"Status","nameLocation":"3439:6:31","nodeType":"EnumDefinition","src":"3434:119:31"},{"canonicalName":"KRBTokenV01.VerifiableData","id":5667,"members":[{"constant":false,"id":5664,"mutability":"mutable","name":"credentialStatus","nameLocation":"3597:16:31","nodeType":"VariableDeclaration","scope":5667,"src":"3590:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"typeName":{"id":5663,"nodeType":"UserDefinedTypeName","pathNode":{"id":5662,"name":"Status","nodeType":"IdentifierPath","referencedDeclaration":5661,"src":"3590:6:31"},"referencedDeclaration":5661,"src":"3590:6:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"visibility":"internal"},{"constant":false,"id":5666,"mutability":"mutable","name":"disputedBy","nameLocation":"3631:10:31","nodeType":"VariableDeclaration","scope":5667,"src":"3623:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VerifiableData","nameLocation":"3565:14:31","nodeType":"StructDefinition","scope":7241,"src":"3558:90:31","visibility":"public"},{"constant":false,"documentation":{"id":5668,"nodeType":"StructuredDocumentation","src":"3654:91:31","text":"@dev Mapping of rewarded VCTypesV01.VerifiableCredentials. Key is a hash of the vc data"},"functionSelector":"5893253c","id":5673,"mutability":"mutable","name":"registry","nameLocation":"3792:8:31","nodeType":"VariableDeclaration","scope":7241,"src":"3750:50:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData)"},"typeName":{"id":5672,"keyType":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3750:34:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData)"},"valueType":{"id":5671,"nodeType":"UserDefinedTypeName","pathNode":{"id":5670,"name":"VerifiableData","nodeType":"IdentifierPath","referencedDeclaration":5667,"src":"3769:14:31"},"referencedDeclaration":5667,"src":"3769:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage_ptr","typeString":"struct KRBTokenV01.VerifiableData"}}},"visibility":"public"},{"constant":false,"documentation":{"id":5674,"nodeType":"StructuredDocumentation","src":"3807:51:31","text":" @dev The stakes for each Issuer."},"id":5678,"mutability":"mutable","name":"stakes","nameLocation":"3900:6:31","nodeType":"VariableDeclaration","scope":7241,"src":"3863:43:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":5677,"keyType":{"id":5675,"name":"address","nodeType":"ElementaryTypeName","src":"3871:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3863:27:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3882:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"anonymous":false,"id":5685,"name":"Issued","nameLocation":"3919:6:31","nodeType":"EventDefinition","parameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5680,"indexed":false,"mutability":"mutable","name":"uuid","nameLocation":"3934:4:31","nodeType":"VariableDeclaration","scope":5685,"src":"3926:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5683,"indexed":false,"mutability":"mutable","name":"vc","nameLocation":"3972:2:31","nodeType":"VariableDeclaration","scope":5685,"src":"3940:34:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":5682,"nodeType":"UserDefinedTypeName","pathNode":{"id":5681,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"3940:31:31"},"referencedDeclaration":7312,"src":"3940:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"}],"src":"3925:50:31"},"src":"3913:63:31"},{"anonymous":false,"id":5691,"name":"Disputed","nameLocation":"3987:8:31","nodeType":"EventDefinition","parameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5687,"indexed":false,"mutability":"mutable","name":"uuid","nameLocation":"4004:4:31","nodeType":"VariableDeclaration","scope":5691,"src":"3996:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3996:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5689,"indexed":false,"mutability":"mutable","name":"disputedBy","nameLocation":"4018:10:31","nodeType":"VariableDeclaration","scope":5691,"src":"4010:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5688,"name":"uint256","nodeType":"ElementaryTypeName","src":"4010:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:34:31"},"src":"3981:49:31"},{"anonymous":false,"id":5697,"name":"Revoked","nameLocation":"4041:7:31","nodeType":"EventDefinition","parameters":{"id":5696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"indexed":false,"mutability":"mutable","name":"uuid","nameLocation":"4057:4:31","nodeType":"VariableDeclaration","scope":5697,"src":"4049:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4049:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5695,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"4070:6:31","nodeType":"VariableDeclaration","scope":5697,"src":"4063:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5694,"name":"string","nodeType":"ElementaryTypeName","src":"4063:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4048:29:31"},"src":"4035:43:31"},{"anonymous":false,"id":5703,"name":"Suspended","nameLocation":"4089:9:31","nodeType":"EventDefinition","parameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"indexed":false,"mutability":"mutable","name":"uuid","nameLocation":"4107:4:31","nodeType":"VariableDeclaration","scope":5703,"src":"4099:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5701,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"4120:6:31","nodeType":"VariableDeclaration","scope":5703,"src":"4113:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5700,"name":"string","nodeType":"ElementaryTypeName","src":"4113:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4098:29:31"},"src":"4083:45:31"},{"anonymous":false,"id":5707,"name":"Expired","nameLocation":"4139:7:31","nodeType":"EventDefinition","parameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"indexed":false,"mutability":"mutable","name":"uuid","nameLocation":"4155:4:31","nodeType":"VariableDeclaration","scope":5707,"src":"4147:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"4147:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4146:14:31"},"src":"4133:28:31"},{"anonymous":false,"id":5713,"name":"Deleted","nameLocation":"4172:7:31","nodeType":"EventDefinition","parameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"indexed":false,"mutability":"mutable","name":"uuid","nameLocation":"4188:4:31","nodeType":"VariableDeclaration","scope":5713,"src":"4180:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4180:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5711,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"4201:6:31","nodeType":"VariableDeclaration","scope":5713,"src":"4194:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5710,"name":"string","nodeType":"ElementaryTypeName","src":"4194:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4179:29:31"},"src":"4166:43:31"},{"anonymous":false,"id":5721,"name":"Staked","nameLocation":"4221:6:31","nodeType":"EventDefinition","parameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"4244:4:31","nodeType":"VariableDeclaration","scope":5721,"src":"4228:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5714,"name":"address","nodeType":"ElementaryTypeName","src":"4228:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5717,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"4266:2:31","nodeType":"VariableDeclaration","scope":5721,"src":"4250:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5716,"name":"address","nodeType":"ElementaryTypeName","src":"4250:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5719,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"4278:5:31","nodeType":"VariableDeclaration","scope":5721,"src":"4270:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4270:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4227:57:31"},"src":"4215:70:31"},{"body":{"id":5734,"nodeType":"Block","src":"4405:129:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":5727,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"4444:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5728,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"4457:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4457:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5726,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4436:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4436:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206d757374206861766520676f7665726e20726f6c65","id":5731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4484:33:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca4c381f2cae1bcc5b366609fb5b26a5f2d331bb0bb261d709964b6edd5b203e","typeString":"literal_string \"KRBToken: must have govern role\""},"value":"KRBToken: must have govern role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca4c381f2cae1bcc5b366609fb5b26a5f2d331bb0bb261d709964b6edd5b203e","typeString":"literal_string \"KRBToken: must have govern role\""}],"id":5725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4415:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4415:112:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5733,"nodeType":"ExpressionStatement","src":"4415:112:31"}]},"documentation":{"id":5722,"nodeType":"StructuredDocumentation","src":"4291:63:31","text":" @dev Throws if the sender is not the Govern."},"id":5735,"implemented":true,"kind":"function","modifiers":[],"name":"_checkGovern","nameLocation":"4368:12:31","nodeType":"FunctionDefinition","parameters":{"id":5723,"nodeType":"ParameterList","parameters":[],"src":"4380:2:31"},"returnParameters":{"id":5724,"nodeType":"ParameterList","parameters":[],"src":"4405:0:31"},"scope":7241,"src":"4359:175:31","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5742,"nodeType":"Block","src":"4644:42:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5738,"name":"_checkGovern","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"4654:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4654:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5740,"nodeType":"ExpressionStatement","src":"4654:14:31"},{"id":5741,"nodeType":"PlaceholderStatement","src":"4678:1:31"}]},"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"4540:77:31","text":" @dev Throws if called by any account other than the owner."},"id":5743,"name":"onlyGovern","nameLocation":"4631:10:31","nodeType":"ModifierDefinition","parameters":{"id":5737,"nodeType":"ParameterList","parameters":[],"src":"4641:2:31"},"src":"4622:64:31","virtual":false,"visibility":"internal"},{"body":{"id":5760,"nodeType":"Block","src":"4834:58:31","statements":[{"expression":{"arguments":[{"id":5755,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"4863:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5756,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"4869:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5757,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"4877:7:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5754,"name":"__KRBTokenV01_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"4844:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory,string memory)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4844:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5759,"nodeType":"ExpressionStatement","src":"4844:41:31"}]},"functionSelector":"a6487c53","id":5761,"implemented":true,"kind":"function","modifiers":[{"id":5752,"kind":"modifierInvocation","modifierName":{"id":5751,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":1170,"src":"4822:11:31"},"nodeType":"ModifierInvocation","src":"4822:11:31"}],"name":"initialize","nameLocation":"4701:10:31","nodeType":"FunctionDefinition","parameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"name","nameLocation":"4735:4:31","nodeType":"VariableDeclaration","scope":5761,"src":"4721:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5744,"name":"string","nodeType":"ElementaryTypeName","src":"4721:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5747,"mutability":"mutable","name":"symbol","nameLocation":"4763:6:31","nodeType":"VariableDeclaration","scope":5761,"src":"4749:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5746,"name":"string","nodeType":"ElementaryTypeName","src":"4749:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5749,"mutability":"mutable","name":"version","nameLocation":"4793:7:31","nodeType":"VariableDeclaration","scope":5761,"src":"4779:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5748,"name":"string","nodeType":"ElementaryTypeName","src":"4779:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4711:95:31"},"returnParameters":{"id":5753,"nodeType":"ParameterList","parameters":[],"src":"4834:0:31"},"scope":7241,"src":"4692:200:31","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":5816,"nodeType":"Block","src":"5143:542:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5773,"name":"__Context_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"5153:24:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5153:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5775,"nodeType":"ExpressionStatement","src":"5153:26:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5776,"name":"__ERC165_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"5189:23:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5189:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5778,"nodeType":"ExpressionStatement","src":"5189:25:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5779,"name":"__AccessControl_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5224:30:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5224:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5781,"nodeType":"ExpressionStatement","src":"5224:32:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5782,"name":"__AccessControlEnumerable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"5266:40:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5266:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5784,"nodeType":"ExpressionStatement","src":"5266:42:31"},{"expression":{"arguments":[{"id":5786,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"5341:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5787,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"5347:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5785,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5318:22:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5318:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5789,"nodeType":"ExpressionStatement","src":"5318:36:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5790,"name":"__ERC20Burnable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"5364:30:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5364:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5792,"nodeType":"ExpressionStatement","src":"5364:32:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5793,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5406:25:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5406:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5795,"nodeType":"ExpressionStatement","src":"5406:27:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5796,"name":"__ERC20Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"5443:30:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5443:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5798,"nodeType":"ExpressionStatement","src":"5443:32:31"},{"expression":{"arguments":[{"id":5800,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"5509:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5801,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"5515:7:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5799,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"5485:23:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5485:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5803,"nodeType":"ExpressionStatement","src":"5485:38:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5804,"name":"__PullPayment_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"5543:28:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5543:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5806,"nodeType":"ExpressionStatement","src":"5543:30:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5807,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"5583:32:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5583:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5809,"nodeType":"ExpressionStatement","src":"5583:34:31"},{"expression":{"arguments":[{"id":5811,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"5656:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5812,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"5662:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5813,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"5670:7:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5810,"name":"__KRBTokenV01_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"5627:28:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory,string memory)"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5627:51:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5815,"nodeType":"ExpressionStatement","src":"5627:51:31"}]},"documentation":{"id":5762,"nodeType":"StructuredDocumentation","src":"4898:91:31","text":" @notice Initializes the contract.\n See {ERC20-constructor}."},"id":5817,"implemented":true,"kind":"function","modifiers":[{"id":5771,"kind":"modifierInvocation","modifierName":{"id":5770,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"5126:16:31"},"nodeType":"ModifierInvocation","src":"5126:16:31"}],"name":"__KRBTokenV01_init","nameLocation":"5003:18:31","nodeType":"FunctionDefinition","parameters":{"id":5769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"name","nameLocation":"5045:4:31","nodeType":"VariableDeclaration","scope":5817,"src":"5031:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5763,"name":"string","nodeType":"ElementaryTypeName","src":"5031:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5766,"mutability":"mutable","name":"symbol","nameLocation":"5073:6:31","nodeType":"VariableDeclaration","scope":5817,"src":"5059:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5765,"name":"string","nodeType":"ElementaryTypeName","src":"5059:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5768,"mutability":"mutable","name":"version","nameLocation":"5103:7:31","nodeType":"VariableDeclaration","scope":5817,"src":"5089:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5767,"name":"string","nodeType":"ElementaryTypeName","src":"5089:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5021:95:31"},"returnParameters":{"id":5772,"nodeType":"ParameterList","parameters":[],"src":"5143:0:31"},"scope":7241,"src":"4994:691:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5902,"nodeType":"Block","src":"6258:555:31","statements":[{"expression":{"arguments":[{"id":5830,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"6279:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5831,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"6299:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6299:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5829,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6268:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6268:44:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5834,"nodeType":"ExpressionStatement","src":"6268:44:31"},{"expression":{"arguments":[{"id":5836,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"6333:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5837,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"6346:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6346:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5835,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6322:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6322:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5840,"nodeType":"ExpressionStatement","src":"6322:37:31"},{"expression":{"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5841,"name":"minBalanceToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"6370:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6393:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6399:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5844,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6403:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6403:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6399:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6393:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5849,"nodeType":"ExpressionStatement","src":"6370:43:31"},{"documentation":"@dev 100 KRB","expression":{"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5850,"name":"minBalanceToReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"6440:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6462:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6468:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5853,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6472:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6472:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6468:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6462:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6440:42:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5858,"nodeType":"ExpressionStatement","src":"6440:42:31"},{"documentation":"@dev 100 KRB","expression":{"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5859,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"6510:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130","id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6526:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6510:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5862,"nodeType":"ExpressionStatement","src":"6510:18:31"},{"documentation":"@dev 10 %","expression":{"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5863,"name":"minBalanceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"6553:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6573:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6579:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5866,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6583:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6579:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6573:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6553:40:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5871,"nodeType":"ExpressionStatement","src":"6553:40:31"},{"documentation":"@dev 100 KRB","expression":{"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5872,"name":"minPriceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"6621:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6639:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6621:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5875,"nodeType":"ExpressionStatement","src":"6621:19:31"},{"expression":{"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5876,"name":"maxPriceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"6650:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"id":5881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":5877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6668:4:31","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6675:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6679:2:31","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6675:6:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6668:13:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}},"src":"6650:31:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5883,"nodeType":"ExpressionStatement","src":"6650:31:31"},{"expression":{"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5884,"name":"minStakeToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"6692:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6710:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6714:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5887,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6718:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6718:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6714:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6710:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6692:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5892,"nodeType":"ExpressionStatement","src":"6692:36:31"},{"documentation":"@dev 1 KRB","expression":{"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5893,"name":"maxStakeToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"6753:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6771:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6776:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5896,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6780:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6780:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6776:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6771:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6753:37:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5901,"nodeType":"ExpressionStatement","src":"6753:37:31"}]},"documentation":{"id":5818,"nodeType":"StructuredDocumentation","src":"5691:422:31","text":" @notice Grants `DEFAULT_ADMIN_ROLE` and `GOVERN_ROLE` to the\n account that deploys the contract.\n - minBalanceToTransfer : 100 KRB\n - minBalanceToReceive : 100 KRB\n - feePercentage : 10 %\n - minBalanceToIssue : 100 KRB\n - minPriceToIssue : 0.00001 ETH\n - maxPriceToIssue : 0.0001 ETH\n - minStakeToIssue : 1 KRB\n - maxStakeToIssue : 10 KRB"},"id":5903,"implemented":true,"kind":"function","modifiers":[{"id":5827,"kind":"modifierInvocation","modifierName":{"id":5826,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"6241:16:31"},"nodeType":"ModifierInvocation","src":"6241:16:31"}],"name":"__KRBTokenV01_init_unchained","nameLocation":"6128:28:31","nodeType":"FunctionDefinition","parameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5903,"src":"6166:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5819,"name":"string","nodeType":"ElementaryTypeName","src":"6166:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5903,"src":"6189:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5821,"name":"string","nodeType":"ElementaryTypeName","src":"6189:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5903,"src":"6212:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5823,"name":"string","nodeType":"ElementaryTypeName","src":"6212:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6156:75:31"},"returnParameters":{"id":5828,"nodeType":"ParameterList","parameters":[],"src":"6258:0:31"},"scope":7241,"src":"6119:694:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1398],"body":{"id":5913,"nodeType":"Block","src":"7190:31:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5910,"name":"_checkGovern","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"7200:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7200:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5912,"nodeType":"ExpressionStatement","src":"7200:14:31"}]},"documentation":{"id":5904,"nodeType":"StructuredDocumentation","src":"6819:307:31","text":" @notice Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n See {UUPSUpgradeable-_authorizeUpgrade}.\n Requirements:\n - the caller must have the `GOVERN_ROLE`."},"id":5914,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"7140:17:31","nodeType":"FunctionDefinition","overrides":{"id":5908,"nodeType":"OverrideSpecifier","overrides":[],"src":"7181:8:31"},"parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5914,"src":"7158:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5905,"name":"address","nodeType":"ElementaryTypeName","src":"7158:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7157:9:31"},"returnParameters":{"id":5909,"nodeType":"ParameterList","parameters":[],"src":"7190:0:31"},"scope":7241,"src":"7131:90:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5926,"nodeType":"Block","src":"7411:53:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5922,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"7428:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5923,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"7441:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7428:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5921,"id":5925,"nodeType":"Return","src":"7421:36:31"}]},"documentation":{"id":5915,"nodeType":"StructuredDocumentation","src":"7227:61:31","text":" @notice ERC2771 Meta-Transactions support."},"functionSelector":"572b6c05","id":5927,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"7302:18:31","nodeType":"FunctionDefinition","parameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"forwarder","nameLocation":"7329:9:31","nodeType":"VariableDeclaration","scope":5927,"src":"7321:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5916,"name":"address","nodeType":"ElementaryTypeName","src":"7321:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7320:19:31"},"returnParameters":{"id":5921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5927,"src":"7401:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5919,"name":"bool","nodeType":"ElementaryTypeName","src":"7401:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7400:6:31"},"scope":7241,"src":"7293:171:31","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2841],"body":{"id":5947,"nodeType":"Block","src":"7678:370:31","statements":[{"condition":{"arguments":[{"expression":{"id":5936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7711:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7711:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5935,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"7692:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7692:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5945,"nodeType":"Block","src":"7992:50:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5941,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8013:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_KRBTokenV01_$7241_$","typeString":"type(contract super KRBTokenV01)"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":2841,"src":"8013:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8013:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5934,"id":5944,"nodeType":"Return","src":"8006:25:31"}]},"id":5946,"nodeType":"IfStatement","src":"7688:354:31","trueBody":{"id":5940,"nodeType":"Block","src":"7724:262:31","statements":[{"AST":{"nodeType":"YulBlock","src":"7888:88:31","statements":[{"nodeType":"YulAssignment","src":"7906:56:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7920:2:31","type":"","value":"96"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"7941:12:31"},"nodeType":"YulFunctionCall","src":"7941:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"7957:2:31","type":"","value":"20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7937:3:31"},"nodeType":"YulFunctionCall","src":"7937:23:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7924:12:31"},"nodeType":"YulFunctionCall","src":"7924:37:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7916:3:31"},"nodeType":"YulFunctionCall","src":"7916:46:31"},"variableNames":[{"name":"sender","nodeType":"YulIdentifier","src":"7906:6:31"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5933,"isOffset":false,"isSlot":false,"src":"7906:6:31","valueSize":1}],"id":5939,"nodeType":"InlineAssembly","src":"7879:97:31"}]}}]},"documentation":{"id":5928,"nodeType":"StructuredDocumentation","src":"7470:61:31","text":" @notice ERC2771 Meta-Transactions support."},"id":5948,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"7545:10:31","nodeType":"FunctionDefinition","overrides":{"id":5931,"nodeType":"OverrideSpecifier","overrides":[{"id":5930,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"7621:18:31"}],"src":"7612:28:31"},"parameters":{"id":5929,"nodeType":"ParameterList","parameters":[],"src":"7555:2:31"},"returnParameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"sender","nameLocation":"7666:6:31","nodeType":"VariableDeclaration","scope":5948,"src":"7658:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5932,"name":"address","nodeType":"ElementaryTypeName","src":"7658:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7657:16:31"},"scope":7241,"src":"7536:512:31","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2850],"body":{"id":5976,"nodeType":"Block","src":"8260:169:31","statements":[{"condition":{"arguments":[{"expression":{"id":5957,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8293:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8293:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5956,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"8274:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8274:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5974,"nodeType":"Block","src":"8375:48:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5970,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8396:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_KRBTokenV01_$7241_$","typeString":"type(contract super KRBTokenV01)"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":2850,"src":"8396:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8396:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":5955,"id":5973,"nodeType":"Return","src":"8389:23:31"}]},"id":5975,"nodeType":"IfStatement","src":"8270:153:31","trueBody":{"id":5969,"nodeType":"Block","src":"8306:63:31","statements":[{"expression":{"baseExpression":{"expression":{"id":5960,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8327:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"8327:8:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8337:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"8337:8:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8337:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8355:2:31","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"8337:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"8327:31:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":5955,"id":5968,"nodeType":"Return","src":"8320:38:31"}]}}]},"documentation":{"id":5949,"nodeType":"StructuredDocumentation","src":"8054:61:31","text":" @notice ERC2771 Meta-Transactions support."},"id":5977,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"8129:8:31","nodeType":"FunctionDefinition","overrides":{"id":5952,"nodeType":"OverrideSpecifier","overrides":[{"id":5951,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"8203:18:31"}],"src":"8194:28:31"},"parameters":{"id":5950,"nodeType":"ParameterList","parameters":[],"src":"8137:2:31"},"returnParameters":{"id":5955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5977,"src":"8240:14:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5953,"name":"bytes","nodeType":"ElementaryTypeName","src":"8240:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8239:16:31"},"scope":7241,"src":"8120:309:31","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":6065,"nodeType":"Block","src":"9474:868:31","statements":[{"expression":{"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6001,"name":"minBalanceToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"9484:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6002,"name":"newMinBalanceToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"9507:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9484:46:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6004,"nodeType":"ExpressionStatement","src":"9484:46:31"},{"expression":{"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6005,"name":"minBalanceToReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"9540:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6006,"name":"newMinBalanceToReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"9562:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9540:44:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6008,"nodeType":"ExpressionStatement","src":"9540:44:31"},{"expression":{"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6009,"name":"minBalanceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"9594:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6010,"name":"newMinBalanceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"9614:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9594:40:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6012,"nodeType":"ExpressionStatement","src":"9594:40:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6014,"name":"newFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"9666:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9686:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9666:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6017,"name":"newFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"9691:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"9691:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9666:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206261642070657263656e746167652076616c7565","id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9728:32:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c9622ad52091e2b95a9f53802ec9bc638a7514fa414a842365027a9f4b3d0f0","typeString":"literal_string \"KRBToken: bad percentage value\""},"value":"KRBToken: bad percentage value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c9622ad52091e2b95a9f53802ec9bc638a7514fa414a842365027a9f4b3d0f0","typeString":"literal_string \"KRBToken: bad percentage value\""}],"id":6013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9645:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9645:125:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6023,"nodeType":"ExpressionStatement","src":"9645:125:31"},{"expression":{"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6024,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"9780:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6025,"name":"newFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"9796:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9780:32:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6027,"nodeType":"ExpressionStatement","src":"9780:32:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6029,"name":"newMaxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"9843:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6030,"name":"newMinPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"9858:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9843:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206e65774d61785072696365206d7573742062652067726561746572206f7220657175616c207468616e206e65774d696e5072696365","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9883:65:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_edbe082f9bfd44b24100253331b8b5648999939251a9df0a754ae195eec06fdf","typeString":"literal_string \"KRBToken: newMaxPrice must be greater or equal than newMinPrice\""},"value":"KRBToken: newMaxPrice must be greater or equal than newMinPrice"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_edbe082f9bfd44b24100253331b8b5648999939251a9df0a754ae195eec06fdf","typeString":"literal_string \"KRBToken: newMaxPrice must be greater or equal than newMinPrice\""}],"id":6028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9822:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9822:136:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6034,"nodeType":"ExpressionStatement","src":"9822:136:31"},{"expression":{"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6035,"name":"minPriceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"9968:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6036,"name":"newMinPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"9986:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9968:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6038,"nodeType":"ExpressionStatement","src":"9968:29:31"},{"expression":{"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6039,"name":"maxPriceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"10007:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6040,"name":"newMaxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"10025:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10007:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6042,"nodeType":"ExpressionStatement","src":"10007:29:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6044,"name":"newMaxStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"10068:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6045,"name":"newMinStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"10083:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10068:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206e65774d61785374616b65206d7573742062652067726561746572206f7220657175616c207468616e206e65774d696e5374616b65","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10108:65:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_83110a80c054bcc7e4c0b30d1981dbd14d0634878b0d0ea47333f50396778953","typeString":"literal_string \"KRBToken: newMaxStake must be greater or equal than newMinStake\""},"value":"KRBToken: newMaxStake must be greater or equal than newMinStake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83110a80c054bcc7e4c0b30d1981dbd14d0634878b0d0ea47333f50396778953","typeString":"literal_string \"KRBToken: newMaxStake must be greater or equal than newMinStake\""}],"id":6043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10047:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10047:136:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6049,"nodeType":"ExpressionStatement","src":"10047:136:31"},{"expression":{"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6050,"name":"minStakeToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"10193:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6051,"name":"newMinStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"10211:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10193:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6053,"nodeType":"ExpressionStatement","src":"10193:29:31"},{"expression":{"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6054,"name":"maxStakeToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"10232:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6055,"name":"newMaxStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"10250:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10232:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6057,"nodeType":"ExpressionStatement","src":"10232:29:31"},{"expression":{"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6058,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"10272:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6059,"name":"newTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"10291:19:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10272:38:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6061,"nodeType":"ExpressionStatement","src":"10272:38:31"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6062,"name":"Updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"10326:7:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10326:9:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6064,"nodeType":"EmitStatement","src":"10321:14:31"}]},"documentation":{"id":5978,"nodeType":"StructuredDocumentation","src":"8435:678:31","text":" @notice Updates all Protocol Parameters\n @param newMinBalanceToTransfer The new min baance to Transfer.\n @param newMinBalanceToReceive The new min balance to Receive.\n @param newMinBalanceToIssue New min Balance to Issue\n @param newFeePercentage new protocol fee percentage (0 -100)\n @param newMinPrice New min price to Issue\n @param newMaxPrice New max price to Issue\n @param newMinStake new min stake to issue\n @param newTrustedForwarder new trustedForwarder\n - emits Updated()\n Requirements:\n - the caller must have the `GOVERN_ROLE`.\n - newMaxStake > newMinStake"},"functionSelector":"8993a3e5","id":6066,"implemented":true,"kind":"function","modifiers":[{"id":5999,"kind":"modifierInvocation","modifierName":{"id":5998,"name":"onlyGovern","nodeType":"IdentifierPath","referencedDeclaration":5743,"src":"9463:10:31"},"nodeType":"ModifierInvocation","src":"9463:10:31"}],"name":"updateParameters","nameLocation":"9127:16:31","nodeType":"FunctionDefinition","parameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"newMinBalanceToTransfer","nameLocation":"9161:23:31","nodeType":"VariableDeclaration","scope":6066,"src":"9153:31:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5979,"name":"uint256","nodeType":"ElementaryTypeName","src":"9153:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5982,"mutability":"mutable","name":"newMinBalanceToReceive","nameLocation":"9202:22:31","nodeType":"VariableDeclaration","scope":6066,"src":"9194:30:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5981,"name":"uint256","nodeType":"ElementaryTypeName","src":"9194:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5984,"mutability":"mutable","name":"newMinBalanceToIssue","nameLocation":"9242:20:31","nodeType":"VariableDeclaration","scope":6066,"src":"9234:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5983,"name":"uint256","nodeType":"ElementaryTypeName","src":"9234:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5986,"mutability":"mutable","name":"newFeePercentage","nameLocation":"9280:16:31","nodeType":"VariableDeclaration","scope":6066,"src":"9272:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"9272:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5988,"mutability":"mutable","name":"newMinPrice","nameLocation":"9314:11:31","nodeType":"VariableDeclaration","scope":6066,"src":"9306:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5987,"name":"uint256","nodeType":"ElementaryTypeName","src":"9306:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5990,"mutability":"mutable","name":"newMaxPrice","nameLocation":"9343:11:31","nodeType":"VariableDeclaration","scope":6066,"src":"9335:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5989,"name":"uint256","nodeType":"ElementaryTypeName","src":"9335:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5992,"mutability":"mutable","name":"newMinStake","nameLocation":"9372:11:31","nodeType":"VariableDeclaration","scope":6066,"src":"9364:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5991,"name":"uint256","nodeType":"ElementaryTypeName","src":"9364:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5994,"mutability":"mutable","name":"newMaxStake","nameLocation":"9401:11:31","nodeType":"VariableDeclaration","scope":6066,"src":"9393:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5993,"name":"uint256","nodeType":"ElementaryTypeName","src":"9393:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5996,"mutability":"mutable","name":"newTrustedForwarder","nameLocation":"9430:19:31","nodeType":"VariableDeclaration","scope":6066,"src":"9422:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5995,"name":"address","nodeType":"ElementaryTypeName","src":"9422:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9143:312:31"},"returnParameters":{"id":6000,"nodeType":"ParameterList","parameters":[],"src":"9474:0:31"},"scope":7241,"src":"9118:1224:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2286,2499],"body":{"id":6145,"nodeType":"Block","src":"10684:631:31","statements":[{"expression":{"arguments":[{"id":6082,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"10721:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6083,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"10727:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"10731:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6079,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10694:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_KRBTokenV01_$7241_$","typeString":"type(contract super KRBTokenV01)"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2499,"src":"10694:26:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10694:44:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6086,"nodeType":"ExpressionStatement","src":"10694:44:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6089,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"10809:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6090,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"10822:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10822:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6088,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"10801:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10801:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6093,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"10855:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10871:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10863:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6094,"name":"address","nodeType":"ElementaryTypeName","src":"10863:7:31","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10863:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10855:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10801:72:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6100,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"10893:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10907:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10899:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6101,"name":"address","nodeType":"ElementaryTypeName","src":"10899:7:31","typeDescriptions":{}}},"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10899:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10893:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10801:108:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6108,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"10939:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6107,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"10929:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10929:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6110,"name":"minBalanceToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"10948:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10929:39:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10801:167:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2073656e64657220646f6573206e6f74206861766520656e6f7567682062616c616e6365","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10982:47:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ab6f67ab3e5c9d3e3ad1ce6e59c6145b1dca09929899c966d2f1683f7246d26","typeString":"literal_string \"KRBToken: sender does not have enough balance\""},"value":"KRBToken: sender does not have enough balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ab6f67ab3e5c9d3e3ad1ce6e59c6145b1dca09929899c966d2f1683f7246d26","typeString":"literal_string \"KRBToken: sender does not have enough balance\""}],"id":6087,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10780:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10780:259:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6115,"nodeType":"ExpressionStatement","src":"10780:259:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6118,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"11078:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6119,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"11091:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11091:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6117,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"11070:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11070:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6122,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"11124:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11140:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11132:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6123,"name":"address","nodeType":"ElementaryTypeName","src":"11132:7:31","typeDescriptions":{}}},"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11132:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11124:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11070:72:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6129,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"11162:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11176:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11168:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6130,"name":"address","nodeType":"ElementaryTypeName","src":"11168:7:31","typeDescriptions":{}}},"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11168:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11162:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11070:108:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6137,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"11208:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6136,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"11198:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11198:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6139,"name":"minBalanceToReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"11215:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11198:36:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11070:164:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a20726563697069656e7420646f6573206e6f74206861766520656e6f7567682062616c616e6365","id":6142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11248:50:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_91ee1d72c262cf54d2263e53ca95d17b8447785204e2fcf5c35c3b85dce47ce6","typeString":"literal_string \"KRBToken: recipient does not have enough balance\""},"value":"KRBToken: recipient does not have enough balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91ee1d72c262cf54d2263e53ca95d17b8447785204e2fcf5c35c3b85dce47ce6","typeString":"literal_string \"KRBToken: recipient does not have enough balance\""}],"id":6116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11049:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11049:259:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6144,"nodeType":"ExpressionStatement","src":"11049:259:31"}]},"documentation":{"id":6067,"nodeType":"StructuredDocumentation","src":"10348:159:31","text":" @dev Checks min balances before Issue / Mint / Transfer.\n Requirements:\n - the caller must have the `GOVERN_ROLE`."},"id":6146,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"10521:20:31","nodeType":"FunctionDefinition","overrides":{"id":6077,"nodeType":"OverrideSpecifier","overrides":[{"id":6075,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":2303,"src":"10640:16:31"},{"id":6076,"name":"ERC20PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2505,"src":"10658:24:31"}],"src":"10631:52:31"},"parameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6069,"mutability":"mutable","name":"from","nameLocation":"10559:4:31","nodeType":"VariableDeclaration","scope":6146,"src":"10551:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6068,"name":"address","nodeType":"ElementaryTypeName","src":"10551:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6071,"mutability":"mutable","name":"to","nameLocation":"10581:2:31","nodeType":"VariableDeclaration","scope":6146,"src":"10573:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6070,"name":"address","nodeType":"ElementaryTypeName","src":"10573:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6073,"mutability":"mutable","name":"amount","nameLocation":"10601:6:31","nodeType":"VariableDeclaration","scope":6146,"src":"10593:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6072,"name":"uint256","nodeType":"ElementaryTypeName","src":"10593:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10541:72:31"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[],"src":"10684:0:31"},"scope":7241,"src":"10512:803:31","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6191,"nodeType":"Block","src":"11463:322:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6155,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"11494:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11513:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11505:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6156,"name":"address","nodeType":"ElementaryTypeName","src":"11505:7:31","typeDescriptions":{}}},"id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11505:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11494:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206275726e207374616b652066726f6d20746865207a65726f2061646472657373","id":6161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11529:44:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_34550b29c2a6cea2c45d9052485cd5d267739ac50461d2acec8e216f6ec8e019","typeString":"literal_string \"KRBToken: burn stake from the zero address\""},"value":"KRBToken: burn stake from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34550b29c2a6cea2c45d9052485cd5d267739ac50461d2acec8e216f6ec8e019","typeString":"literal_string \"KRBToken: burn stake from the zero address\""}],"id":6154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11473:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11473:110:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6163,"nodeType":"ExpressionStatement","src":"11473:110:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6164,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"11628:6:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6166,"indexExpression":{"id":6165,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"11635:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11628:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6167,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"11647:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11628:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6190,"nodeType":"IfStatement","src":"11624:155:31","trueBody":{"id":6189,"nodeType":"Block","src":"11655:124:31","statements":[{"expression":{"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6169,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"11669:6:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6171,"indexExpression":{"id":6170,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"11676:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11669:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6176,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"11707:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6172,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"11687:6:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6174,"indexExpression":{"id":6173,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"11694:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11687:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4845,"src":"11687:19:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11687:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11669:45:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6179,"nodeType":"ExpressionStatement","src":"11669:45:31"},{"eventCall":{"arguments":[{"id":6181,"name":"_issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"11740:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":6184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11757:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11749:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6182,"name":"address","nodeType":"ElementaryTypeName","src":"11749:7:31","typeDescriptions":{}}},"id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11749:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6186,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"11761:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6180,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"11733:6:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11733:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6188,"nodeType":"EmitStatement","src":"11728:40:31"}]}}]},"documentation":{"id":6147,"nodeType":"StructuredDocumentation","src":"11321:67:31","text":" @dev Destroys `_stake` token stake from `issuer`"},"id":6192,"implemented":true,"kind":"function","modifiers":[],"name":"_burnStake","nameLocation":"11402:10:31","nodeType":"FunctionDefinition","parameters":{"id":6152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"_issuer","nameLocation":"11421:7:31","nodeType":"VariableDeclaration","scope":6192,"src":"11413:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6148,"name":"address","nodeType":"ElementaryTypeName","src":"11413:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6151,"mutability":"mutable","name":"_stake","nameLocation":"11438:6:31","nodeType":"VariableDeclaration","scope":6192,"src":"11430:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6150,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11412:33:31"},"returnParameters":{"id":6153,"nodeType":"ParameterList","parameters":[],"src":"11463:0:31"},"scope":7241,"src":"11393:392:31","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6207,"nodeType":"Block","src":"12052:34:31","statements":[{"expression":{"arguments":[{"id":6203,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"12068:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6204,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"12072:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6202,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"12062:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12062:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6206,"nodeType":"ExpressionStatement","src":"12062:17:31"}]},"documentation":{"id":6193,"nodeType":"StructuredDocumentation","src":"11791:188:31","text":" @notice Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `GOVERN_ROLE`."},"functionSelector":"40c10f19","id":6208,"implemented":true,"kind":"function","modifiers":[{"id":6200,"kind":"modifierInvocation","modifierName":{"id":6199,"name":"onlyGovern","nodeType":"IdentifierPath","referencedDeclaration":5743,"src":"12041:10:31"},"nodeType":"ModifierInvocation","src":"12041:10:31"}],"name":"mint","nameLocation":"11993:4:31","nodeType":"FunctionDefinition","parameters":{"id":6198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6195,"mutability":"mutable","name":"to","nameLocation":"12006:2:31","nodeType":"VariableDeclaration","scope":6208,"src":"11998:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6194,"name":"address","nodeType":"ElementaryTypeName","src":"11998:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6197,"mutability":"mutable","name":"amount","nameLocation":"12018:6:31","nodeType":"VariableDeclaration","scope":6208,"src":"12010:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12010:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11997:28:31"},"returnParameters":{"id":6201,"nodeType":"ParameterList","parameters":[],"src":"12052:0:31"},"scope":7241,"src":"11984:102:31","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6223,"nodeType":"Block","src":"12483:42:31","statements":[{"expression":{"arguments":[{"id":6219,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"12504:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6220,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"12512:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6218,"name":"_burnStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"12493:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12493:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6222,"nodeType":"ExpressionStatement","src":"12493:25:31"}]},"documentation":{"id":6209,"nodeType":"StructuredDocumentation","src":"12092:282:31","text":" @notice Destroys `_stake` token stake from `issuer`\n @param issuer The issuer address\n @param stake The KRB stake to burn\n - emits Updated(\"minBalanceToReceive\")\n Requirements:\n - the caller must have the `GOVERN_ROLE`."},"functionSelector":"9c70287c","id":6224,"implemented":true,"kind":"function","modifiers":[{"id":6216,"kind":"modifierInvocation","modifierName":{"id":6215,"name":"onlyGovern","nodeType":"IdentifierPath","referencedDeclaration":5743,"src":"12468:10:31"},"nodeType":"ModifierInvocation","src":"12468:10:31"}],"name":"burnStake","nameLocation":"12388:9:31","nodeType":"FunctionDefinition","parameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"issuer","nameLocation":"12406:6:31","nodeType":"VariableDeclaration","scope":6224,"src":"12398:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6210,"name":"address","nodeType":"ElementaryTypeName","src":"12398:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6213,"mutability":"mutable","name":"stake","nameLocation":"12422:5:31","nodeType":"VariableDeclaration","scope":6224,"src":"12414:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6212,"name":"uint256","nodeType":"ElementaryTypeName","src":"12414:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12397:31:31"},"returnParameters":{"id":6217,"nodeType":"ParameterList","parameters":[],"src":"12483:0:31"},"scope":7241,"src":"12379:146:31","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6233,"nodeType":"Block","src":"12774:25:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6230,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"12784:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12784:8:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6232,"nodeType":"ExpressionStatement","src":"12784:8:31"}]},"documentation":{"id":6225,"nodeType":"StructuredDocumentation","src":"12531:195:31","text":" @notice Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `GOVERN_ROLE`."},"functionSelector":"8456cb59","id":6234,"implemented":true,"kind":"function","modifiers":[{"id":6228,"kind":"modifierInvocation","modifierName":{"id":6227,"name":"onlyGovern","nodeType":"IdentifierPath","referencedDeclaration":5743,"src":"12763:10:31"},"nodeType":"ModifierInvocation","src":"12763:10:31"}],"name":"pause","nameLocation":"12740:5:31","nodeType":"FunctionDefinition","parameters":{"id":6226,"nodeType":"ParameterList","parameters":[],"src":"12745:2:31"},"returnParameters":{"id":6229,"nodeType":"ParameterList","parameters":[],"src":"12774:0:31"},"scope":7241,"src":"12731:68:31","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6243,"nodeType":"Block","src":"13054:27:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6240,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"13064:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13064:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6242,"nodeType":"ExpressionStatement","src":"13064:10:31"}]},"documentation":{"id":6235,"nodeType":"StructuredDocumentation","src":"12805:199:31","text":" @notice Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `GOVERN_ROLE`."},"functionSelector":"3f4ba83a","id":6244,"implemented":true,"kind":"function","modifiers":[{"id":6238,"kind":"modifierInvocation","modifierName":{"id":6237,"name":"onlyGovern","nodeType":"IdentifierPath","referencedDeclaration":5743,"src":"13043:10:31"},"nodeType":"ModifierInvocation","src":"13043:10:31"}],"name":"unpause","nameLocation":"13018:7:31","nodeType":"FunctionDefinition","parameters":{"id":6236,"nodeType":"ParameterList","parameters":[],"src":"13025:2:31"},"returnParameters":{"id":6239,"nodeType":"ParameterList","parameters":[],"src":"13054:0:31"},"scope":7241,"src":"13009:72:31","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6256,"nodeType":"Block","src":"13333:38:31","statements":[{"expression":{"baseExpression":{"id":6252,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"13350:6:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6254,"indexExpression":{"id":6253,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"13357:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13350:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6251,"id":6255,"nodeType":"Return","src":"13343:21:31"}]},"documentation":{"id":6245,"nodeType":"StructuredDocumentation","src":"13087:178:31","text":" @notice A method to retrieve the stake for an issuer.\n @param issuer The issuer to retrieve the stake for.\n @return stake The amount of KRB staked."},"functionSelector":"42623360","id":6257,"implemented":true,"kind":"function","modifiers":[],"name":"stakeOf","nameLocation":"13279:7:31","nodeType":"FunctionDefinition","parameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"issuer","nameLocation":"13295:6:31","nodeType":"VariableDeclaration","scope":6257,"src":"13287:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6246,"name":"address","nodeType":"ElementaryTypeName","src":"13287:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13286:16:31"},"returnParameters":{"id":6251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6257,"src":"13324:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6249,"name":"uint256","nodeType":"ElementaryTypeName","src":"13324:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13323:9:31"},"scope":7241,"src":"13270:101:31","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6266,"nodeType":"Block","src":"13630:44:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6263,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"13647:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13647:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6262,"id":6265,"nodeType":"Return","src":"13640:27:31"}]},"documentation":{"id":6258,"nodeType":"StructuredDocumentation","src":"13511:54:31","text":"@dev solhint-disable-next-line func-name-mixedcase"},"functionSelector":"3644e515","id":6267,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"13579:16:31","nodeType":"FunctionDefinition","parameters":{"id":6259,"nodeType":"ParameterList","parameters":[],"src":"13595:2:31"},"returnParameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6267,"src":"13621:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13621:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13620:9:31"},"scope":7241,"src":"13570:104:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6308,"nodeType":"Block","src":"13979:529:31","statements":[{"assignments":[6278],"declarations":[{"constant":false,"id":6278,"mutability":"mutable","name":"digest","nameLocation":"13997:6:31","nodeType":"VariableDeclaration","scope":6308,"src":"13989:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13989:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6282,"initialValue":{"arguments":[{"id":6280,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"14023:10:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6279,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"14006:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14006:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"13989:45:31"},{"assignments":[6284],"declarations":[{"constant":false,"id":6284,"mutability":"mutable","name":"recoveredAddress","nameLocation":"14053:16:31","nodeType":"VariableDeclaration","scope":6308,"src":"14045:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6283,"name":"address","nodeType":"ElementaryTypeName","src":"14045:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6290,"initialValue":{"arguments":[{"id":6287,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"14097:6:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6288,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"14105:9:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6285,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"14072:16:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$3452_$","typeString":"type(library ECDSAUpgradeable)"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3218,"src":"14072:24:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14072:43:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14045:70:31"},{"documentation":"@dev Explicitly disallow authorizations for address(0) as ecrecover returns address(0) on malformed messages","expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"14268:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14296:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14288:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6293,"name":"address","nodeType":"ElementaryTypeName","src":"14288:7:31","typeDescriptions":{}}},"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14288:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14268:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a20696e76616c6964207369676e61747572652061646472657373283029","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14312:40:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea2f19a4ac42eec14f65d7d4dcad7015f4efe84177cc6011a1dccdc6b71a0b46","typeString":"literal_string \"KRBToken: invalid signature address(0)\""},"value":"KRBToken: invalid signature address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea2f19a4ac42eec14f65d7d4dcad7015f4efe84177cc6011a1dccdc6b71a0b46","typeString":"literal_string \"KRBToken: invalid signature address(0)\""}],"id":6291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14247:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14247:115:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6300,"nodeType":"ExpressionStatement","src":"14247:115:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6302,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"14393:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6303,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"14413:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14393:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a207265636f7665726564206164647265737320646966666572732066726f6d206578706563746564207369676e6572","id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14433:58:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e1977cacd35f2d9e9099ad9af0b7986aef7a028a39d80f79d502a11af996b22","typeString":"literal_string \"KRBToken: recovered address differs from expected signer\""},"value":"KRBToken: recovered address differs from expected signer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e1977cacd35f2d9e9099ad9af0b7986aef7a028a39d80f79d502a11af996b22","typeString":"literal_string \"KRBToken: recovered address differs from expected signer\""}],"id":6301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14372:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14372:129:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6307,"nodeType":"ExpressionStatement","src":"14372:129:31"}]},"documentation":{"id":6268,"nodeType":"StructuredDocumentation","src":"13680:164:31","text":" @dev Checks if the provided address signed a hashed message (`hash`) with\n `signature`.\n See  {EIP-712} and {EIP-3009}."},"functionSelector":"b25dd4fc","id":6309,"implemented":true,"kind":"function","modifiers":[],"name":"validateSignedData","nameLocation":"13858:18:31","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6270,"mutability":"mutable","name":"signer","nameLocation":"13894:6:31","nodeType":"VariableDeclaration","scope":6309,"src":"13886:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6269,"name":"address","nodeType":"ElementaryTypeName","src":"13886:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6272,"mutability":"mutable","name":"structHash","nameLocation":"13918:10:31","nodeType":"VariableDeclaration","scope":6309,"src":"13910:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13910:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6274,"mutability":"mutable","name":"signature","nameLocation":"13951:9:31","nodeType":"VariableDeclaration","scope":6309,"src":"13938:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6273,"name":"bytes","nodeType":"ElementaryTypeName","src":"13938:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13876:90:31"},"returnParameters":{"id":6276,"nodeType":"ParameterList","parameters":[],"src":"13979:0:31"},"scope":7241,"src":"13849:659:31","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6326,"nodeType":"Block","src":"14775:71:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":6322,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"14835:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"expression":{"id":6320,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"14800:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getVerifiableCredential","nodeType":"MemberAccess","referencedDeclaration":7613,"src":"14800:34:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (bytes32)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14800:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14792:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6318,"name":"uint256","nodeType":"ElementaryTypeName","src":"14792:7:31","typeDescriptions":{}}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14792:47:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6317,"id":6325,"nodeType":"Return","src":"14785:54:31"}]},"documentation":{"id":6310,"nodeType":"StructuredDocumentation","src":"14514:138:31","text":" @notice Validates that the `VerifiableCredential` conforms to the VCTypes.\n@param vc Verifiable Credential"},"functionSelector":"bcd68993","id":6327,"implemented":true,"kind":"function","modifiers":[],"name":"getUuid","nameLocation":"14666:7:31","nodeType":"FunctionDefinition","parameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"vc","nameLocation":"14713:2:31","nodeType":"VariableDeclaration","scope":6327,"src":"14674:41:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":6312,"nodeType":"UserDefinedTypeName","pathNode":{"id":6311,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"14674:31:31"},"referencedDeclaration":7312,"src":"14674:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"}],"src":"14673:43:31"},"returnParameters":{"id":6317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6327,"src":"14762:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6315,"name":"uint256","nodeType":"ElementaryTypeName","src":"14762:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14761:9:31"},"scope":7241,"src":"14657:189:31","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":6394,"nodeType":"Block","src":"15214:444:31","statements":[{"assignments":[6337],"declarations":[{"constant":false,"id":6337,"mutability":"mutable","name":"uuid","nameLocation":"15232:4:31","nodeType":"VariableDeclaration","scope":6394,"src":"15224:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6336,"name":"uint256","nodeType":"ElementaryTypeName","src":"15224:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6341,"initialValue":{"arguments":[{"id":6339,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"15247:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":6338,"name":"getUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"15239:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (uint256)"}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15239:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15224:26:31"},{"assignments":[6344],"declarations":[{"constant":false,"id":6344,"mutability":"mutable","name":"temp","nameLocation":"15267:4:31","nodeType":"VariableDeclaration","scope":6394,"src":"15260:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"typeName":{"id":6343,"nodeType":"UserDefinedTypeName","pathNode":{"id":6342,"name":"Status","nodeType":"IdentifierPath","referencedDeclaration":5661,"src":"15260:6:31"},"referencedDeclaration":5661,"src":"15260:6:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"visibility":"internal"}],"id":6349,"initialValue":{"expression":{"baseExpression":{"id":6345,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"15274:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6347,"indexExpression":{"id":6346,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"15283:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15274:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"15274:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"VariableDeclarationStatement","src":"15260:45:31"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6350,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15319:4:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6351,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"15327:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"None","nodeType":"MemberAccess","referencedDeclaration":5655,"src":"15327:11:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"15319:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6356,"nodeType":"IfStatement","src":"15315:38:31","trueBody":{"expression":{"hexValue":"4e6f6e65","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15347:6:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_8dfce459feaf97691d19cf3eb6893df6359803fdb7503df5d8cce17ab890999d","typeString":"literal_string \"None\""},"value":"None"},"functionReturnParameters":6335,"id":6355,"nodeType":"Return","src":"15340:13:31"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6357,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15367:4:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6358,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"15375:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Issued","nodeType":"MemberAccess","referencedDeclaration":5656,"src":"15375:13:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"15367:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6363,"nodeType":"IfStatement","src":"15363:42:31","trueBody":{"expression":{"hexValue":"497373756564","id":6361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15397:8:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a686acb5899baef515d77c6a430d6d5667d1dddd5ec27d530fe8e843ce18cc7","typeString":"literal_string \"Issued\""},"value":"Issued"},"functionReturnParameters":6335,"id":6362,"nodeType":"Return","src":"15390:15:31"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6364,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15419:4:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6365,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"15427:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Disputed","nodeType":"MemberAccess","referencedDeclaration":5657,"src":"15427:15:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"15419:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6370,"nodeType":"IfStatement","src":"15415:46:31","trueBody":{"expression":{"hexValue":"4469737075746564","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15451:10:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0bc49ccd4e06a0cdb9b3c0a3fa1750d59a03b1443ba3f828bcac9d6b8d76b8c","typeString":"literal_string \"Disputed\""},"value":"Disputed"},"functionReturnParameters":6335,"id":6369,"nodeType":"Return","src":"15444:17:31"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6371,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15475:4:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6372,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"15483:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Revoked","nodeType":"MemberAccess","referencedDeclaration":5658,"src":"15483:14:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"15475:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6377,"nodeType":"IfStatement","src":"15471:44:31","trueBody":{"expression":{"hexValue":"5265766f6b6564","id":6375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15506:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_78b54e92f33559320da4a0c1454741ea1f5c5fa31eb1dd482882c6df0231e478","typeString":"literal_string \"Revoked\""},"value":"Revoked"},"functionReturnParameters":6335,"id":6376,"nodeType":"Return","src":"15499:16:31"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6378,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15529:4:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6379,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"15537:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Suspended","nodeType":"MemberAccess","referencedDeclaration":5659,"src":"15537:16:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"15529:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6384,"nodeType":"IfStatement","src":"15525:48:31","trueBody":{"expression":{"hexValue":"53757370656e646564","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15562:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_b88e9907435321e6581899d972ba792bed830025bda5b4ef2a8b001ff164e263","typeString":"literal_string \"Suspended\""},"value":"Suspended"},"functionReturnParameters":6335,"id":6383,"nodeType":"Return","src":"15555:18:31"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6385,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15587:4:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6386,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"15595:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Expired","nodeType":"MemberAccess","referencedDeclaration":5660,"src":"15595:14:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"15587:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6391,"nodeType":"IfStatement","src":"15583:44:31","trueBody":{"expression":{"hexValue":"45787069726564","id":6389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15618:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13","typeString":"literal_string \"Expired\""},"value":"Expired"},"functionReturnParameters":6335,"id":6390,"nodeType":"Return","src":"15611:16:31"}},{"expression":{"hexValue":"4572726f72","id":6392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15644:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1","typeString":"literal_string \"Error\""},"value":"Error"},"functionReturnParameters":6335,"id":6393,"nodeType":"Return","src":"15637:14:31"}]},"documentation":{"id":6328,"nodeType":"StructuredDocumentation","src":"14852:229:31","text":" @notice Get the status of a Verifiable Credential\n @param vc The verifiable Credential\n @return status Verifiable credential Status: None, Issued, Disputed, Revoked, Suspended, Expired"},"functionSelector":"c0d506d6","id":6395,"implemented":true,"kind":"function","modifiers":[],"name":"getVCStatus","nameLocation":"15095:11:31","nodeType":"FunctionDefinition","parameters":{"id":6332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6331,"mutability":"mutable","name":"vc","nameLocation":"15146:2:31","nodeType":"VariableDeclaration","scope":6395,"src":"15107:41:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":6330,"nodeType":"UserDefinedTypeName","pathNode":{"id":6329,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"15107:31:31"},"referencedDeclaration":7312,"src":"15107:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"}],"src":"15106:43:31"},"returnParameters":{"id":6335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6395,"src":"15195:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6333,"name":"string","nodeType":"ElementaryTypeName","src":"15195:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15194:15:31"},"scope":7241,"src":"15086:572:31","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6621,"nodeType":"Block","src":"16284:2419:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6408,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"16323:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6409,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"16336:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16336:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6407,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"16315:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16315:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6412,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"16369:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"16369:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"16369:36:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6415,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"16409:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16409:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16369:52:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16315:106:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2073656e646572206d757374206265207468652063726564656e7469616c5375626a6563742061646472657373","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16435:56:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_991995f99bb432f025de88f8f62466096976af05cf274093f61a137b02eab584","typeString":"literal_string \"KRBToken: sender must be the credentialSubject address\""},"value":"KRBToken: sender must be the credentialSubject address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_991995f99bb432f025de88f8f62466096976af05cf274093f61a137b02eab584","typeString":"literal_string \"KRBToken: sender must be the credentialSubject address\""}],"id":6406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16294:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16294:207:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6421,"nodeType":"ExpressionStatement","src":"16294:207:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16533:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"16533:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6425,"name":"minPriceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"16546:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16533:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206d73672e76616c7565206d7573742062652067726561746572207468616e206d696e5072696365546f4973737565","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16575:58:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_19fbd3859058090876c7379a139a68075260c19b49b652a8115d9a2284a56bb2","typeString":"literal_string \"KRBToken: msg.value must be greater than minPriceToIssue\""},"value":"KRBToken: msg.value must be greater than minPriceToIssue"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19fbd3859058090876c7379a139a68075260c19b49b652a8115d9a2284a56bb2","typeString":"literal_string \"KRBToken: msg.value must be greater than minPriceToIssue\""}],"id":6422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16512:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16512:131:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6429,"nodeType":"ExpressionStatement","src":"16512:131:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6431,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16674:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"16674:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6433,"name":"maxPriceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"16687:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16674:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206d73672e76616c7565206d757374206265206c657373207468616e206d61785072696365546f4973737565","id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16716:55:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_80adf7fdd8ed453748d6e9747b1b1855d9e9219e68346041dc4ac43505e97331","typeString":"literal_string \"KRBToken: msg.value must be less than maxPriceToIssue\""},"value":"KRBToken: msg.value must be less than maxPriceToIssue"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_80adf7fdd8ed453748d6e9747b1b1855d9e9219e68346041dc4ac43505e97331","typeString":"literal_string \"KRBToken: msg.value must be less than maxPriceToIssue\""}],"id":6430,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16653:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16653:128:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6437,"nodeType":"ExpressionStatement","src":"16653:128:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6439,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"16812:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"16812:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7282,"src":"16812:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16842:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"16842:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16812:39:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206d73672e76616c756520646f6573206e6f74206d617463682063726564656e7469616c5375626a6563742e7072696365","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16865:60:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_008d3f233664fb495b27bd80e2a167c986f5e4d1a83de1124a0fbd174d10a58b","typeString":"literal_string \"KRBToken: msg.value does not match credentialSubject.price\""},"value":"KRBToken: msg.value does not match credentialSubject.price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_008d3f233664fb495b27bd80e2a167c986f5e4d1a83de1124a0fbd174d10a58b","typeString":"literal_string \"KRBToken: msg.value does not match credentialSubject.price\""}],"id":6438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16791:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16791:144:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6447,"nodeType":"ExpressionStatement","src":"16791:144:31"},{"assignments":[6449],"declarations":[{"constant":false,"id":6449,"mutability":"mutable","name":"uuid","nameLocation":"16954:4:31","nodeType":"VariableDeclaration","scope":6621,"src":"16946:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6448,"name":"uint256","nodeType":"ElementaryTypeName","src":"16946:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6453,"initialValue":{"arguments":[{"id":6451,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"16969:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":6450,"name":"getUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"16961:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (uint256)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16961:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16946:26:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6455,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17015:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"17015:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"17015:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6460,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17089:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"expression":{"id":6458,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"17054:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getVerifiableCredential","nodeType":"MemberAccess","referencedDeclaration":7613,"src":"17054:34:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (bytes32)"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17054:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6462,"name":"proofValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"17106:10:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6454,"name":"validateSignedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"16983:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory) view"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16983:143:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6464,"nodeType":"ExpressionStatement","src":"16983:143:31"},{"expression":{"arguments":[{"id":6468,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17159:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"expression":{"id":6465,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"17137:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"validateVC","nodeType":"MemberAccess","referencedDeclaration":7411,"src":"17137:21:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$__$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) view"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17137:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6470,"nodeType":"ExpressionStatement","src":"17137:25:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6472,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"17194:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6474,"indexExpression":{"id":6473,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"17203:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17194:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"17194:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6476,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"17229:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"None","nodeType":"MemberAccess","referencedDeclaration":5655,"src":"17229:11:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"17194:46:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2056657269666961626c652043726564656e7469616c206861736820616c7265616479206265656e20697373756564","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17254:58:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_11adc1742b89d376db148ee1423253ca8ce5bccf18c29152e79d450916181b73","typeString":"literal_string \"KRBToken: Verifiable Credential hash already been issued\""},"value":"KRBToken: Verifiable Credential hash already been issued"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11adc1742b89d376db148ee1423253ca8ce5bccf18c29152e79d450916181b73","typeString":"literal_string \"KRBToken: Verifiable Credential hash already been issued\""}],"id":6471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17173:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17173:149:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6481,"nodeType":"ExpressionStatement","src":"17173:149:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"expression":{"id":6484,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17363:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"17363:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"17363:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6483,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"17353:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17353:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6488,"name":"minBalanceToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"17393:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17353:57:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2069737375657220646f6573206e6f74206861766520656e6f7567682062616c616e6365","id":6490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17424:47:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c09dfbc593af863f0f68d921742e69677dba2b17f7d0fef75c5f7d53e2a63fc","typeString":"literal_string \"KRBToken: issuer does not have enough balance\""},"value":"KRBToken: issuer does not have enough balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7c09dfbc593af863f0f68d921742e69677dba2b17f7d0fef75c5f7d53e2a63fc","typeString":"literal_string \"KRBToken: issuer does not have enough balance\""}],"id":6482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17332:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17332:149:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6492,"nodeType":"ExpressionStatement","src":"17332:149:31"},{"assignments":[6494],"declarations":[{"constant":false,"id":6494,"mutability":"mutable","name":"_stake","nameLocation":"17500:6:31","nodeType":"VariableDeclaration","scope":6621,"src":"17492:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6493,"name":"uint256","nodeType":"ElementaryTypeName","src":"17492:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6503,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6495,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17509:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"17509:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"17509:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17538:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6499,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"17542:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17542:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17538:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17509:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17492:60:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"17583:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6506,"name":"minStakeToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"17593:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17583:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6508,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"17612:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6509,"name":"maxStakeToIssue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"17622:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17612:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17583:54:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a207374616b65206d757374206265206265747765656e206d696e5374616b65546f497373756520616e64206d61785374616b65546f4973737565","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17651:69:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_61c878cc2073e2c17eaedc304e8e908cfabe225be81b30fcebd2592845affef1","typeString":"literal_string \"KRBToken: stake must be between minStakeToIssue and maxStakeToIssue\""},"value":"KRBToken: stake must be between minStakeToIssue and maxStakeToIssue"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61c878cc2073e2c17eaedc304e8e908cfabe225be81b30fcebd2592845affef1","typeString":"literal_string \"KRBToken: stake must be between minStakeToIssue and maxStakeToIssue\""}],"id":6504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17562:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17562:168:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6514,"nodeType":"ExpressionStatement","src":"17562:168:31"},{"documentation":"@dev Create the stake for the issuer","expression":{"arguments":[{"expression":{"expression":{"id":6516,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17795:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"17795:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"17795:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6519,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"17822:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6515,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"17789:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17789:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6521,"nodeType":"ExpressionStatement","src":"17789:40:31"},{"expression":{"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6522,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"17839:6:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6526,"indexExpression":{"expression":{"expression":{"id":6523,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17846:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"17846:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"17846:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:33:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6533,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"17926:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6527,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"17875:6:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6531,"indexExpression":{"expression":{"expression":{"id":6528,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17882:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"17882:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"17882:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17875:33:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4830,"src":"17875:50:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17875:58:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17839:94:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6536,"nodeType":"ExpressionStatement","src":"17839:94:31"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17963:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17955:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6538,"name":"address","nodeType":"ElementaryTypeName","src":"17955:7:31","typeDescriptions":{}}},"id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17955:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":6542,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17967:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"17967:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"17967:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6545,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"17994:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6537,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"17948:6:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17948:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6547,"nodeType":"EmitStatement","src":"17943:58:31"},{"expression":{"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6548,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"18011:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6550,"indexExpression":{"id":6549,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"18020:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18011:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6552,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"18043:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Issued","nodeType":"MemberAccess","referencedDeclaration":5656,"src":"18043:13:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},{"hexValue":"307830","id":6554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18058:3:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6551,"name":"VerifiableData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"18028:14:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VerifiableData_$5667_storage_ptr_$","typeString":"type(struct KRBTokenV01.VerifiableData storage pointer)"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18028:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_memory_ptr","typeString":"struct KRBTokenV01.VerifiableData memory"}},"src":"18011:51:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6557,"nodeType":"ExpressionStatement","src":"18011:51:31"},{"eventCall":{"arguments":[{"id":6559,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"18084:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6560,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"18090:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":6558,"name":"Issued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"18077:6:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$__$","typeString":"function (uint256,struct VCTypesV01.VerifiableCredential memory)"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18077:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6562,"nodeType":"EmitStatement","src":"18072:21:31"},{"assignments":[6564],"declarations":[{"constant":false,"id":6564,"mutability":"mutable","name":"_reward","nameLocation":"18135:7:31","nodeType":"VariableDeclaration","scope":6621,"src":"18127:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6563,"name":"uint256","nodeType":"ElementaryTypeName","src":"18127:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6572,"initialValue":{"arguments":[{"id":6567,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"18179:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":6568,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"18199:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"18199:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"trust","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"18199:26:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":6565,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"18145:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReward","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"18145:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18145:90:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18127:108:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6574,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"18251:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"18251:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"18251:36:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6577,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"18289:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6573,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"18245:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18245:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6579,"nodeType":"ExpressionStatement","src":"18245:52:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6581,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"18313:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"18313:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"18313:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6584,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"18340:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6580,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"18307:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18307:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6586,"nodeType":"ExpressionStatement","src":"18307:41:31"},{"assignments":[6588],"declarations":[{"constant":false,"id":6588,"mutability":"mutable","name":"_fee","nameLocation":"18394:4:31","nodeType":"VariableDeclaration","scope":6621,"src":"18386:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6587,"name":"uint256","nodeType":"ElementaryTypeName","src":"18386:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6600,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":6593,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"18462:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"18462:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7282,"src":"18462:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6596,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"18490:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6591,"name":"SafeMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"18438:19:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMathUpgradeable_$4966_$","typeString":"type(library SafeMathUpgradeable)"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4860,"src":"18438:23:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18438:66:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313030","id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18518:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"expression":{"id":6589,"name":"SafeMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"18401:19:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMathUpgradeable_$4966_$","typeString":"type(library SafeMathUpgradeable)"}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"18401:23:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18401:130:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18386:145:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6602,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"18556:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"18556:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"18556:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6608,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"18597:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":6605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18583:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"18583:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4845,"src":"18583:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18583:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6601,"name":"_asyncTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"18541:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18541:62:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6611,"nodeType":"ExpressionStatement","src":"18541:62:31"},{"expression":{"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6612,"name":"feesAvailableForWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"18613:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6615,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"18669:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6613,"name":"feesAvailableForWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"18640:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4830,"src":"18640:28:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18640:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18613:61:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6618,"nodeType":"ExpressionStatement","src":"18613:61:31"},{"expression":{"hexValue":"74727565","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18692:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6405,"id":6620,"nodeType":"Return","src":"18685:11:31"}]},"documentation":{"id":6396,"nodeType":"StructuredDocumentation","src":"15664:475:31","text":" @notice Register a Verifiable Credential\n @dev Calculates and distributes the ETH fee as percentage of price\n Formula:  fee = price * feePercentage %\n @param vc The verifiable Credential\n @param proofValue EIP712-VC proofValue\n Requirements:\n - proofValue must be the Issuer's signature of the VC\n - sender must be the credentialSubject address\n - msg.value must be greater than minPriceToIssue"},"functionSelector":"dec9cafe","id":6622,"implemented":true,"kind":"function","modifiers":[],"name":"registerVC","nameLocation":"16153:10:31","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"vc","nameLocation":"16212:2:31","nodeType":"VariableDeclaration","scope":6622,"src":"16173:41:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":6398,"nodeType":"UserDefinedTypeName","pathNode":{"id":6397,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"16173:31:31"},"referencedDeclaration":7312,"src":"16173:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"},{"constant":false,"id":6401,"mutability":"mutable","name":"proofValue","nameLocation":"16237:10:31","nodeType":"VariableDeclaration","scope":6622,"src":"16224:23:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6400,"name":"bytes","nodeType":"ElementaryTypeName","src":"16224:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16163:90:31"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6622,"src":"16278:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6403,"name":"bool","nodeType":"ElementaryTypeName","src":"16278:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16277:6:31"},"scope":7241,"src":"16144:2559:31","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":6730,"nodeType":"Block","src":"19072:975:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6635,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"19111:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6636,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"19124:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19124:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6634,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"19103:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19103:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6639,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19157:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"19157:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"19157:36:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6642,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"19197:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19197:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19157:52:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19103:106:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2073656e646572206d757374206265207468652063726564656e7469616c5375626a6563742061646472657373","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19223:56:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_991995f99bb432f025de88f8f62466096976af05cf274093f61a137b02eab584","typeString":"literal_string \"KRBToken: sender must be the credentialSubject address\""},"value":"KRBToken: sender must be the credentialSubject address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_991995f99bb432f025de88f8f62466096976af05cf274093f61a137b02eab584","typeString":"literal_string \"KRBToken: sender must be the credentialSubject address\""}],"id":6633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19082:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19082:207:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6648,"nodeType":"ExpressionStatement","src":"19082:207:31"},{"assignments":[6650],"declarations":[{"constant":false,"id":6650,"mutability":"mutable","name":"uuid","nameLocation":"19308:4:31","nodeType":"VariableDeclaration","scope":6730,"src":"19300:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6649,"name":"uint256","nodeType":"ElementaryTypeName","src":"19300:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6654,"initialValue":{"arguments":[{"id":6652,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19323:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":6651,"name":"getUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"19315:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (uint256)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19315:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19300:26:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6656,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"19358:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6658,"indexExpression":{"id":6657,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"19367:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19358:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"19358:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6660,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"19393:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Issued","nodeType":"MemberAccess","referencedDeclaration":5656,"src":"19393:13:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"19358:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a207374617465206973206e6f7420497373756564","id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19420:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_59915efbd9b9ea0883ab9a80b80cf8e069efd5c55ae58df7a4d817ffeb895d99","typeString":"literal_string \"KRBToken: state is not Issued\""},"value":"KRBToken: state is not Issued"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59915efbd9b9ea0883ab9a80b80cf8e069efd5c55ae58df7a4d817ffeb895d99","typeString":"literal_string \"KRBToken: state is not Issued\""}],"id":6655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19337:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19337:124:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6665,"nodeType":"ExpressionStatement","src":"19337:124:31"},{"expression":{"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6666,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"19472:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6668,"indexExpression":{"id":6667,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"19481:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19472:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"19472:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6670,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"19506:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"None","nodeType":"MemberAccess","referencedDeclaration":5655,"src":"19506:11:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"19472:45:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"id":6673,"nodeType":"ExpressionStatement","src":"19472:45:31"},{"eventCall":{"arguments":[{"id":6675,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"19540:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6676,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"19546:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6674,"name":"Deleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"19532:7:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19532:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6678,"nodeType":"EmitStatement","src":"19527:26:31"},{"assignments":[6680],"declarations":[{"constant":false,"id":6680,"mutability":"mutable","name":"_stake","nameLocation":"19572:6:31","nodeType":"VariableDeclaration","scope":6730,"src":"19564:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6679,"name":"uint256","nodeType":"ElementaryTypeName","src":"19564:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6689,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6681,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19581:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"19581:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"19581:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19610:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6685,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"19614:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19614:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"19610:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19581:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19564:60:31"},{"assignments":[6691],"declarations":[{"constant":false,"id":6691,"mutability":"mutable","name":"_reward","nameLocation":"19642:7:31","nodeType":"VariableDeclaration","scope":6730,"src":"19634:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6690,"name":"uint256","nodeType":"ElementaryTypeName","src":"19634:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6699,"initialValue":{"arguments":[{"id":6694,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"19686:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":6695,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19706:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"19706:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"trust","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"19706:26:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":6692,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"19652:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReward","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"19652:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19652:90:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19634:108:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6701,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19794:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"19794:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"19794:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6704,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"19821:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6700,"name":"_burnStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"19783:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19783:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6706,"nodeType":"ExpressionStatement","src":"19783:45:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6708,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19844:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"19844:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"19844:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6711,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"19871:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6707,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"19838:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19838:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6713,"nodeType":"ExpressionStatement","src":"19838:40:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6715,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19921:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"19921:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"19921:36:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6718,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"19959:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6714,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"19915:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19915:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6720,"nodeType":"ExpressionStatement","src":"19915:52:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6722,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19983:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"19983:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"19983:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6725,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"20010:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6721,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"19977:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19977:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6727,"nodeType":"ExpressionStatement","src":"19977:41:31"},{"expression":{"hexValue":"74727565","id":6728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20036:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6632,"id":6729,"nodeType":"Return","src":"20029:11:31"}]},"documentation":{"id":6623,"nodeType":"StructuredDocumentation","src":"18709:231:31","text":" @notice Delete a Verifiable Credential\n @param vc The verifiable Credential\n @param reason Reason for deleting\n Requirements:\n -  sender must be the credentialSubject address"},"functionSelector":"716f4d90","id":6731,"implemented":true,"kind":"function","modifiers":[],"name":"deleteVC","nameLocation":"18954:8:31","nodeType":"FunctionDefinition","parameters":{"id":6629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"vc","nameLocation":"19011:2:31","nodeType":"VariableDeclaration","scope":6731,"src":"18972:41:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":6625,"nodeType":"UserDefinedTypeName","pathNode":{"id":6624,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"18972:31:31"},"referencedDeclaration":7312,"src":"18972:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"},{"constant":false,"id":6628,"mutability":"mutable","name":"reason","nameLocation":"19037:6:31","nodeType":"VariableDeclaration","scope":6731,"src":"19023:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6627,"name":"string","nodeType":"ElementaryTypeName","src":"19023:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18962:87:31"},"returnParameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6731,"src":"19066:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6630,"name":"bool","nodeType":"ElementaryTypeName","src":"19066:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19065:6:31"},"scope":7241,"src":"18945:1102:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6833,"nodeType":"Block","src":"20405:901:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6743,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"20436:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"20436:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"20436:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6746,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"20465:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20465:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20436:41:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2073656e646572206d75737420626520746865206973737565722061646472657373","id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20491:45:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1882f1b1fc242a9895b5ba6cf731f897c919c3aa02c49eabd839b5af5f912a9e","typeString":"literal_string \"KRBToken: sender must be the issuer address\""},"value":"KRBToken: sender must be the issuer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1882f1b1fc242a9895b5ba6cf731f897c919c3aa02c49eabd839b5af5f912a9e","typeString":"literal_string \"KRBToken: sender must be the issuer address\""}],"id":6742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20415:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20415:131:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6751,"nodeType":"ExpressionStatement","src":"20415:131:31"},{"assignments":[6753],"declarations":[{"constant":false,"id":6753,"mutability":"mutable","name":"uuid","nameLocation":"20564:4:31","nodeType":"VariableDeclaration","scope":6833,"src":"20556:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6752,"name":"uint256","nodeType":"ElementaryTypeName","src":"20556:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6757,"initialValue":{"arguments":[{"id":6755,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"20579:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":6754,"name":"getUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"20571:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (uint256)"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20571:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20556:26:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6759,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"20614:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6761,"indexExpression":{"id":6760,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"20623:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20614:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"20614:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6763,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"20649:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Issued","nodeType":"MemberAccess","referencedDeclaration":5656,"src":"20649:13:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"20614:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a207374617465206973206e6f7420497373756564","id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20676:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_59915efbd9b9ea0883ab9a80b80cf8e069efd5c55ae58df7a4d817ffeb895d99","typeString":"literal_string \"KRBToken: state is not Issued\""},"value":"KRBToken: state is not Issued"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59915efbd9b9ea0883ab9a80b80cf8e069efd5c55ae58df7a4d817ffeb895d99","typeString":"literal_string \"KRBToken: state is not Issued\""}],"id":6758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20593:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20593:124:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6768,"nodeType":"ExpressionStatement","src":"20593:124:31"},{"expression":{"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6769,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"20728:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6771,"indexExpression":{"id":6770,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"20737:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20728:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"20728:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6773,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"20762:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Revoked","nodeType":"MemberAccess","referencedDeclaration":5658,"src":"20762:14:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"20728:48:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"id":6776,"nodeType":"ExpressionStatement","src":"20728:48:31"},{"eventCall":{"arguments":[{"id":6778,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"20799:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6779,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"20805:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6777,"name":"Revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"20791:7:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20791:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6781,"nodeType":"EmitStatement","src":"20786:26:31"},{"assignments":[6783],"declarations":[{"constant":false,"id":6783,"mutability":"mutable","name":"_stake","nameLocation":"20831:6:31","nodeType":"VariableDeclaration","scope":6833,"src":"20823:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6782,"name":"uint256","nodeType":"ElementaryTypeName","src":"20823:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6792,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6784,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"20840:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"20840:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"20840:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20869:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6788,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"20873:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20873:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"20869:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20840:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20823:60:31"},{"assignments":[6794],"declarations":[{"constant":false,"id":6794,"mutability":"mutable","name":"_reward","nameLocation":"20901:7:31","nodeType":"VariableDeclaration","scope":6833,"src":"20893:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6793,"name":"uint256","nodeType":"ElementaryTypeName","src":"20893:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6802,"initialValue":{"arguments":[{"id":6797,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"20945:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":6798,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"20965:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"20965:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"trust","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"20965:26:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":6795,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"20911:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReward","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"20911:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20911:90:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20893:108:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6804,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"21053:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"21053:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"21053:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6807,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"21080:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6803,"name":"_burnStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"21042:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21042:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6809,"nodeType":"ExpressionStatement","src":"21042:45:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6811,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"21103:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"21103:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"21103:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6814,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"21130:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6810,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"21097:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21097:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6816,"nodeType":"ExpressionStatement","src":"21097:40:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6818,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"21180:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"21180:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"21180:36:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6821,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"21218:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6817,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"21174:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21174:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6823,"nodeType":"ExpressionStatement","src":"21174:52:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6825,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"21242:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"21242:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"21242:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6828,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"21269:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6824,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"21236:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21236:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6830,"nodeType":"ExpressionStatement","src":"21236:41:31"},{"expression":{"hexValue":"74727565","id":6831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21295:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6741,"id":6832,"nodeType":"Return","src":"21288:11:31"}]},"documentation":{"id":6732,"nodeType":"StructuredDocumentation","src":"20053:220:31","text":" @notice Revoke a Verifiable Credential\n @param vc The verifiable Credential\n @param reason Reason for revoking\n Requirements:\n -  sender must be the issuer address"},"functionSelector":"ca2a8cfc","id":6834,"implemented":true,"kind":"function","modifiers":[],"name":"revokeVC","nameLocation":"20287:8:31","nodeType":"FunctionDefinition","parameters":{"id":6738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"vc","nameLocation":"20344:2:31","nodeType":"VariableDeclaration","scope":6834,"src":"20305:41:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":6734,"nodeType":"UserDefinedTypeName","pathNode":{"id":6733,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"20305:31:31"},"referencedDeclaration":7312,"src":"20305:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"},{"constant":false,"id":6737,"mutability":"mutable","name":"reason","nameLocation":"20370:6:31","nodeType":"VariableDeclaration","scope":6834,"src":"20356:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6736,"name":"string","nodeType":"ElementaryTypeName","src":"20356:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20295:87:31"},"returnParameters":{"id":6741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6834,"src":"20399:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6739,"name":"bool","nodeType":"ElementaryTypeName","src":"20399:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20398:6:31"},"scope":7241,"src":"20278:1028:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6929,"nodeType":"Block","src":"21668:865:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6846,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"21699:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"21699:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"21699:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6849,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"21728:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21728:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21699:41:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2073656e646572206d75737420626520746865206973737565722061646472657373","id":6852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21754:45:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1882f1b1fc242a9895b5ba6cf731f897c919c3aa02c49eabd839b5af5f912a9e","typeString":"literal_string \"KRBToken: sender must be the issuer address\""},"value":"KRBToken: sender must be the issuer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1882f1b1fc242a9895b5ba6cf731f897c919c3aa02c49eabd839b5af5f912a9e","typeString":"literal_string \"KRBToken: sender must be the issuer address\""}],"id":6845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21678:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21678:131:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6854,"nodeType":"ExpressionStatement","src":"21678:131:31"},{"assignments":[6856],"declarations":[{"constant":false,"id":6856,"mutability":"mutable","name":"uuid","nameLocation":"21827:4:31","nodeType":"VariableDeclaration","scope":6929,"src":"21819:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"21819:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6860,"initialValue":{"arguments":[{"id":6858,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"21842:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":6857,"name":"getUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"21834:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (uint256)"}},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21834:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21819:26:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6862,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"21876:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6864,"indexExpression":{"id":6863,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"21885:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21876:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"21876:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6866,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"21911:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Issued","nodeType":"MemberAccess","referencedDeclaration":5656,"src":"21911:13:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"21876:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a207374617465206973206e6f7420497373756564","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21938:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_59915efbd9b9ea0883ab9a80b80cf8e069efd5c55ae58df7a4d817ffeb895d99","typeString":"literal_string \"KRBToken: state is not Issued\""},"value":"KRBToken: state is not Issued"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59915efbd9b9ea0883ab9a80b80cf8e069efd5c55ae58df7a4d817ffeb895d99","typeString":"literal_string \"KRBToken: state is not Issued\""}],"id":6861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21855:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21855:124:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6871,"nodeType":"ExpressionStatement","src":"21855:124:31"},{"expression":{"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6872,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"21990:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6874,"indexExpression":{"id":6873,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"21999:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21990:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"21990:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6876,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"22024:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Suspended","nodeType":"MemberAccess","referencedDeclaration":5659,"src":"22024:16:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"21990:50:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"id":6879,"nodeType":"ExpressionStatement","src":"21990:50:31"},{"eventCall":{"arguments":[{"id":6881,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"22065:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6882,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"22071:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6880,"name":"Suspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"22055:9:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22055:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6884,"nodeType":"EmitStatement","src":"22050:28:31"},{"assignments":[6886],"declarations":[{"constant":false,"id":6886,"mutability":"mutable","name":"_stake","nameLocation":"22097:6:31","nodeType":"VariableDeclaration","scope":6929,"src":"22089:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6885,"name":"uint256","nodeType":"ElementaryTypeName","src":"22089:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6895,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6887,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"22106:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"22106:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"22106:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22135:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6891,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"22139:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22139:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"22135:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22106:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22089:60:31"},{"assignments":[6897],"declarations":[{"constant":false,"id":6897,"mutability":"mutable","name":"_reward","nameLocation":"22167:7:31","nodeType":"VariableDeclaration","scope":6929,"src":"22159:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6896,"name":"uint256","nodeType":"ElementaryTypeName","src":"22159:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6905,"initialValue":{"arguments":[{"id":6900,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"22211:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":6901,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"22231:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"22231:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"trust","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"22231:26:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":6898,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"22177:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReward","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"22177:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22177:90:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22159:108:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6907,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"22319:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"22319:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"22319:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6910,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"22346:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6906,"name":"_burnStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"22308:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22308:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6912,"nodeType":"ExpressionStatement","src":"22308:45:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6914,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"22369:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"22369:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"22369:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6917,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"22396:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6913,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"22363:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22363:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6919,"nodeType":"ExpressionStatement","src":"22363:40:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6921,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"22458:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"22458:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"22458:36:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6924,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"22496:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6920,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"22452:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22452:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6926,"nodeType":"ExpressionStatement","src":"22452:52:31"},{"expression":{"hexValue":"74727565","id":6927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22522:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6844,"id":6928,"nodeType":"Return","src":"22515:11:31"}]},"documentation":{"id":6835,"nodeType":"StructuredDocumentation","src":"21312:223:31","text":" @notice Suspend a Verifiable Credential\n @param vc The verifiable Credential\n @param reason Reason for suspending\n Requirements:\n -  sender must be the issuer address"},"functionSelector":"ce556f9d","id":6930,"implemented":true,"kind":"function","modifiers":[],"name":"suspendVC","nameLocation":"21549:9:31","nodeType":"FunctionDefinition","parameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6838,"mutability":"mutable","name":"vc","nameLocation":"21607:2:31","nodeType":"VariableDeclaration","scope":6930,"src":"21568:41:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":6837,"nodeType":"UserDefinedTypeName","pathNode":{"id":6836,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"21568:31:31"},"referencedDeclaration":7312,"src":"21568:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"},{"constant":false,"id":6840,"mutability":"mutable","name":"reason","nameLocation":"21633:6:31","nodeType":"VariableDeclaration","scope":6930,"src":"21619:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6839,"name":"string","nodeType":"ElementaryTypeName","src":"21619:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21558:87:31"},"returnParameters":{"id":6844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6930,"src":"21662:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6842,"name":"bool","nodeType":"ElementaryTypeName","src":"21662:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21661:6:31"},"scope":7241,"src":"21540:993:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6998,"nodeType":"Block","src":"22766:539:31","statements":[{"assignments":[6940],"declarations":[{"constant":false,"id":6940,"mutability":"mutable","name":"uuid","nameLocation":"22784:4:31","nodeType":"VariableDeclaration","scope":6998,"src":"22776:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6939,"name":"uint256","nodeType":"ElementaryTypeName","src":"22776:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6944,"initialValue":{"arguments":[{"id":6942,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"22799:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":6941,"name":"getUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"22791:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (uint256)"}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22791:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22776:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6945,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22817:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"22817:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"expression":{"id":6947,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"22835:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"22835:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"exp","nodeType":"MemberAccess","referencedDeclaration":7286,"src":"22835:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22817:42:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6989,"nodeType":"IfStatement","src":"22813:425:31","trueBody":{"id":6988,"nodeType":"Block","src":"22861:377:31","statements":[{"assignments":[6952],"declarations":[{"constant":false,"id":6952,"mutability":"mutable","name":"_stake","nameLocation":"22883:6:31","nodeType":"VariableDeclaration","scope":6988,"src":"22875:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6951,"name":"uint256","nodeType":"ElementaryTypeName","src":"22875:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6961,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6953,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"22892:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"22892:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"22892:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22921:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6957,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"22925:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22925:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"22921:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22892:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22875:60:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6963,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"22994:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"22994:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"22994:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6966,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"23021:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6962,"name":"_burnStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"22983:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22983:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6968,"nodeType":"ExpressionStatement","src":"22983:45:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":6970,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"23048:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"23048:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":6972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"23048:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6973,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"23075:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6969,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"23042:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23042:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6975,"nodeType":"ExpressionStatement","src":"23042:40:31"},{"expression":{"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6976,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"23147:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":6978,"indexExpression":{"id":6977,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"23156:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23147:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":6979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"23147:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6980,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"23181:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Expired","nodeType":"MemberAccess","referencedDeclaration":5660,"src":"23181:14:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"23147:48:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"id":6983,"nodeType":"ExpressionStatement","src":"23147:48:31"},{"eventCall":{"arguments":[{"id":6985,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"23222:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6984,"name":"Expired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"23214:7:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23214:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6987,"nodeType":"EmitStatement","src":"23209:18:31"}]}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6990,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"23255:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"23255:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"expression":{"id":6992,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"23273:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":6993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"23273:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":6994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"exp","nodeType":"MemberAccess","referencedDeclaration":7286,"src":"23273:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23255:42:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23254:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6938,"id":6997,"nodeType":"Return","src":"23247:51:31"}]},"documentation":{"id":6931,"nodeType":"StructuredDocumentation","src":"22539:116:31","text":" @notice Mark a Verifiable Credential as Expired\n @param vc The verifiable Credential"},"functionSelector":"888bb7b5","id":6999,"implemented":true,"kind":"function","modifiers":[],"name":"expiredVC","nameLocation":"22669:9:31","nodeType":"FunctionDefinition","parameters":{"id":6935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6934,"mutability":"mutable","name":"vc","nameLocation":"22718:2:31","nodeType":"VariableDeclaration","scope":6999,"src":"22679:41:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":6933,"nodeType":"UserDefinedTypeName","pathNode":{"id":6932,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"22679:31:31"},"referencedDeclaration":7312,"src":"22679:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"}],"src":"22678:43:31"},"returnParameters":{"id":6938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6999,"src":"22756:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6936,"name":"bool","nodeType":"ElementaryTypeName","src":"22756:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22755:6:31"},"scope":7241,"src":"22660:645:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7204,"nodeType":"Block","src":"23740:2067:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":7017,"name":"disputeVC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"23792:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_type","nodeType":"MemberAccess","referencedDeclaration":7296,"src":"23792:15:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7015,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"23781:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"23781:10:31","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23781:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7014,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"23771:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23771:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"5b2256657269666961626c6543726564656e7469616c222c224469737075746543726564656e7469616c225d","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23871:46:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_65e8e0569f667d83ff560a291a95fc03ec0722346b0fbfc084e161f7c9261e72","typeString":"literal_string \"[\"VerifiableCredential\",\"DisputeCredential\"]\""},"value":"[\"VerifiableCredential\",\"DisputeCredential\"]"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65e8e0569f667d83ff560a291a95fc03ec0722346b0fbfc084e161f7c9261e72","typeString":"literal_string \"[\"VerifiableCredential\",\"DisputeCredential\"]\""}],"expression":{"id":7022,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"23860:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"23860:10:31","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23860:58:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7021,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"23829:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23829:107:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23771:165:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206469737075746520636c61696d2074797065206d757374206265204469737075746543726564656e7469616c","id":7028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23950:56:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac3e225f52da57937dca4729ff7a9b2aef9f1e1bb77e4624f55be8081627dee6","typeString":"literal_string \"KRBToken: dispute claim type must be DisputeCredential\""},"value":"KRBToken: dispute claim type must be DisputeCredential"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac3e225f52da57937dca4729ff7a9b2aef9f1e1bb77e4624f55be8081627dee6","typeString":"literal_string \"KRBToken: dispute claim type must be DisputeCredential\""}],"id":7013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23750:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23750:266:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7030,"nodeType":"ExpressionStatement","src":"23750:266:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7032,"name":"disputeVC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"24047:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"24047:16:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":7034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"24047:32:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7035,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[5948],"referencedDeclaration":5948,"src":"24083:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24083:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24047:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a20697373756572206d7573742062652074686520476f7665726e2061646472657373","id":7038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24109:45:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_6940c565f3d71bd3368fee296cb1e459b0065bdd2e5335e6830f498d1bc2458b","typeString":"literal_string \"KRBToken: issuer must be the Govern address\""},"value":"KRBToken: issuer must be the Govern address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6940c565f3d71bd3368fee296cb1e459b0065bdd2e5335e6830f498d1bc2458b","typeString":"literal_string \"KRBToken: issuer must be the Govern address\""}],"id":7031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24026:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24026:138:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7040,"nodeType":"ExpressionStatement","src":"24026:138:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"expression":{"id":7045,"name":"disputeVC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"24216:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"24216:27:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7266,"src":"24216:30:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7043,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24205:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"24205:10:31","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24205:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7042,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"24195:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24195:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"id":7053,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"24289:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7298,"src":"24289:5:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7051,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24278:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"24278:10:31","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24278:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7050,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"24268:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24268:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"24195:101:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206469737075746556432063726564656e7469616c5375626a6563742069642064696666657265732066726f6d205643206964","id":7058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24310:62:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a6e9e56cdc54e2c4c3fa43770fa86f5b2554ff1e5fa1184beda9231a57c0dc0","typeString":"literal_string \"KRBToken: disputeVC credentialSubject id differes from VC id\""},"value":"KRBToken: disputeVC credentialSubject id differes from VC id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a6e9e56cdc54e2c4c3fa43770fa86f5b2554ff1e5fa1184beda9231a57c0dc0","typeString":"literal_string \"KRBToken: disputeVC credentialSubject id differes from VC id\""}],"id":7041,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24174:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24174:208:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7060,"nodeType":"ExpressionStatement","src":"24174:208:31"},{"expression":{"arguments":[{"id":7064,"name":"disputeVC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"24415:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"expression":{"id":7061,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"24393:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"validateVC","nodeType":"MemberAccess","referencedDeclaration":7411,"src":"24393:21:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$__$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) view"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24393:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7066,"nodeType":"ExpressionStatement","src":"24393:32:31"},{"assignments":[7068],"declarations":[{"constant":false,"id":7068,"mutability":"mutable","name":"uuid","nameLocation":"24444:4:31","nodeType":"VariableDeclaration","scope":7204,"src":"24436:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7067,"name":"uint256","nodeType":"ElementaryTypeName","src":"24436:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7072,"initialValue":{"arguments":[{"id":7070,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"24459:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":7069,"name":"getUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"24451:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (uint256)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24451:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24436:26:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7074,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"24494:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":7076,"indexExpression":{"id":7075,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"24503:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24494:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":7077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"24494:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7078,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"24529:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"None","nodeType":"MemberAccess","referencedDeclaration":5655,"src":"24529:11:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"24494:46:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7081,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"24560:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":7083,"indexExpression":{"id":7082,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"24569:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24560:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":7084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"24560:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7085,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"24595:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Disputed","nodeType":"MemberAccess","referencedDeclaration":5657,"src":"24595:15:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"24560:50:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24494:116:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a20564320737461746520616c7265616479206469737075746564","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24624:37:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_68bf8498d45c2faa8674ac2e5b474e7bcc0195dc28826c452a373a323748a8ee","typeString":"literal_string \"KRBToken: VC state already disputed\""},"value":"KRBToken: VC state already disputed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68bf8498d45c2faa8674ac2e5b474e7bcc0195dc28826c452a373a323748a8ee","typeString":"literal_string \"KRBToken: VC state already disputed\""}],"id":7073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24473:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24473:198:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7091,"nodeType":"ExpressionStatement","src":"24473:198:31"},{"assignments":[7093],"declarations":[{"constant":false,"id":7093,"mutability":"mutable","name":"disputeUuid","nameLocation":"24690:11:31","nodeType":"VariableDeclaration","scope":7204,"src":"24682:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7092,"name":"uint256","nodeType":"ElementaryTypeName","src":"24682:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7097,"initialValue":{"arguments":[{"id":7095,"name":"disputeVC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"24712:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":7094,"name":"getUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"24704:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VCTypesV01.VerifiableCredential memory) pure returns (uint256)"}},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24704:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24682:40:31"},{"expression":{"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7098,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"24732:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":7100,"indexExpression":{"id":7099,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"24741:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24732:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":7101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"24732:31:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7102,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"24766:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Disputed","nodeType":"MemberAccess","referencedDeclaration":5657,"src":"24766:15:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"24732:49:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"id":7105,"nodeType":"ExpressionStatement","src":"24732:49:31"},{"expression":{"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7106,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"24791:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":7108,"indexExpression":{"id":7107,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"24800:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24791:14:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":7109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"disputedBy","nodeType":"MemberAccess","referencedDeclaration":5666,"src":"24791:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7110,"name":"disputeUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"24819:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24791:39:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7112,"nodeType":"ExpressionStatement","src":"24791:39:31"},{"eventCall":{"arguments":[{"id":7114,"name":"uuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"24854:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7115,"name":"disputeUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"24860:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7113,"name":"Disputed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"24845:8:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24845:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7117,"nodeType":"EmitStatement","src":"24840:32:31"},{"expression":{"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7118,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"24883:8:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifiableData_$5667_storage_$","typeString":"mapping(uint256 => struct KRBTokenV01.VerifiableData storage ref)"}},"id":7120,"indexExpression":{"id":7119,"name":"disputeUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"24892:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24883:21:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableData_$5667_storage","typeString":"struct KRBTokenV01.VerifiableData storage ref"}},"id":7121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"credentialStatus","nodeType":"MemberAccess","referencedDeclaration":5664,"src":"24883:38:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7122,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"24924:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5661_$","typeString":"type(enum KRBTokenV01.Status)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Issued","nodeType":"MemberAccess","referencedDeclaration":5656,"src":"24924:13:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"src":"24883:54:31","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5661","typeString":"enum KRBTokenV01.Status"}},"id":7125,"nodeType":"ExpressionStatement","src":"24883:54:31"},{"eventCall":{"arguments":[{"id":7127,"name":"disputeUuid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"24959:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7128,"name":"disputeVC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"24972:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}],"id":7126,"name":"Issued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"24952:6:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_struct$_VerifiableCredential_$7312_memory_ptr_$returns$__$","typeString":"function (uint256,struct VCTypesV01.VerifiableCredential memory)"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24952:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7130,"nodeType":"EmitStatement","src":"24947:35:31"},{"assignments":[7132],"declarations":[{"constant":false,"id":7132,"mutability":"mutable","name":"_stake","nameLocation":"25001:6:31","nodeType":"VariableDeclaration","scope":7204,"src":"24993:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7131,"name":"uint256","nodeType":"ElementaryTypeName","src":"24993:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7141,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7133,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"25010:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"25010:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"25010:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25039:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7137,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"25043:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25043:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"25039:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25010:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24993:60:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":7143,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"25108:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"25108:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":7145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"25108:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7146,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"25135:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7142,"name":"_burnStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"25097:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25097:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7148,"nodeType":"ExpressionStatement","src":"25097:45:31"},{"assignments":[7150],"declarations":[{"constant":false,"id":7150,"mutability":"mutable","name":"_reward","nameLocation":"25220:7:31","nodeType":"VariableDeclaration","scope":7204,"src":"25212:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7149,"name":"uint256","nodeType":"ElementaryTypeName","src":"25212:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7158,"initialValue":{"arguments":[{"id":7153,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"25264:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":7154,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"25284:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"25284:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"trust","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"25284:26:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":7151,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"25230:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReward","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"25230:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25230:90:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25212:108:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":7160,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"25336:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"25336:20:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"25336:36:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7163,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"25374:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7159,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"25330:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25330:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7165,"nodeType":"ExpressionStatement","src":"25330:52:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":7167,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"25398:2:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"25398:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":7169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"25398:25:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7170,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"25425:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7166,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"25392:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25392:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7172,"nodeType":"ExpressionStatement","src":"25392:41:31"},{"assignments":[7175],"declarations":[{"constant":false,"id":7175,"mutability":"mutable","name":"_disputeStake","nameLocation":"25485:13:31","nodeType":"VariableDeclaration","scope":7204,"src":"25477:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7174,"name":"uint256","nodeType":"ElementaryTypeName","src":"25477:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":"@dev Reward disputer","id":7184,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7176,"name":"disputeVC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"25501:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"25501:27:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"25501:33:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25549:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7180,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"25553:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25553:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"25549:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25501:62:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25477:86:31"},{"assignments":[7186],"declarations":[{"constant":false,"id":7186,"mutability":"mutable","name":"_disputeReward","nameLocation":"25581:14:31","nodeType":"VariableDeclaration","scope":7204,"src":"25573:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7185,"name":"uint256","nodeType":"ElementaryTypeName","src":"25573:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7194,"initialValue":{"arguments":[{"id":7189,"name":"_disputeStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"25632:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":7190,"name":"disputeVC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"25659:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"25659:27:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"trust","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"25659:33:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":7187,"name":"VCTypesV01","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"25598:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VCTypesV01_$7614_$","typeString":"type(library VCTypesV01)"}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReward","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"25598:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25598:104:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25573:129:31"},{"expression":{"arguments":[{"expression":{"expression":{"id":7196,"name":"disputeVC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"25718:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"25718:27:31","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"25718:43:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7199,"name":"_disputeReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7186,"src":"25763:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7195,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"25712:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25712:66:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7201,"nodeType":"ExpressionStatement","src":"25712:66:31"},{"expression":{"hexValue":"74727565","id":7202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25796:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7012,"id":7203,"nodeType":"Return","src":"25789:11:31"}]},"documentation":{"id":7000,"nodeType":"StructuredDocumentation","src":"23311:249:31","text":" @notice Called by DAO Govern arbitration to resolve a dispute\n @param vc The verifiable Credential\n @param disputeVC Dispute Credential\n Requirements:\n -  sender must be the DAO Govern address"},"functionSelector":"2a401e81","id":7205,"implemented":true,"kind":"function","modifiers":[{"id":7009,"kind":"modifierInvocation","modifierName":{"id":7008,"name":"onlyGovern","nodeType":"IdentifierPath","referencedDeclaration":5743,"src":"23714:10:31"},"nodeType":"ModifierInvocation","src":"23714:10:31"}],"name":"disputeVCByGovern","nameLocation":"23574:17:31","nodeType":"FunctionDefinition","parameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7003,"mutability":"mutable","name":"vc","nameLocation":"23640:2:31","nodeType":"VariableDeclaration","scope":7205,"src":"23601:41:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":7002,"nodeType":"UserDefinedTypeName","pathNode":{"id":7001,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"23601:31:31"},"referencedDeclaration":7312,"src":"23601:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"},{"constant":false,"id":7006,"mutability":"mutable","name":"disputeVC","nameLocation":"23691:9:31","nodeType":"VariableDeclaration","scope":7205,"src":"23652:48:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":7005,"nodeType":"UserDefinedTypeName","pathNode":{"id":7004,"name":"VCTypesV01.VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"23652:31:31"},"referencedDeclaration":7312,"src":"23652:31:31","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"}],"src":"23591:115:31"},"returnParameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7205,"src":"23734:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7010,"name":"bool","nodeType":"ElementaryTypeName","src":"23734:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23733:6:31"},"scope":7241,"src":"23565:2242:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7235,"nodeType":"Block","src":"26071:206:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7218,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"26089:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7219,"name":"feesAvailableForWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"26100:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26089:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26081:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26081:44:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7222,"nodeType":"ExpressionStatement","src":"26081:44:31"},{"documentation":"@dev Also prevents underflow","expression":{"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7223,"name":"feesAvailableForWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"26168:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7226,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"26224:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7224,"name":"feesAvailableForWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"26195:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4845,"src":"26195:28:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26195:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26168:64:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7229,"nodeType":"ExpressionStatement","src":"26168:64:31"},{"expression":{"arguments":[{"id":7231,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"26257:3:31","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7232,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"26262:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7230,"name":"_asyncTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"26242:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26242:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7234,"nodeType":"ExpressionStatement","src":"26242:28:31"}]},"documentation":{"id":7206,"nodeType":"StructuredDocumentation","src":"25813:132:31","text":" @notice Withdraw fees collected by the contract.\n Requirements:\n - Only the DAO govern can call this."},"functionSelector":"ad3b1b47","id":7236,"implemented":true,"kind":"function","modifiers":[{"id":7213,"kind":"modifierInvocation","modifierName":{"id":7212,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":1662,"src":"26035:12:31"},"nodeType":"ModifierInvocation","src":"26035:12:31"},{"id":7215,"kind":"modifierInvocation","modifierName":{"id":7214,"name":"onlyGovern","nodeType":"IdentifierPath","referencedDeclaration":5743,"src":"26056:10:31"},"nodeType":"ModifierInvocation","src":"26056:10:31"}],"name":"withdrawFees","nameLocation":"25959:12:31","nodeType":"FunctionDefinition","parameters":{"id":7211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7208,"mutability":"mutable","name":"_to","nameLocation":"25988:3:31","nodeType":"VariableDeclaration","scope":7236,"src":"25972:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7207,"name":"address","nodeType":"ElementaryTypeName","src":"25972:15:31","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7210,"mutability":"mutable","name":"_amount","nameLocation":"26001:7:31","nodeType":"VariableDeclaration","scope":7236,"src":"25993:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7209,"name":"uint256","nodeType":"ElementaryTypeName","src":"25993:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25971:38:31"},"returnParameters":{"id":7216,"nodeType":"ParameterList","parameters":[],"src":"26071:0:31"},"scope":7241,"src":"25950:327:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"constant":false,"id":7240,"mutability":"mutable","name":"__gap","nameLocation":"26303:5:31","nodeType":"VariableDeclaration","scope":7241,"src":"26283:25:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":7237,"name":"uint256","nodeType":"ElementaryTypeName","src":"26283:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7239,"length":{"hexValue":"3530","id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26291:2:31","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"26283:11:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":7242,"src":"1875:24436:31","usedErrors":[]}],"src":"133:26179:31"},"id":31},"contracts/VCTypesV01.sol":{"ast":{"absolutePath":"contracts/VCTypesV01.sol","exportedSymbols":{"SafeMathUpgradeable":[4966],"VCTypesV01":[7614]},"id":7615,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","id":7243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7615,"sourceUnit":4967,"src":"152:80:32","symbolAliases":[],"unitAlias":""},{"id":7244,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"234:23:32"},{"abstract":false,"baseContracts":[],"canonicalName":"VCTypesV01","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":7614,"linearizedBaseContracts":[7614],"name":"VCTypesV01","nameLocation":"267:10:32","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":7247,"mutability":"constant","name":"ISSUER_TYPEHASH","nameLocation":"414:15:32","nodeType":"VariableDeclaration","scope":7614,"src":"389:117:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"389:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861626236393165366535326365623166663862336466393164633134333233303537653838656661333235323438366564393934666436323730366364666161","id":7246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"440:66:32","typeDescriptions":{"typeIdentifier":"t_rational_77668070251671229609577776778058423180205468054467127162670146216886843269034_by_1","typeString":"int_const 7766...(69 digits omitted)...9034"},"value":"0xabb691e6e52ceb1ff8b3df91dc14323057e88efa3252486ed994fd62706cdfaa"},"visibility":"private"},{"constant":true,"id":7250,"mutability":"constant","name":"SIGNATURE_TYPEHASH","nameLocation":"642:18:32","nodeType":"VariableDeclaration","scope":7614,"src":"617:120:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863656135396235656363623630323536643931386237613265373738663631363131343863333765366461646135376333326532306462313063353062363331","id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"671:66:32","typeDescriptions":{"typeIdentifier":"t_rational_93469048900318630385607024862898739313526901322190681192550380613286497400369_by_1","typeString":"int_const 9346...(69 digits omitted)...0369"},"value":"0xcea59b5eccb60256d918b7a2e778f6161148c37e6dada57c32e20db10c50b631"},"visibility":"private"},{"constant":true,"id":7253,"mutability":"constant","name":"VERIFIABLE_CREDENTIAL_TYPEHASH","nameLocation":"1291:30:32","nodeType":"VariableDeclaration","scope":7614,"src":"1266:132:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1266:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307836336334383437616133363632393532623334623866373666336162633337316332343533356565333466636535623364663334643032396462393234643465","id":7252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:66:32","typeDescriptions":{"typeIdentifier":"t_rational_45126188371279135836120388090656472529010086128614905233464107131689581563214_by_1","typeString":"int_const 4512...(69 digits omitted)...3214"},"value":"0x63c4847aa3662952b34b8f76f3abc371c24535ee34fce5b3df34d029db924d4e"},"visibility":"private"},{"constant":true,"id":7256,"mutability":"constant","name":"CREDENTIAL_SCHEMA_TYPEHASH","nameLocation":"1544:26:32","nodeType":"VariableDeclaration","scope":7614,"src":"1519:128:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1519:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831613538623763353636373662363233343366333766346633363033613037616536646437386265613330303638396263656665663066393439386336636339","id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1581:66:32","typeDescriptions":{"typeIdentifier":"t_rational_11916884946347068839281480578873559273539480242948353633266527971685018922185_by_1","typeString":"int_const 1191...(69 digits omitted)...2185"},"value":"0x1a58b7c56676b62343f37f4f3603a07ae6dd78bea300689bcefef0f9498c6cc9"},"visibility":"private"},{"constant":true,"id":7259,"mutability":"constant","name":"CREDENTIAL_SUBJECT_TYPEHASH","nameLocation":"1931:27:32","nodeType":"VariableDeclaration","scope":7614,"src":"1906:129:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1906:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834623837646236633539393866353033616336353139623561376437346566636632613233303336386465656166353464643862663037386461343539666637","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1969:66:32","typeDescriptions":{"typeIdentifier":"t_rational_34163502401049965052790658542595061271292342855421677861335015524928112140279_by_1","typeString":"int_const 3416...(69 digits omitted)...0279"},"value":"0x4b87db6c5998f503ac6519b5a7d74efcf2a230368deeaf54dd8bf078da459ff7"},"visibility":"private"},{"canonicalName":"VCTypesV01.Issuer","id":7264,"members":[{"constant":false,"id":7261,"mutability":"mutable","name":"id","nameLocation":"2073:2:32","nodeType":"VariableDeclaration","scope":7264,"src":"2066:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7260,"name":"string","nodeType":"ElementaryTypeName","src":"2066:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7263,"mutability":"mutable","name":"ethereumAddress","nameLocation":"2093:15:32","nodeType":"VariableDeclaration","scope":7264,"src":"2085:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7262,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Issuer","nameLocation":"2049:6:32","nodeType":"StructDefinition","scope":7614,"src":"2042:73:32","visibility":"public"},{"canonicalName":"VCTypesV01.CredentialSubject","id":7287,"members":[{"constant":false,"id":7266,"mutability":"mutable","name":"id","nameLocation":"2163:2:32","nodeType":"VariableDeclaration","scope":7287,"src":"2156:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7265,"name":"string","nodeType":"ElementaryTypeName","src":"2156:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7268,"mutability":"mutable","name":"ethereumAddress","nameLocation":"2183:15:32","nodeType":"VariableDeclaration","scope":7287,"src":"2175:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7267,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7270,"mutability":"mutable","name":"_type","nameLocation":"2215:5:32","nodeType":"VariableDeclaration","scope":7287,"src":"2208:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7269,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7272,"mutability":"mutable","name":"typeSchema","nameLocation":"2237:10:32","nodeType":"VariableDeclaration","scope":7287,"src":"2230:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7271,"name":"string","nodeType":"ElementaryTypeName","src":"2230:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7274,"mutability":"mutable","name":"value","nameLocation":"2264:5:32","nodeType":"VariableDeclaration","scope":7287,"src":"2257:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7273,"name":"string","nodeType":"ElementaryTypeName","src":"2257:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7276,"mutability":"mutable","name":"encrypted","nameLocation":"2286:9:32","nodeType":"VariableDeclaration","scope":7287,"src":"2279:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7275,"name":"string","nodeType":"ElementaryTypeName","src":"2279:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7278,"mutability":"mutable","name":"trust","nameLocation":"2311:5:32","nodeType":"VariableDeclaration","scope":7287,"src":"2305:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7277,"name":"uint8","nodeType":"ElementaryTypeName","src":"2305:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7280,"mutability":"mutable","name":"stake","nameLocation":"2345:5:32","nodeType":"VariableDeclaration","scope":7287,"src":"2337:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2337:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7282,"mutability":"mutable","name":"price","nameLocation":"2405:5:32","nodeType":"VariableDeclaration","scope":7287,"src":"2397:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7284,"mutability":"mutable","name":"nbf","nameLocation":"2435:3:32","nodeType":"VariableDeclaration","scope":7287,"src":"2427:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7286,"mutability":"mutable","name":"exp","nameLocation":"2456:3:32","nodeType":"VariableDeclaration","scope":7287,"src":"2448:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2448:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CredentialSubject","nameLocation":"2128:17:32","nodeType":"StructDefinition","scope":7614,"src":"2121:345:32","visibility":"public"},{"canonicalName":"VCTypesV01.CredentialSchema","id":7292,"members":[{"constant":false,"id":7289,"mutability":"mutable","name":"id","nameLocation":"2513:2:32","nodeType":"VariableDeclaration","scope":7292,"src":"2506:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7288,"name":"string","nodeType":"ElementaryTypeName","src":"2506:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7291,"mutability":"mutable","name":"_type","nameLocation":"2532:5:32","nodeType":"VariableDeclaration","scope":7292,"src":"2525:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7290,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"CredentialSchema","nameLocation":"2479:16:32","nodeType":"StructDefinition","scope":7614,"src":"2472:72:32","visibility":"public"},{"canonicalName":"VCTypesV01.VerifiableCredential","id":7312,"members":[{"constant":false,"id":7294,"mutability":"mutable","name":"_context","nameLocation":"2595:8:32","nodeType":"VariableDeclaration","scope":7312,"src":"2588:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7293,"name":"string","nodeType":"ElementaryTypeName","src":"2588:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7296,"mutability":"mutable","name":"_type","nameLocation":"2620:5:32","nodeType":"VariableDeclaration","scope":7312,"src":"2613:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7295,"name":"string","nodeType":"ElementaryTypeName","src":"2613:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7298,"mutability":"mutable","name":"id","nameLocation":"2642:2:32","nodeType":"VariableDeclaration","scope":7312,"src":"2635:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7297,"name":"string","nodeType":"ElementaryTypeName","src":"2635:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7301,"mutability":"mutable","name":"issuer","nameLocation":"2661:6:32","nodeType":"VariableDeclaration","scope":7312,"src":"2654:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_storage_ptr","typeString":"struct VCTypesV01.Issuer"},"typeName":{"id":7300,"nodeType":"UserDefinedTypeName","pathNode":{"id":7299,"name":"Issuer","nodeType":"IdentifierPath","referencedDeclaration":7264,"src":"2654:6:32"},"referencedDeclaration":7264,"src":"2654:6:32","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_storage_ptr","typeString":"struct VCTypesV01.Issuer"}},"visibility":"internal"},{"constant":false,"id":7304,"mutability":"mutable","name":"credentialSubject","nameLocation":"2695:17:32","nodeType":"VariableDeclaration","scope":7312,"src":"2677:35:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_storage_ptr","typeString":"struct VCTypesV01.CredentialSubject"},"typeName":{"id":7303,"nodeType":"UserDefinedTypeName","pathNode":{"id":7302,"name":"CredentialSubject","nodeType":"IdentifierPath","referencedDeclaration":7287,"src":"2677:17:32"},"referencedDeclaration":7287,"src":"2677:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_storage_ptr","typeString":"struct VCTypesV01.CredentialSubject"}},"visibility":"internal"},{"constant":false,"id":7307,"mutability":"mutable","name":"credentialSchema","nameLocation":"2739:16:32","nodeType":"VariableDeclaration","scope":7312,"src":"2722:33:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSchema_$7292_storage_ptr","typeString":"struct VCTypesV01.CredentialSchema"},"typeName":{"id":7306,"nodeType":"UserDefinedTypeName","pathNode":{"id":7305,"name":"CredentialSchema","nodeType":"IdentifierPath","referencedDeclaration":7292,"src":"2722:16:32"},"referencedDeclaration":7292,"src":"2722:16:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSchema_$7292_storage_ptr","typeString":"struct VCTypesV01.CredentialSchema"}},"visibility":"internal"},{"constant":false,"id":7309,"mutability":"mutable","name":"issuanceDate","nameLocation":"2772:12:32","nodeType":"VariableDeclaration","scope":7312,"src":"2765:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7308,"name":"string","nodeType":"ElementaryTypeName","src":"2765:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7311,"mutability":"mutable","name":"expirationDate","nameLocation":"2801:14:32","nodeType":"VariableDeclaration","scope":7312,"src":"2794:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7310,"name":"string","nodeType":"ElementaryTypeName","src":"2794:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"VerifiableCredential","nameLocation":"2557:20:32","nodeType":"StructDefinition","scope":7614,"src":"2550:272:32","visibility":"public"},{"body":{"id":7410,"nodeType":"Block","src":"3005:1117:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7320,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"3036:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"3036:9:32","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":7322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"3036:25:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3073:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3065:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7323,"name":"address","nodeType":"ElementaryTypeName","src":"3065:7:32","typeDescriptions":{}}},"id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3065:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3036:39:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a20626164206973737565722061646472657373","id":7328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3089:30:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d97f95a245ba79f42a9065910fcf779e5b39b905459cc7e72c471a31d853943","typeString":"literal_string \"KRBToken: bad issuer address\""},"value":"KRBToken: bad issuer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d97f95a245ba79f42a9065910fcf779e5b39b905459cc7e72c471a31d853943","typeString":"literal_string \"KRBToken: bad issuer address\""}],"id":7319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3015:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3015:114:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7330,"nodeType":"ExpressionStatement","src":"3015:114:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7332,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"3160:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"3160:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"3160:36:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3208:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3200:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7335,"name":"address","nodeType":"ElementaryTypeName","src":"3200:7:32","typeDescriptions":{}}},"id":7338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3200:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3160:50:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206261642063726564656e7469616c5375626a6563742061646472657373","id":7340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3224:41:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_332c2939fb313dc20fa48e12a4dc181352b759b37e44ec55d8d7e17b0f95cc4e","typeString":"literal_string \"KRBToken: bad credentialSubject address\""},"value":"KRBToken: bad credentialSubject address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_332c2939fb313dc20fa48e12a4dc181352b759b37e44ec55d8d7e17b0f95cc4e","typeString":"literal_string \"KRBToken: bad credentialSubject address\""}],"id":7331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3139:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:136:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7342,"nodeType":"ExpressionStatement","src":"3139:136:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7344,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"3306:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"3306:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"trust","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"3306:26:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":7347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3336:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3306:31:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7349,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"3357:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"3357:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"trust","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"3357:26:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":7352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3387:3:32","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3357:33:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3306:84:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206261642074727573742070657263656e746167652076616c7565","id":7355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3404:38:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_9aa176bbd438000177acf769a48d80b095df0cb0035424d15e7d7154b35a89e6","typeString":"literal_string \"KRBToken: bad trust percentage value\""},"value":"KRBToken: bad trust percentage value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9aa176bbd438000177acf769a48d80b095df0cb0035424d15e7d7154b35a89e6","typeString":"literal_string \"KRBToken: bad trust percentage value\""}],"id":7343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3285:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3285:167:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7357,"nodeType":"ExpressionStatement","src":"3285:167:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"expression":{"id":7362,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"3504:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"3504:9:32","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":7364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7261,"src":"3504:12:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7360,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3493:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3493:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3493:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7359,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3483:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3483:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[{"expression":{"expression":{"id":7370,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"3559:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"3559:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7266,"src":"3559:23:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7368,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3548:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3548:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3548:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7367,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3538:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3538:46:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3483:101:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2069737375657220444944206973207468652073616d652061732063726564656e7469616c5375626a656374","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3598:55:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_7275d7417746227075f624f85a543397112ae5996ca94abb88e8f8c1a78aafe5","typeString":"literal_string \"KRBToken: issuer DID is the same as credentialSubject\""},"value":"KRBToken: issuer DID is the same as credentialSubject"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7275d7417746227075f624f85a543397112ae5996ca94abb88e8f8c1a78aafe5","typeString":"literal_string \"KRBToken: issuer DID is the same as credentialSubject\""}],"id":7358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3462:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3462:201:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7378,"nodeType":"ExpressionStatement","src":"3462:201:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7380,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"3694:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"3694:9:32","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":7382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"3694:25:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":7383,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"3723:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"3723:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"3723:36:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3694:65:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a206973737565722061646472657373206973207468652073616d652061732063726564656e7469616c5375626a656374","id":7387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3773:59:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3c30a0cfcd14b95a736c6e8404a5219d4f4f37173a5b67492adc4f42d450088","typeString":"literal_string \"KRBToken: issuer address is the same as credentialSubject\""},"value":"KRBToken: issuer address is the same as credentialSubject"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3c30a0cfcd14b95a736c6e8404a5219d4f4f37173a5b67492adc4f42d450088","typeString":"literal_string \"KRBToken: issuer address is the same as credentialSubject\""}],"id":7379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3673:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3673:169:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7389,"nodeType":"ExpressionStatement","src":"3673:169:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7391,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3874:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3874:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"expression":{"id":7393,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"3892:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"3892:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nbf","nodeType":"MemberAccess","referencedDeclaration":7284,"src":"3892:24:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3874:42:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2056432069737375616e63654461746520697320696e2074686520667574757265","id":7397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3930:44:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3e2e532f35077290d5b88b7db3097bb836039268a2ba2d6858c6508237a35cf","typeString":"literal_string \"KRBToken: VC issuanceDate is in the future\""},"value":"KRBToken: VC issuanceDate is in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3e2e532f35077290d5b88b7db3097bb836039268a2ba2d6858c6508237a35cf","typeString":"literal_string \"KRBToken: VC issuanceDate is in the future\""}],"id":7390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3853:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3853:131:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7399,"nodeType":"ExpressionStatement","src":"3853:131:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7401,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4015:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4015:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":7403,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"4033:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"4033:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"exp","nodeType":"MemberAccess","referencedDeclaration":7286,"src":"4033:24:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4015:42:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b5242546f6b656e3a2056432068617320616c72656164792065787069726564","id":7407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4071:34:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_3603672c3b08973ae817b0488ed6115eb7a95a5d250db50f67ba4f72e13d7a41","typeString":"literal_string \"KRBToken: VC has already expired\""},"value":"KRBToken: VC has already expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3603672c3b08973ae817b0488ed6115eb7a95a5d250db50f67ba4f72e13d7a41","typeString":"literal_string \"KRBToken: VC has already expired\""}],"id":7400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3994:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:121:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7409,"nodeType":"ExpressionStatement","src":"3994:121:32"}]},"documentation":{"id":7313,"nodeType":"StructuredDocumentation","src":"2828:106:32","text":" @dev Validates that the `VerifiableCredential` conforms to the Krebit Protocol."},"id":7411,"implemented":true,"kind":"function","modifiers":[],"name":"validateVC","nameLocation":"2948:10:32","nodeType":"FunctionDefinition","parameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"vc","nameLocation":"2987:2:32","nodeType":"VariableDeclaration","scope":7411,"src":"2959:30:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":7315,"nodeType":"UserDefinedTypeName","pathNode":{"id":7314,"name":"VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"2959:20:32"},"referencedDeclaration":7312,"src":"2959:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"}],"src":"2958:32:32"},"returnParameters":{"id":7318,"nodeType":"ParameterList","parameters":[],"src":"3005:0:32"},"scope":7614,"src":"2939:1183:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7431,"nodeType":"Block","src":"4376:195:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":7425,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"4514:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7426,"name":"_trust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"4522:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7423,"name":"SafeMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"4490:19:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMathUpgradeable_$4966_$","typeString":"type(library SafeMathUpgradeable)"}},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4860,"src":"4490:23:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4490:39:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313030","id":7428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4547:3:32","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"expression":{"id":7421,"name":"SafeMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"4449:19:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMathUpgradeable_$4966_$","typeString":"type(library SafeMathUpgradeable)"}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"4449:23:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4449:115:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7420,"id":7430,"nodeType":"Return","src":"4430:134:32"}]},"documentation":{"id":7412,"nodeType":"StructuredDocumentation","src":"4128:132:32","text":" @dev Calculates the KRB reward as defined by tht Krebit Protocol\n Formula:  Krebit = Risk * Trust %"},"id":7432,"implemented":true,"kind":"function","modifiers":[],"name":"getReward","nameLocation":"4274:9:32","nodeType":"FunctionDefinition","parameters":{"id":7417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7414,"mutability":"mutable","name":"_stake","nameLocation":"4292:6:32","nodeType":"VariableDeclaration","scope":7432,"src":"4284:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7413,"name":"uint256","nodeType":"ElementaryTypeName","src":"4284:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7416,"mutability":"mutable","name":"_trust","nameLocation":"4308:6:32","nodeType":"VariableDeclaration","scope":7432,"src":"4300:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7415,"name":"uint256","nodeType":"ElementaryTypeName","src":"4300:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4283:32:32"},"returnParameters":{"id":7420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7432,"src":"4363:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7418,"name":"uint256","nodeType":"ElementaryTypeName","src":"4363:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4362:9:32"},"scope":7614,"src":"4265:306:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7456,"nodeType":"Block","src":"4681:239:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":7443,"name":"ISSUER_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"4769:15:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7447,"name":"identity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"4822:8:32","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":7448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7261,"src":"4822:11:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4816:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7445,"name":"bytes","nodeType":"ElementaryTypeName","src":"4816:5:32","typeDescriptions":{}}},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4816:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7444,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4806:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4806:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7451,"name":"identity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"4857:8:32","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}},"id":7452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"4857:24:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7441,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4737:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4737:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4737:162:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7440,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4710:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4710:203:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7439,"id":7455,"nodeType":"Return","src":"4691:222:32"}]},"id":7457,"implemented":true,"kind":"function","modifiers":[],"name":"_getIssuer","nameLocation":"4586:10:32","nodeType":"FunctionDefinition","parameters":{"id":7436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7435,"mutability":"mutable","name":"identity","nameLocation":"4611:8:32","nodeType":"VariableDeclaration","scope":7457,"src":"4597:22:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer"},"typeName":{"id":7434,"nodeType":"UserDefinedTypeName","pathNode":{"id":7433,"name":"Issuer","nodeType":"IdentifierPath","referencedDeclaration":7264,"src":"4597:6:32"},"referencedDeclaration":7264,"src":"4597:6:32","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_storage_ptr","typeString":"struct VCTypesV01.Issuer"}},"visibility":"internal"}],"src":"4596:24:32"},"returnParameters":{"id":7439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7457,"src":"4668:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4668:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4667:9:32"},"scope":7614,"src":"4577:343:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7519,"nodeType":"Block","src":"5061:751:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":7468,"name":"CREDENTIAL_SUBJECT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"5149:27:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7472,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5214:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7266,"src":"5214:20:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5208:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7470,"name":"bytes","nodeType":"ElementaryTypeName","src":"5208:5:32","typeDescriptions":{}}},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5208:27:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7469,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5198:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5198:38:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7476,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5258:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ethereumAddress","nodeType":"MemberAccess","referencedDeclaration":7268,"src":"5258:33:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"expression":{"id":7481,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5329:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_type","nodeType":"MemberAccess","referencedDeclaration":7270,"src":"5329:23:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5323:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7479,"name":"bytes","nodeType":"ElementaryTypeName","src":"5323:5:32","typeDescriptions":{}}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5323:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7478,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5313:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5313:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7488,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5392:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"typeSchema","nodeType":"MemberAccess","referencedDeclaration":7272,"src":"5392:28:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5386:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7486,"name":"bytes","nodeType":"ElementaryTypeName","src":"5386:5:32","typeDescriptions":{}}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5386:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7485,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5376:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5376:46:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7495,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5460:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":7274,"src":"5460:23:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5454:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7493,"name":"bytes","nodeType":"ElementaryTypeName","src":"5454:5:32","typeDescriptions":{}}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5454:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7492,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5444:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5444:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7502,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5523:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"encrypted","nodeType":"MemberAccess","referencedDeclaration":7276,"src":"5523:27:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7500,"name":"bytes","nodeType":"ElementaryTypeName","src":"5517:5:32","typeDescriptions":{}}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7499,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5507:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5507:45:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7506,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5574:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"trust","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"5574:23:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":7508,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5619:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"5619:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7510,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5664:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7282,"src":"5664:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7512,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5709:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nbf","nodeType":"MemberAccess","referencedDeclaration":7284,"src":"5709:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7514,"name":"credentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"5752:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}},"id":7515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"exp","nodeType":"MemberAccess","referencedDeclaration":7286,"src":"5752:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7466,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5117:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5117:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5117:674:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7465,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5090:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5090:715:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7464,"id":7518,"nodeType":"Return","src":"5071:734:32"}]},"id":7520,"implemented":true,"kind":"function","modifiers":[],"name":"_getCredentialSubject","nameLocation":"4935:21:32","nodeType":"FunctionDefinition","parameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"credentialSubject","nameLocation":"4982:17:32","nodeType":"VariableDeclaration","scope":7520,"src":"4957:42:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject"},"typeName":{"id":7459,"nodeType":"UserDefinedTypeName","pathNode":{"id":7458,"name":"CredentialSubject","nodeType":"IdentifierPath","referencedDeclaration":7287,"src":"4957:17:32"},"referencedDeclaration":7287,"src":"4957:17:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_storage_ptr","typeString":"struct VCTypesV01.CredentialSubject"}},"visibility":"internal"}],"src":"4956:44:32"},"returnParameters":{"id":7464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7520,"src":"5048:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5048:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5047:9:32"},"scope":7614,"src":"4926:886:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7549,"nodeType":"Block","src":"5950:274:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":7531,"name":"CREDENTIAL_SCHEMA_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"6038:26:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7535,"name":"credentialSchema","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"6102:16:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSchema_$7292_memory_ptr","typeString":"struct VCTypesV01.CredentialSchema memory"}},"id":7536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7289,"src":"6102:19:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6096:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7533,"name":"bytes","nodeType":"ElementaryTypeName","src":"6096:5:32","typeDescriptions":{}}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6096:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7532,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6086:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6086:37:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7542,"name":"credentialSchema","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"6161:16:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSchema_$7292_memory_ptr","typeString":"struct VCTypesV01.CredentialSchema memory"}},"id":7543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_type","nodeType":"MemberAccess","referencedDeclaration":7291,"src":"6161:22:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6155:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7540,"name":"bytes","nodeType":"ElementaryTypeName","src":"6155:5:32","typeDescriptions":{}}},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6155:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7539,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6145:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6145:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6006:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6006:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6006:197:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7528,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5979:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5979:238:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7527,"id":7548,"nodeType":"Return","src":"5960:257:32"}]},"id":7550,"implemented":true,"kind":"function","modifiers":[],"name":"_getCredentialSchema","nameLocation":"5827:20:32","nodeType":"FunctionDefinition","parameters":{"id":7524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7523,"mutability":"mutable","name":"credentialSchema","nameLocation":"5872:16:32","nodeType":"VariableDeclaration","scope":7550,"src":"5848:40:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSchema_$7292_memory_ptr","typeString":"struct VCTypesV01.CredentialSchema"},"typeName":{"id":7522,"nodeType":"UserDefinedTypeName","pathNode":{"id":7521,"name":"CredentialSchema","nodeType":"IdentifierPath","referencedDeclaration":7292,"src":"5848:16:32"},"referencedDeclaration":7292,"src":"5848:16:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSchema_$7292_storage_ptr","typeString":"struct VCTypesV01.CredentialSchema"}},"visibility":"internal"}],"src":"5847:42:32"},"returnParameters":{"id":7527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7550,"src":"5937:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5937:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5936:9:32"},"scope":7614,"src":"5818:406:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7612,"nodeType":"Block","src":"6355:584:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":7561,"name":"VERIFIABLE_CREDENTIAL_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"6443:30:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7565,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"6511:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_context","nodeType":"MemberAccess","referencedDeclaration":7294,"src":"6511:11:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7563,"name":"bytes","nodeType":"ElementaryTypeName","src":"6505:5:32","typeDescriptions":{}}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6505:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7562,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6495:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6495:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7572,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"6562:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_type","nodeType":"MemberAccess","referencedDeclaration":7296,"src":"6562:8:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6556:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7570,"name":"bytes","nodeType":"ElementaryTypeName","src":"6556:5:32","typeDescriptions":{}}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6556:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7569,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6546:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6546:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7579,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"6610:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7298,"src":"6610:5:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6604:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7577,"name":"bytes","nodeType":"ElementaryTypeName","src":"6604:5:32","typeDescriptions":{}}},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6604:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7576,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6594:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6594:23:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":7584,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"6650:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"6650:9:32","typeDescriptions":{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Issuer_$7264_memory_ptr","typeString":"struct VCTypesV01.Issuer memory"}],"id":7583,"name":"_getIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"6639:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Issuer_$7264_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct VCTypesV01.Issuer memory) pure returns (bytes32)"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6639:21:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":7588,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"6704:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSubject","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"6704:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CredentialSubject_$7287_memory_ptr","typeString":"struct VCTypesV01.CredentialSubject memory"}],"id":7587,"name":"_getCredentialSubject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"6682:21:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CredentialSubject_$7287_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct VCTypesV01.CredentialSubject memory) pure returns (bytes32)"}},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6682:43:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":7592,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"6768:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"credentialSchema","nodeType":"MemberAccess","referencedDeclaration":7307,"src":"6768:19:32","typeDescriptions":{"typeIdentifier":"t_struct$_CredentialSchema_$7292_memory_ptr","typeString":"struct VCTypesV01.CredentialSchema memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CredentialSchema_$7292_memory_ptr","typeString":"struct VCTypesV01.CredentialSchema memory"}],"id":7591,"name":"_getCredentialSchema","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"6747:20:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CredentialSchema_$7292_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct VCTypesV01.CredentialSchema memory) pure returns (bytes32)"}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6747:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7598,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"6826:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"issuanceDate","nodeType":"MemberAccess","referencedDeclaration":7309,"src":"6826:15:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6820:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7596,"name":"bytes","nodeType":"ElementaryTypeName","src":"6820:5:32","typeDescriptions":{}}},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6820:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7595,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6810:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6810:33:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":7605,"name":"vc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"6881:2:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential memory"}},"id":7606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"expirationDate","nodeType":"MemberAccess","referencedDeclaration":7311,"src":"6881:17:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6875:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7603,"name":"bytes","nodeType":"ElementaryTypeName","src":"6875:5:32","typeDescriptions":{}}},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6875:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7602,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6865:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6865:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7559,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6411:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6411:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6411:507:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7558,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6384:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6384:548:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7557,"id":7611,"nodeType":"Return","src":"6365:567:32"}]},"id":7613,"implemented":true,"kind":"function","modifiers":[],"name":"getVerifiableCredential","nameLocation":"6239:23:32","nodeType":"FunctionDefinition","parameters":{"id":7554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7553,"mutability":"mutable","name":"vc","nameLocation":"6291:2:32","nodeType":"VariableDeclaration","scope":7613,"src":"6263:30:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_memory_ptr","typeString":"struct VCTypesV01.VerifiableCredential"},"typeName":{"id":7552,"nodeType":"UserDefinedTypeName","pathNode":{"id":7551,"name":"VerifiableCredential","nodeType":"IdentifierPath","referencedDeclaration":7312,"src":"6263:20:32"},"referencedDeclaration":7312,"src":"6263:20:32","typeDescriptions":{"typeIdentifier":"t_struct$_VerifiableCredential_$7312_storage_ptr","typeString":"struct VCTypesV01.VerifiableCredential"}},"visibility":"internal"}],"src":"6262:32:32"},"returnParameters":{"id":7557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7613,"src":"6342:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6342:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6341:9:32"},"scope":7614,"src":"6230:709:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7615,"src":"259:6682:32","usedErrors":[]}],"src":"152:6790:32"},"id":32}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"AccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":\"AccessControlEnumerableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xd25b5dd88ee621810335aa7272faeeb2a4c4151b19ce4ac0d7ce75a347bb53b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://317cba73373e48d3c44c24d7ef27d72941f5bf869d6c8ab5490ca60e93af3511\",\"dweb:/ipfs/QmX5cK7qaYbyK4PKKKZqpBq45YHcaP36tmnnaj1E5sJSQo\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x992b28e9cd85d3614bf2f0ad8225164128abdf44fb533db8587e8a64e0d9883c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358ad71c829bd135ac3cb278b66ce7c54647383aaa7285fcca3cd1f4f316e939\",\"dweb:/ipfs/QmWs8i1stQpyv9eX8XafczmPRLVQhuhWncYYgiz6TKs2bg\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x3753924aa8f8ef663cbb28d1f214b4ed0206a1832a98cb8f3a4938a71e76f602\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d2a1934171617f97273f1a0a3640363c62861e1de1ac9ce1ab2a9d5b8ca93a\",\"dweb:/ipfs/QmXwTYK7Vu5DAJr2VhA3RYxEvC8ujx9oQPMmccpTxPBb63\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3776,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":184,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)179_storage)"},{"astId":479,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":33,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_roleMembers","offset":0,"slot":"151","type":"t_mapping(t_bytes32,t_struct(AddressSet)5292_storage)"},{"astId":143,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(AddressSet)5292_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)","numberOfBytes":"32","value":"t_struct(AddressSet)5292_storage"},"t_mapping(t_bytes32,t_struct(RoleData)179_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)179_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)5292_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.AddressSet","members":[{"astId":5291,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)4977_storage"}],"numberOfBytes":"64"},"t_struct(RoleData)179_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":176,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":178,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(Set)4977_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Set","members":[{"astId":4972,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":4976,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xd25b5dd88ee621810335aa7272faeeb2a4c4151b19ce4ac0d7ce75a347bb53b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://317cba73373e48d3c44c24d7ef27d72941f5bf869d6c8ab5490ca60e93af3511\",\"dweb:/ipfs/QmX5cK7qaYbyK4PKKKZqpBq45YHcaP36tmnnaj1E5sJSQo\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x992b28e9cd85d3614bf2f0ad8225164128abdf44fb533db8587e8a64e0d9883c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358ad71c829bd135ac3cb278b66ce7c54647383aaa7285fcca3cd1f4f316e939\",\"dweb:/ipfs/QmWs8i1stQpyv9eX8XafczmPRLVQhuhWncYYgiz6TKs2bg\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3776,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":184,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)179_storage)"},{"astId":479,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)179_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)179_storage"},"t_struct(RoleData)179_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":176,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":178,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"IAccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":\"IAccessControlEnumerableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"IAccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":589,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":709,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1088,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf7db9b91442fb9426403fda8893b60444066d9682f2913e14a96f12196afb96e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2bd84e37357b89a4f19dee68a5b8667083d4b85681b36bf7eda2d38d8c162a6\",\"dweb:/ipfs/QmULmgN6yaoax1wA66SffeJCkZijDSugu4GGD8DSWLLxQN\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1088,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1403,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1425,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":1530,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol":{"PullPaymentUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"address","name":"dest","type":"address"}],"name":"payments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"payee","type":"address"}],"name":"withdrawPayments","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"payments(address)":"e2982c21","withdrawPayments(address)":"31b3eb94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"51\",\"details\":\"Simple implementation of a https://consensys.github.io/smart-contract-best-practices/development-recommendations/general/external-calls/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.\",\"kind\":\"dev\",\"methods\":{\"payments(address)\":{\"details\":\"Returns the payments owed to an address.\",\"params\":{\"dest\":\"The creditor's address.\"}},\"withdrawPayments(address)\":{\"details\":\"Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"Whose payments will be withdrawn. Causes the `escrow` to emit a {Withdrawn} event.\"}}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol\":\"PullPaymentUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol\":{\"keccak256\":\"0xd2b848e5f1d5a79db9af3c97eb2da38cb5aea06579373824d55319946031dc20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0141d327d20ffabe1c59acbf774df33ed67c7c817e19eae806c31d078ce0b2cf\",\"dweb:/ipfs/QmWbhNdYQWVvcfTA48UTKPZmvJPUBktaNTUuMehaCpSAdu\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol\":{\"keccak256\":\"0xf967fc54daea1917caeff7db4f4b888009d25308b761b304af8a69fb3817f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f97c27dd0a7193923ac446d4c0b23df3350eaa0f087cab7f90882a22a66aee23\",\"dweb:/ipfs/QmSkXvjCnLcUHKAZ9DjbtHkVxyT9jqU21JtEMEqL1FRv9Y\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:PullPaymentUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:PullPaymentUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1541,"contract":"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:PullPaymentUpgradeable","label":"_escrow","offset":2,"slot":"0","type":"t_contract(EscrowUpgradeable)3733"},{"astId":1617,"contract":"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:PullPaymentUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(EscrowUpgradeable)3733":{"encoding":"inplace","label":"contract EscrowUpgradeable","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xbf46574f5b3e5ae4d823b06fef6fe20ed32a4c4cd5bb9cd07d1712da624321fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://766b8ea4848c5149e79f0e24fe0c0ff949acaeb029973675d3839070fea95de6\",\"dweb:/ipfs/QmSuhrQn1kMfHxU85GS11JY1WzaWR27fq1MhduRnTF5Wwo\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1632,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":1690,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"__gap","offset":0,"slot":"2","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610854806100206000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a6610190565b6040516100b39190610691565b60405180910390f35b6100cf6100ca366004610702565b610222565b60405190151581526020016100b3565b6035545b6040519081526020016100b3565b6100cf6100ff36600461072c565b61023a565b604051601281526020016100b3565b6100cf610121366004610702565b61025e565b6100e3610134366004610768565b6001600160a01b031660009081526033602052604090205490565b6100a6610280565b6100cf610165366004610702565b61028f565b6100cf610178366004610702565b61030f565b6100e361018b36600461078a565b61031d565b60606036805461019f906107bd565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906107bd565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600033610230818585610348565b5060019392505050565b60003361024885828561046c565b6102538585856104e6565b506001949350505050565b600033610230818585610271838361031d565b61027b91906107f8565b610348565b60606037805461019f906107bd565b6000338161029d828661031d565b9050838110156103025760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102538286868403610348565b6000336102308185856104e6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103aa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f9565b6001600160a01b03821661040b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f9565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610478848461031d565b905060001981146104e057818110156104d35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102f9565b6104e08484848403610348565b50505050565b6001600160a01b03831661054a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f9565b6001600160a01b0382166105ac5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f9565b6001600160a01b038316600090815260336020526040902054818110156106245760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f9565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106849086815260200190565b60405180910390a36104e0565b600060208083528351808285015260005b818110156106be578581018301518582016040015282016106a2565b818111156106d0576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106fd57600080fd5b919050565b6000806040838503121561071557600080fd5b61071e836106e6565b946020939093013593505050565b60008060006060848603121561074157600080fd5b61074a846106e6565b9250610758602085016106e6565b9150604084013590509250925092565b60006020828403121561077a57600080fd5b610783826106e6565b9392505050565b6000806040838503121561079d57600080fd5b6107a6836106e6565b91506107b4602084016106e6565b90509250929050565b600181811c908216806107d157607f821691505b602082108114156107f257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561081957634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122011785116ce4a43adaf0136f736490b969629ecac320c16c3bb91449e37198c6d64736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x854 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x72C JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x280 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST PUSH2 0xCF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x7BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x348 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x248 DUP6 DUP3 DUP6 PUSH2 0x46C JUMP JUMPDEST PUSH2 0x253 DUP6 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x271 DUP4 DUP4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x29D DUP3 DUP7 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x253 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP5 DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x684 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6BE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6A2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6E6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74A DUP5 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 POP PUSH2 0x758 PUSH1 0x20 DUP6 ADD PUSH2 0x6E6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x783 DUP3 PUSH2 0x6E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A6 DUP4 PUSH2 0x6E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B4 PUSH1 0x20 DUP5 ADD PUSH2 0x6E6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x7F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x819 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH25 0x5116CE4A43ADAF0136F736490B969629ECAC320C16C3BB9144 SWAP15 CALLDATACOPY NOT DUP13 PUSH14 0x64736F6C634300080C0033000000 ","sourceMap":"1485:12159:13:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2297":{"entryPoint":null,"id":2297,"parameterSlots":3,"returnSlots":0},"@_approve_2232":{"entryPoint":840,"id":2232,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2286":{"entryPoint":null,"id":2286,"parameterSlots":3,"returnSlots":0},"@_msgSender_2841":{"entryPoint":null,"id":2841,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2275":{"entryPoint":1132,"id":2275,"parameterSlots":3,"returnSlots":0},"@_transfer_2058":{"entryPoint":1254,"id":2058,"parameterSlots":3,"returnSlots":0},"@allowance_1853":{"entryPoint":797,"id":1853,"parameterSlots":2,"returnSlots":1},"@approve_1878":{"entryPoint":546,"id":1878,"parameterSlots":2,"returnSlots":1},"@balanceOf_1810":{"entryPoint":null,"id":1810,"parameterSlots":1,"returnSlots":1},"@decimals_1786":{"entryPoint":null,"id":1786,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1981":{"entryPoint":655,"id":1981,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1940":{"entryPoint":606,"id":1940,"parameterSlots":2,"returnSlots":1},"@name_1766":{"entryPoint":400,"id":1766,"parameterSlots":0,"returnSlots":1},"@symbol_1776":{"entryPoint":640,"id":1776,"parameterSlots":0,"returnSlots":1},"@totalSupply_1796":{"entryPoint":null,"id":1796,"parameterSlots":0,"returnSlots":1},"@transferFrom_1911":{"entryPoint":570,"id":1911,"parameterSlots":3,"returnSlots":1},"@transfer_1835":{"entryPoint":783,"id":1835,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1766,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1930,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1836,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1794,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2040,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1981,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5806:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:33","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:33","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:33","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:33"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:33"},"nodeType":"YulFunctionCall","src":"166:21:33"},"nodeType":"YulExpressionStatement","src":"166:21:33"},{"nodeType":"YulVariableDeclaration","src":"196:27:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:33"},"nodeType":"YulFunctionCall","src":"210:13:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:33"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:33"},"nodeType":"YulFunctionCall","src":"239:18:33"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:33"},"nodeType":"YulFunctionCall","src":"232:34:33"},"nodeType":"YulExpressionStatement","src":"232:34:33"},{"nodeType":"YulVariableDeclaration","src":"275:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:33","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:33"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:33"},"nodeType":"YulFunctionCall","src":"369:17:33"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:33"},"nodeType":"YulFunctionCall","src":"365:26:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:33"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:33"},"nodeType":"YulFunctionCall","src":"403:14:33"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:33"},"nodeType":"YulFunctionCall","src":"399:23:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:33"},"nodeType":"YulFunctionCall","src":"393:30:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:33"},"nodeType":"YulFunctionCall","src":"358:66:33"},"nodeType":"YulExpressionStatement","src":"358:66:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:33"},"nodeType":"YulFunctionCall","src":"302:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:33","statements":[{"nodeType":"YulAssignment","src":"318:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:33"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:33"},"nodeType":"YulFunctionCall","src":"323:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:33","statements":[]},"src":"294:140:33"},{"body":{"nodeType":"YulBlock","src":"468:66:33","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:33"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:33"},"nodeType":"YulFunctionCall","src":"493:22:33"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:33"},"nodeType":"YulFunctionCall","src":"489:31:33"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:33"},"nodeType":"YulFunctionCall","src":"482:42:33"},"nodeType":"YulExpressionStatement","src":"482:42:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:33"},"nodeType":"YulFunctionCall","src":"446:13:33"},"nodeType":"YulIf","src":"443:91:33"},{"nodeType":"YulAssignment","src":"543:62:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:33"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:33"},"nodeType":"YulFunctionCall","src":"574:15:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:33"},"nodeType":"YulFunctionCall","src":"591:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:33"},"nodeType":"YulFunctionCall","src":"570:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:33"},"nodeType":"YulFunctionCall","src":"555:45:33"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:33"},"nodeType":"YulFunctionCall","src":"551:54:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:33","type":""}],"src":"14:597:33"},{"body":{"nodeType":"YulBlock","src":"665:124:33","statements":[{"nodeType":"YulAssignment","src":"675:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:33"},"nodeType":"YulFunctionCall","src":"684:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:33"}]},{"body":{"nodeType":"YulBlock","src":"767:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:33"},"nodeType":"YulFunctionCall","src":"769:12:33"},"nodeType":"YulExpressionStatement","src":"769:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:33"},"nodeType":"YulFunctionCall","src":"748:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:33"},"nodeType":"YulFunctionCall","src":"744:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:33"},"nodeType":"YulFunctionCall","src":"733:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:33"},"nodeType":"YulFunctionCall","src":"723:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:33"},"nodeType":"YulFunctionCall","src":"716:50:33"},"nodeType":"YulIf","src":"713:70:33"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:33","type":""}],"src":"616:173:33"},{"body":{"nodeType":"YulBlock","src":"881:167:33","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:33"},"nodeType":"YulFunctionCall","src":"929:12:33"},"nodeType":"YulExpressionStatement","src":"929:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:33"},"nodeType":"YulFunctionCall","src":"898:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:33"},"nodeType":"YulFunctionCall","src":"894:32:33"},"nodeType":"YulIf","src":"891:52:33"},{"nodeType":"YulAssignment","src":"952:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"962:18:33"},"nodeType":"YulFunctionCall","src":"962:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:33"}]},{"nodeType":"YulAssignment","src":"1000:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:33"},"nodeType":"YulFunctionCall","src":"1023:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1010:12:33"},"nodeType":"YulFunctionCall","src":"1010:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1000:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:33","type":""}],"src":"794:254:33"},{"body":{"nodeType":"YulBlock","src":"1148:92:33","statements":[{"nodeType":"YulAssignment","src":"1158:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:33"},"nodeType":"YulFunctionCall","src":"1166:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1225:6:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1218:6:33"},"nodeType":"YulFunctionCall","src":"1218:14:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1211:6:33"},"nodeType":"YulFunctionCall","src":"1211:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:33"},"nodeType":"YulFunctionCall","src":"1193:41:33"},"nodeType":"YulExpressionStatement","src":"1193:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1117:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1128:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1139:4:33","type":""}],"src":"1053:187:33"},{"body":{"nodeType":"YulBlock","src":"1346:76:33","statements":[{"nodeType":"YulAssignment","src":"1356:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:33"},"nodeType":"YulFunctionCall","src":"1364:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1356:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"1409:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:33"},"nodeType":"YulFunctionCall","src":"1391:25:33"},"nodeType":"YulExpressionStatement","src":"1391:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1326:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1337:4:33","type":""}],"src":"1245:177:33"},{"body":{"nodeType":"YulBlock","src":"1531:224:33","statements":[{"body":{"nodeType":"YulBlock","src":"1577:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1586:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1589:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1579:6:33"},"nodeType":"YulFunctionCall","src":"1579:12:33"},"nodeType":"YulExpressionStatement","src":"1579:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1552:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1548:3:33"},"nodeType":"YulFunctionCall","src":"1548:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1544:3:33"},"nodeType":"YulFunctionCall","src":"1544:32:33"},"nodeType":"YulIf","src":"1541:52:33"},{"nodeType":"YulAssignment","src":"1602:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1631:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1612:18:33"},"nodeType":"YulFunctionCall","src":"1612:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1602:6:33"}]},{"nodeType":"YulAssignment","src":"1650:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:33"},"nodeType":"YulFunctionCall","src":"1679:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1660:18:33"},"nodeType":"YulFunctionCall","src":"1660:38:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:33"}]},{"nodeType":"YulAssignment","src":"1707:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:33"},"nodeType":"YulFunctionCall","src":"1730:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1717:12:33"},"nodeType":"YulFunctionCall","src":"1717:32:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1707:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1481:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1492:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1504:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1512:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1520:6:33","type":""}],"src":"1427:328:33"},{"body":{"nodeType":"YulBlock","src":"1857:87:33","statements":[{"nodeType":"YulAssignment","src":"1867:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:33"},"nodeType":"YulFunctionCall","src":"1875:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1924:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1920:3:33"},"nodeType":"YulFunctionCall","src":"1920:17:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:33"},"nodeType":"YulFunctionCall","src":"1902:36:33"},"nodeType":"YulExpressionStatement","src":"1902:36:33"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1826:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1837:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:33","type":""}],"src":"1760:184:33"},{"body":{"nodeType":"YulBlock","src":"2019:116:33","statements":[{"body":{"nodeType":"YulBlock","src":"2065:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2074:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2067:6:33"},"nodeType":"YulFunctionCall","src":"2067:12:33"},"nodeType":"YulExpressionStatement","src":"2067:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2036:3:33"},"nodeType":"YulFunctionCall","src":"2036:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2032:3:33"},"nodeType":"YulFunctionCall","src":"2032:32:33"},"nodeType":"YulIf","src":"2029:52:33"},{"nodeType":"YulAssignment","src":"2090:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2119:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2100:18:33"},"nodeType":"YulFunctionCall","src":"2100:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:33"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1996:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2008:6:33","type":""}],"src":"1949:186:33"},{"body":{"nodeType":"YulBlock","src":"2227:173:33","statements":[{"body":{"nodeType":"YulBlock","src":"2273:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2282:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2285:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2275:6:33"},"nodeType":"YulFunctionCall","src":"2275:12:33"},"nodeType":"YulExpressionStatement","src":"2275:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2248:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2257:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2244:3:33"},"nodeType":"YulFunctionCall","src":"2244:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2269:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2240:3:33"},"nodeType":"YulFunctionCall","src":"2240:32:33"},"nodeType":"YulIf","src":"2237:52:33"},{"nodeType":"YulAssignment","src":"2298:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2327:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2308:18:33"},"nodeType":"YulFunctionCall","src":"2308:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2298:6:33"}]},{"nodeType":"YulAssignment","src":"2346:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2379:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:33"},"nodeType":"YulFunctionCall","src":"2375:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2356:18:33"},"nodeType":"YulFunctionCall","src":"2356:38:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2346:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2196:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2208:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2216:6:33","type":""}],"src":"2140:260:33"},{"body":{"nodeType":"YulBlock","src":"2460:325:33","statements":[{"nodeType":"YulAssignment","src":"2470:22:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2484:1:33","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2487:4:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2480:3:33"},"nodeType":"YulFunctionCall","src":"2480:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2470:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"2501:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2531:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"2537:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2527:3:33"},"nodeType":"YulFunctionCall","src":"2527:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2505:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2578:31:33","statements":[{"nodeType":"YulAssignment","src":"2580:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2594:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2602:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2590:3:33"},"nodeType":"YulFunctionCall","src":"2590:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2580:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2558:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2551:6:33"},"nodeType":"YulFunctionCall","src":"2551:26:33"},"nodeType":"YulIf","src":"2548:61:33"},{"body":{"nodeType":"YulBlock","src":"2668:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2696:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2701:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2692:3:33"},"nodeType":"YulFunctionCall","src":"2692:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2682:6:33"},"nodeType":"YulFunctionCall","src":"2682:31:33"},"nodeType":"YulExpressionStatement","src":"2682:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2733:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2736:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2726:6:33"},"nodeType":"YulFunctionCall","src":"2726:15:33"},"nodeType":"YulExpressionStatement","src":"2726:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2761:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2764:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2754:6:33"},"nodeType":"YulFunctionCall","src":"2754:15:33"},"nodeType":"YulExpressionStatement","src":"2754:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2624:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2647:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2655:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2644:2:33"},"nodeType":"YulFunctionCall","src":"2644:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2621:2:33"},"nodeType":"YulFunctionCall","src":"2621:38:33"},"nodeType":"YulIf","src":"2618:161:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2440:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2449:6:33","type":""}],"src":"2405:380:33"},{"body":{"nodeType":"YulBlock","src":"2838:177:33","statements":[{"body":{"nodeType":"YulBlock","src":"2873:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2894:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2901:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2906:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2897:3:33"},"nodeType":"YulFunctionCall","src":"2897:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2887:6:33"},"nodeType":"YulFunctionCall","src":"2887:31:33"},"nodeType":"YulExpressionStatement","src":"2887:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2941:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2931:6:33"},"nodeType":"YulFunctionCall","src":"2931:15:33"},"nodeType":"YulExpressionStatement","src":"2931:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2966:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2969:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2959:6:33"},"nodeType":"YulFunctionCall","src":"2959:15:33"},"nodeType":"YulExpressionStatement","src":"2959:15:33"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2854:1:33"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2861:1:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2857:3:33"},"nodeType":"YulFunctionCall","src":"2857:6:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2851:2:33"},"nodeType":"YulFunctionCall","src":"2851:13:33"},"nodeType":"YulIf","src":"2848:136:33"},{"nodeType":"YulAssignment","src":"2993:16:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3004:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"3007:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:33"},"nodeType":"YulFunctionCall","src":"3000:9:33"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2993:3:33"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2821:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"2824:1:33","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2830:3:33","type":""}],"src":"2790:225:33"},{"body":{"nodeType":"YulBlock","src":"3194:227:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3211:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3222:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3204:6:33"},"nodeType":"YulFunctionCall","src":"3204:21:33"},"nodeType":"YulExpressionStatement","src":"3204:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3245:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3256:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3241:3:33"},"nodeType":"YulFunctionCall","src":"3241:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"3261:2:33","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3234:6:33"},"nodeType":"YulFunctionCall","src":"3234:30:33"},"nodeType":"YulExpressionStatement","src":"3234:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3295:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:33"},"nodeType":"YulFunctionCall","src":"3280:18:33"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3300:34:33","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3273:6:33"},"nodeType":"YulFunctionCall","src":"3273:62:33"},"nodeType":"YulExpressionStatement","src":"3273:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3355:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3366:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3351:3:33"},"nodeType":"YulFunctionCall","src":"3351:18:33"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3371:7:33","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3344:6:33"},"nodeType":"YulFunctionCall","src":"3344:35:33"},"nodeType":"YulExpressionStatement","src":"3344:35:33"},{"nodeType":"YulAssignment","src":"3388:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3400:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3411:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3396:3:33"},"nodeType":"YulFunctionCall","src":"3396:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3388:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3171:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3185:4:33","type":""}],"src":"3020:401:33"},{"body":{"nodeType":"YulBlock","src":"3600:226:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3617:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3628:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3610:6:33"},"nodeType":"YulFunctionCall","src":"3610:21:33"},"nodeType":"YulExpressionStatement","src":"3610:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3651:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3662:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:33"},"nodeType":"YulFunctionCall","src":"3647:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"3667:2:33","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3640:6:33"},"nodeType":"YulFunctionCall","src":"3640:30:33"},"nodeType":"YulExpressionStatement","src":"3640:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:33"},"nodeType":"YulFunctionCall","src":"3686:18:33"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3706:34:33","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:33"},"nodeType":"YulFunctionCall","src":"3679:62:33"},"nodeType":"YulExpressionStatement","src":"3679:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3761:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3772:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3757:3:33"},"nodeType":"YulFunctionCall","src":"3757:18:33"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3777:6:33","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3750:6:33"},"nodeType":"YulFunctionCall","src":"3750:34:33"},"nodeType":"YulExpressionStatement","src":"3750:34:33"},{"nodeType":"YulAssignment","src":"3793:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3805:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3816:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3801:3:33"},"nodeType":"YulFunctionCall","src":"3801:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3793:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3577:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3591:4:33","type":""}],"src":"3426:400:33"},{"body":{"nodeType":"YulBlock","src":"4005:224:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4022:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4033:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4015:6:33"},"nodeType":"YulFunctionCall","src":"4015:21:33"},"nodeType":"YulExpressionStatement","src":"4015:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4056:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4067:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4052:3:33"},"nodeType":"YulFunctionCall","src":"4052:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"4072:2:33","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4045:6:33"},"nodeType":"YulFunctionCall","src":"4045:30:33"},"nodeType":"YulExpressionStatement","src":"4045:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4095:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4106:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4091:3:33"},"nodeType":"YulFunctionCall","src":"4091:18:33"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4111:34:33","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4084:6:33"},"nodeType":"YulFunctionCall","src":"4084:62:33"},"nodeType":"YulExpressionStatement","src":"4084:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4166:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4177:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:33"},"nodeType":"YulFunctionCall","src":"4162:18:33"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4182:4:33","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:33"},"nodeType":"YulFunctionCall","src":"4155:32:33"},"nodeType":"YulExpressionStatement","src":"4155:32:33"},{"nodeType":"YulAssignment","src":"4196:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4208:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4219:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4204:3:33"},"nodeType":"YulFunctionCall","src":"4204:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4196:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3982:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3996:4:33","type":""}],"src":"3831:398:33"},{"body":{"nodeType":"YulBlock","src":"4408:179:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4425:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4436:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4418:6:33"},"nodeType":"YulFunctionCall","src":"4418:21:33"},"nodeType":"YulExpressionStatement","src":"4418:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4459:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4470:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:33"},"nodeType":"YulFunctionCall","src":"4455:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"4475:2:33","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4448:6:33"},"nodeType":"YulFunctionCall","src":"4448:30:33"},"nodeType":"YulExpressionStatement","src":"4448:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4498:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4509:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4494:3:33"},"nodeType":"YulFunctionCall","src":"4494:18:33"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4514:31:33","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4487:6:33"},"nodeType":"YulFunctionCall","src":"4487:59:33"},"nodeType":"YulExpressionStatement","src":"4487:59:33"},{"nodeType":"YulAssignment","src":"4555:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4567:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4578:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4563:3:33"},"nodeType":"YulFunctionCall","src":"4563:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4555:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4385:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4399:4:33","type":""}],"src":"4234:353:33"},{"body":{"nodeType":"YulBlock","src":"4766:227:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4783:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4794:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:33"},"nodeType":"YulFunctionCall","src":"4776:21:33"},"nodeType":"YulExpressionStatement","src":"4776:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4817:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4828:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4813:3:33"},"nodeType":"YulFunctionCall","src":"4813:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:33","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4806:6:33"},"nodeType":"YulFunctionCall","src":"4806:30:33"},"nodeType":"YulExpressionStatement","src":"4806:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4856:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4867:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4852:3:33"},"nodeType":"YulFunctionCall","src":"4852:18:33"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4872:34:33","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4845:6:33"},"nodeType":"YulFunctionCall","src":"4845:62:33"},"nodeType":"YulExpressionStatement","src":"4845:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4927:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4938:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4923:3:33"},"nodeType":"YulFunctionCall","src":"4923:18:33"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4943:7:33","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4916:6:33"},"nodeType":"YulFunctionCall","src":"4916:35:33"},"nodeType":"YulExpressionStatement","src":"4916:35:33"},{"nodeType":"YulAssignment","src":"4960:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4983:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:33"},"nodeType":"YulFunctionCall","src":"4968:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4960:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4743:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4757:4:33","type":""}],"src":"4592:401:33"},{"body":{"nodeType":"YulBlock","src":"5172:225:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5189:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5200:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5182:6:33"},"nodeType":"YulFunctionCall","src":"5182:21:33"},"nodeType":"YulExpressionStatement","src":"5182:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5223:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5234:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5219:3:33"},"nodeType":"YulFunctionCall","src":"5219:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"5239:2:33","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5212:6:33"},"nodeType":"YulFunctionCall","src":"5212:30:33"},"nodeType":"YulExpressionStatement","src":"5212:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5262:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5273:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5258:3:33"},"nodeType":"YulFunctionCall","src":"5258:18:33"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5278:34:33","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5251:6:33"},"nodeType":"YulFunctionCall","src":"5251:62:33"},"nodeType":"YulExpressionStatement","src":"5251:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5333:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5344:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5329:3:33"},"nodeType":"YulFunctionCall","src":"5329:18:33"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5349:5:33","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5322:6:33"},"nodeType":"YulFunctionCall","src":"5322:33:33"},"nodeType":"YulExpressionStatement","src":"5322:33:33"},{"nodeType":"YulAssignment","src":"5364:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5387:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5372:3:33"},"nodeType":"YulFunctionCall","src":"5372:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5364:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5149:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5163:4:33","type":""}],"src":"4998:399:33"},{"body":{"nodeType":"YulBlock","src":"5576:228:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5593:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5604:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5586:6:33"},"nodeType":"YulFunctionCall","src":"5586:21:33"},"nodeType":"YulExpressionStatement","src":"5586:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5627:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5623:3:33"},"nodeType":"YulFunctionCall","src":"5623:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"5643:2:33","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5616:6:33"},"nodeType":"YulFunctionCall","src":"5616:30:33"},"nodeType":"YulExpressionStatement","src":"5616:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5666:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5677:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5662:3:33"},"nodeType":"YulFunctionCall","src":"5662:18:33"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5682:34:33","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5655:6:33"},"nodeType":"YulFunctionCall","src":"5655:62:33"},"nodeType":"YulExpressionStatement","src":"5655:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5748:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:33"},"nodeType":"YulFunctionCall","src":"5733:18:33"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5753:8:33","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5726:6:33"},"nodeType":"YulFunctionCall","src":"5726:36:33"},"nodeType":"YulExpressionStatement","src":"5726:36:33"},{"nodeType":"YulAssignment","src":"5771:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5783:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5794:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5779:3:33"},"nodeType":"YulFunctionCall","src":"5779:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5771:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5553:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5567:4:33","type":""}],"src":"5402:402:33"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a6610190565b6040516100b39190610691565b60405180910390f35b6100cf6100ca366004610702565b610222565b60405190151581526020016100b3565b6035545b6040519081526020016100b3565b6100cf6100ff36600461072c565b61023a565b604051601281526020016100b3565b6100cf610121366004610702565b61025e565b6100e3610134366004610768565b6001600160a01b031660009081526033602052604090205490565b6100a6610280565b6100cf610165366004610702565b61028f565b6100cf610178366004610702565b61030f565b6100e361018b36600461078a565b61031d565b60606036805461019f906107bd565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906107bd565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600033610230818585610348565b5060019392505050565b60003361024885828561046c565b6102538585856104e6565b506001949350505050565b600033610230818585610271838361031d565b61027b91906107f8565b610348565b60606037805461019f906107bd565b6000338161029d828661031d565b9050838110156103025760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102538286868403610348565b6000336102308185856104e6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103aa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f9565b6001600160a01b03821661040b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f9565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610478848461031d565b905060001981146104e057818110156104d35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102f9565b6104e08484848403610348565b50505050565b6001600160a01b03831661054a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f9565b6001600160a01b0382166105ac5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f9565b6001600160a01b038316600090815260336020526040902054818110156106245760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f9565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106849086815260200190565b60405180910390a36104e0565b600060208083528351808285015260005b818110156106be578581018301518582016040015282016106a2565b818111156106d0576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106fd57600080fd5b919050565b6000806040838503121561071557600080fd5b61071e836106e6565b946020939093013593505050565b60008060006060848603121561074157600080fd5b61074a846106e6565b9250610758602085016106e6565b9150604084013590509250925092565b60006020828403121561077a57600080fd5b610783826106e6565b9392505050565b6000806040838503121561079d57600080fd5b6107a6836106e6565b91506107b4602084016106e6565b90509250929050565b600181811c908216806107d157607f821691505b602082108114156107f257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561081957634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122011785116ce4a43adaf0136f736490b969629ecac320c16c3bb91449e37198c6d64736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x72C JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x280 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST PUSH2 0xCF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x7BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x348 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x248 DUP6 DUP3 DUP6 PUSH2 0x46C JUMP JUMPDEST PUSH2 0x253 DUP6 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x271 DUP4 DUP4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x29D DUP3 DUP7 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x253 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP5 DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x684 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6BE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6A2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6E6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74A DUP5 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 POP PUSH2 0x758 PUSH1 0x20 DUP6 ADD PUSH2 0x6E6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x783 DUP3 PUSH2 0x6E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A6 DUP4 PUSH2 0x6E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B4 PUSH1 0x20 DUP5 ADD PUSH2 0x6E6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x7F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x819 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH25 0x5116CE4A43ADAF0136F736490B969629ECAC320C16C3BB9144 SWAP15 CALLDATACOPY NOT DUP13 PUSH14 0x64736F6C634300080C0033000000 ","sourceMap":"1485:12159:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4773:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:33;;1211:22;1193:41;;1181:2;1166:18;4773:197:13;1053:187:33;3584:106:13;3671:12;;3584:106;;;1391:25:33;;;1379:2;1364:18;3584:106:13;1245:177:33;5532:286:13;;;;;;:::i;:::-;;:::i;3433:91::-;;;3515:2;1902:36:33;;1890:2;1875:18;3433:91:13;1760:184:33;6213:234:13;;;;;;:::i;:::-;;:::i;3748:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3848:18:13;3822:7;3848:18;;;:9;:18;;;;;;;3748:125;2707:102;;;:::i;6934:427::-;;;;;;:::i;:::-;;:::i;4069:189::-;;;;;;:::i;:::-;;:::i;4316:149::-;;;;;;:::i;:::-;;:::i;2496:98::-;2550:13;2582:5;2575:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:98;:::o;4773:197::-;4856:4;929:10:19;4910:32:13;929:10:19;4926:7:13;4935:6;4910:8;:32::i;:::-;-1:-1:-1;4959:4:13;;4773:197;-1:-1:-1;;;4773:197:13:o;5532:286::-;5659:4;929:10:19;5715:38:13;5731:4;929:10:19;5746:6:13;5715:15;:38::i;:::-;5763:27;5773:4;5779:2;5783:6;5763:9;:27::i;:::-;-1:-1:-1;5807:4:13;;5532:286;-1:-1:-1;;;;5532:286:13:o;6213:234::-;6301:4;929:10:19;6355:64:13;929:10:19;6371:7:13;6408:10;6380:25;929:10:19;6371:7:13;6380:9;:25::i;:::-;:38;;;;:::i;:::-;6355:8;:64::i;2707:102::-;2763:13;2795:7;2788:14;;;;;:::i;6934:427::-;7027:4;929:10:19;7027:4:13;7108:25;929:10:19;7125:7:13;7108:9;:25::i;:::-;7081:52;;7171:15;7151:16;:35;;7143:85;;;;-1:-1:-1;;;7143:85:13;;3222:2:33;7143:85:13;;;3204:21:33;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:33;;;3344:35;3396:19;;7143:85:13;;;;;;;;;7262:60;7271:5;7278:7;7306:15;7287:16;:34;7262:8;:60::i;4069:189::-;4148:4;929:10:19;4202:28:13;929:10:19;4219:2:13;4223:6;4202:9;:28::i;4316:149::-;-1:-1:-1;;;;;4431:18:13;;;4405:7;4431:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4316:149::o;10846:370::-;-1:-1:-1;;;;;10977:19:13;;10969:68;;;;-1:-1:-1;;;10969:68:13;;3628:2:33;10969:68:13;;;3610:21:33;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:33;;;3750:34;3801:19;;10969:68:13;3426:400:33;10969:68:13;-1:-1:-1;;;;;11055:21:13;;11047:68;;;;-1:-1:-1;;;11047:68:13;;4033:2:33;11047:68:13;;;4015:21:33;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:33;;;4155:32;4204:19;;11047:68:13;3831:398:33;11047:68:13;-1:-1:-1;;;;;11126:18:13;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11177:32;;1391:25:33;;;11177:32:13;;1364:18:33;11177:32:13;;;;;;;10846:370;;;:::o;11497:441::-;11627:24;11654:25;11664:5;11671:7;11654:9;:25::i;:::-;11627:52;;-1:-1:-1;;11693:16:13;:37;11689:243;;11774:6;11754:16;:26;;11746:68;;;;-1:-1:-1;;;11746:68:13;;4436:2:33;11746:68:13;;;4418:21:33;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11746:68:13;4234:353:33;11746:68:13;11856:51;11865:5;11872:7;11900:6;11881:16;:25;11856:8;:51::i;:::-;11617:321;11497:441;;;:::o;7815:818::-;-1:-1:-1;;;;;7941:18:13;;7933:68;;;;-1:-1:-1;;;7933:68:13;;4794:2:33;7933:68:13;;;4776:21:33;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:33;;;4916:35;4968:19;;7933:68:13;4592:401:33;7933:68:13;-1:-1:-1;;;;;8019:16:13;;8011:64;;;;-1:-1:-1;;;8011:64:13;;5200:2:33;8011:64:13;;;5182:21:33;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:33;;;5322:33;5372:19;;8011:64:13;4998:399:33;8011:64:13;-1:-1:-1;;;;;8157:15:13;;8135:19;8157:15;;;:9;:15;;;;;;8190:21;;;;8182:72;;;;-1:-1:-1;;;8182:72:13;;5604:2:33;8182:72:13;;;5586:21:33;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:33;;;5726:36;5779:19;;8182:72:13;5402:402:33;8182:72:13;-1:-1:-1;;;;;8288:15:13;;;;;;;:9;:15;;;;;;8306:20;;;8288:38;;8503:13;;;;;;;;;;:23;;;;;;8552:26;;;;;;8320:6;1391:25:33;;1379:2;1364:18;;1245:177;8552:26:13;;;;;;;;8589:37;12522:121;14:597:33;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:33;574:15;-1:-1:-1;;570:29:33;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:33:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:33;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:33:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:33:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:33;;2790:225::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x49dc49ecb70251b262769f4cd54fea0e6714d84e30b2737885c76194c285b452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://151164eab6481d161ba4e4908a9810faebfe784f5f4eeffb1219a6e7865384b9\",\"dweb:/ipfs/QmesjesP7AJFkZHx1XXkdTvGgfzYu5AkC4CTsGFjNYV7XZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1710,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1716,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1718,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1720,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1722,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":2302,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ERC20BurnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x49dc49ecb70251b262769f4cd54fea0e6714d84e30b2737885c76194c285b452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://151164eab6481d161ba4e4908a9810faebfe784f5f4eeffb1219a6e7865384b9\",\"dweb:/ipfs/QmesjesP7AJFkZHx1XXkdTvGgfzYu5AkC4CTsGFjNYV7XZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1710,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1716,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1718,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1720,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1722,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":2302,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":2444,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ERC20PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":\"ERC20PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x49dc49ecb70251b262769f4cd54fea0e6714d84e30b2737885c76194c285b452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://151164eab6481d161ba4e4908a9810faebfe784f5f4eeffb1219a6e7865384b9\",\"dweb:/ipfs/QmesjesP7AJFkZHx1XXkdTvGgfzYu5AkC4CTsGFjNYV7XZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x5bba367c6c5b9bc3ffb2a87f6aa7437955f0697ab8fcd8e38d2a4985be6469fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5cebfffc457ba7de28368a4e36d0543d0ba6247ab4deff8cc6e04654aacf089\",\"dweb:/ipfs/Qmc5rymHyZeMhnJyCf4egyX2nSJwPzFYAgUtcWea4wrQrC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1710,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1716,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1718,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1720,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1722,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":2302,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":1425,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_paused","offset":0,"slot":"101","type":"t_bool"},{"astId":1530,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":2504,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdab86c8aa0ebb0647624dd33365a0fafab9e9ff54d0e8ecb2b7caf8eb75ee4464736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xAB DUP7 0xC8 0xAA 0xE 0xBB MOD SELFBALANCE PUSH3 0x4DD333 PUSH6 0xA0FAFAB9E9FF SLOAD 0xD0 0xE8 0xEC 0xB2 0xB7 0xCA 0xF8 0xEB PUSH22 0xEE4464736F6C634300080C0033000000000000000000 ","sourceMap":"199:8087:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;199:8087:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdab86c8aa0ebb0647624dd33365a0fafab9e9ff54d0e8ecb2b7caf8eb75ee4464736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xAB DUP7 0xC8 0xAA 0xE 0xBB MOD SELFBALANCE PUSH3 0x4DD333 PUSH6 0xA0FAFAB9E9FF SLOAD 0xD0 0xE8 0xEC 0xB2 0xB7 0xCA 0xF8 0xEB PUSH22 0xEE4464736F6C634300080C0033000000000000000000 ","sourceMap":"199:8087:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcb06187f74cea9b73c077956c0534cec3daa33f2bc43ecd07d9c6f8225c438d64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xB0 PUSH2 0x87F7 0x4C 0xEA SWAP12 PUSH20 0xC077956C0534CEC3DAA33F2BC43ECD07D9C6F822 0x5C NUMBER DUP14 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"1279:1402:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1279:1402:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcb06187f74cea9b73c077956c0534cec3daa33f2bc43ecd07d9c6f8225c438d64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xB0 PUSH2 0x87F7 0x4C 0xEA SWAP12 PUSH20 0xC077956C0534CEC3DAA33F2BC43ECD07D9C6F822 0x5C NUMBER DUP14 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"1279:1402:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6952f7082f159d25871dc8347326179d88a39efe3138da31e3a79e2fb6d0dbf64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 SWAP6 0x2F PUSH17 0x82F159D25871DC8347326179D88A39EFE3 SGT DUP14 LOG3 0x1E GASPRICE PUSH26 0xE2FB6D0DBF64736F6C634300080C003300000000000000000000 ","sourceMap":"204:2098:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;204:2098:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d6952f7082f159d25871dc8347326179d88a39efe3138da31e3a79e2fb6d0dbf64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 SWAP6 0x2F PUSH17 0x82F159D25871DC8347326179D88A39EFE3 SGT DUP14 LOG3 0x1E GASPRICE PUSH26 0xE2FB6D0DBF64736F6C634300080C003300000000000000000000 ","sourceMap":"204:2098:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x992b28e9cd85d3614bf2f0ad8225164128abdf44fb533db8587e8a64e0d9883c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358ad71c829bd135ac3cb278b66ce7c54647383aaa7285fcca3cd1f4f316e939\",\"dweb:/ipfs/QmWs8i1stQpyv9eX8XafczmPRLVQhuhWncYYgiz6TKs2bg\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ECDSAUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7c4fc589667e3d81a67042d8b0046b5e7a299f6b205fc8cf0bf1b49c017659d64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xC4 0xFC PC SWAP7 PUSH8 0xE3D81A67042D8B00 CHAINID 0xB5 0xE7 LOG2 SWAP10 0xF6 0xB2 SDIV 0xFC DUP13 CREATE 0xBF SHL 0x49 0xC0 OR PUSH6 0x9D64736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ","sourceMap":"385:8190:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;385:8190:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7c4fc589667e3d81a67042d8b0046b5e7a299f6b205fc8cf0bf1b49c017659d64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xC4 0xFC PC SWAP7 PUSH8 0xE3D81A67042D8B00 CHAINID 0xB5 0xE7 LOG2 SWAP10 0xF6 0xB2 SDIV 0xFC DUP13 CREATE 0xBF SHL 0x49 0xC0 OR PUSH6 0x9D64736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ","sourceMap":"385:8190:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":\"ECDSAUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x992b28e9cd85d3614bf2f0ad8225164128abdf44fb533db8587e8a64e0d9883c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358ad71c829bd135ac3cb278b66ce7c54647383aaa7285fcca3cd1f4f316e939\",\"dweb:/ipfs/QmWs8i1stQpyv9eX8XafczmPRLVQhuhWncYYgiz6TKs2bg\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x23aaa3522a84e9bf929dc3ecc4a7c861c747512be21587aca830470698989856\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58ec19cf3f6a0e48fe307466068a256449537ec9c650e2462f4ebf8904f7b23c\",\"dweb:/ipfs/QmaWPF1zvDawipcvN6KcirE618FW9RB7wVZeX1WUdvqbYW\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:storage-size\":\"52\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x992b28e9cd85d3614bf2f0ad8225164128abdf44fb533db8587e8a64e0d9883c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358ad71c829bd135ac3cb278b66ce7c54647383aaa7285fcca3cd1f4f316e939\",\"dweb:/ipfs/QmWs8i1stQpyv9eX8XafczmPRLVQhuhWncYYgiz6TKs2bg\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x23aaa3522a84e9bf929dc3ecc4a7c861c747512be21587aca830470698989856\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58ec19cf3f6a0e48fe307466068a256449537ec9c650e2462f4ebf8904f7b23c\",\"dweb:/ipfs/QmaWPF1zvDawipcvN6KcirE618FW9RB7wVZeX1WUdvqbYW\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x495395a87eff6e15ae08633a506eb1be2117f22ddb8eac0f8240c48685b65e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cb0940ec9ccbe8a54378e9d6ad917124794010b050d098cc4a020591c2ae29e\",\"dweb:/ipfs/QmV1qtda2t8ATnjQ5dtgApahEvP6ZB3ZWZKpxQa6dFzu2x\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3461,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_HASHED_NAME","offset":0,"slot":"1","type":"t_bytes32"},{"astId":3463,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_HASHED_VERSION","offset":0,"slot":"2","type":"t_bytes32"},{"astId":3601,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"__gap","offset":0,"slot":"3","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol":{"EscrowUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"payee","type":"address"},{"indexed":false,"internalType":"uint256","name":"weiAmount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"payee","type":"address"},{"indexed":false,"internalType":"uint256","name":"weiAmount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"payee","type":"address"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"payee","type":"address"}],"name":"depositsOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"payee","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506106df806100206000396000f3fe6080604052600436106100605760003560e01c806351cff8d914610065578063715018a6146100875780638129fc1c1461009c5780638da5cb5b146100b1578063e3a9db1a146100de578063f2fde38b14610122578063f340fa0114610142575b600080fd5b34801561007157600080fd5b50610085610080366004610614565b610155565b005b34801561009357600080fd5b506100856101cc565b3480156100a857600080fd5b506100856101e0565b3480156100bd57600080fd5b506033546040516001600160a01b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b506101146100f9366004610614565b6001600160a01b031660009081526065602052604090205490565b6040519081526020016100d5565b34801561012e57600080fd5b5061008561013d366004610614565b6102f6565b610085610150366004610614565b61036c565b61015d6103de565b6001600160a01b03811660008181526065602052604081208054919055906101859082610438565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516101c091815260200190565b60405180910390a25050565b6101d46103de565b6101de6000610553565b565b600054610100900460ff16158080156102005750600054600160ff909116105b8061021a5750303b15801561021a575060005460ff166001145b6102825760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156102a5576000805461ff0019166101001790555b6102ad6105a5565b80156102f3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6102fe6103de565b6001600160a01b0381166103635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610279565b6102f381610553565b6103746103de565b6001600160a01b03811660009081526065602052604081208054349283929161039e908490610638565b90915550506040518181526001600160a01b038316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906020016101c0565b6033546001600160a01b031633146101de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610279565b804710156104885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610279565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104d5576040519150601f19603f3d011682016040523d82523d6000602084013e6104da565b606091505b505090508061054e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726044820152791958da5c1a595b9d081b585e481a185d99481c995d995c9d195960321b6064820152608401610279565b505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166105cc5760405162461bcd60e51b81526004016102799061065e565b6101de600054610100900460ff166105f65760405162461bcd60e51b81526004016102799061065e565b6101de33610553565b6001600160a01b03811681146102f357600080fd5b60006020828403121561062657600080fd5b8135610631816105ff565b9392505050565b6000821982111561065957634e487b7160e01b600052601160045260246000fd5b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212202c8271a2cea9abdeb9f1af907d388d181a93436d618e97c9dd7d87f028602e6b64736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x1CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x15D PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE SWAP1 PUSH2 0x185 SWAP1 DUP3 PUSH2 0x438 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 PUSH2 0x553 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x200 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x21A JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2AD PUSH2 0x5A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x2F3 DUP2 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0x39E SWAP1 DUP5 SWAP1 PUSH2 0x638 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x279 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x1958DA5C1A595B9D081B585E481A185D99481C995D995C9D1959 PUSH1 0x32 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x279 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1DE CALLER PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x631 DUP2 PUSH2 0x5FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x659 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP3 PUSH18 0xA2CEA9ABDEB9F1AF907D388D181A93436D61 DUP15 SWAP8 0xC9 0xDD PUSH30 0x87F028602E6B64736F6C634300080C003300000000000000000000000000 ","sourceMap":"893:2026:25:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Escrow_init_3624":{"entryPoint":1445,"id":3624,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_616":{"entryPoint":null,"id":616,"parameterSlots":0,"returnSlots":0},"@_checkOwner_647":{"entryPoint":990,"id":647,"parameterSlots":0,"returnSlots":0},"@_msgSender_2841":{"entryPoint":null,"id":2841,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_704":{"entryPoint":1363,"id":704,"parameterSlots":1,"returnSlots":0},"@deposit_3695":{"entryPoint":876,"id":3695,"parameterSlots":1,"returnSlots":0},"@depositsOf_3670":{"entryPoint":null,"id":3670,"parameterSlots":1,"returnSlots":1},"@initialize_3639":{"entryPoint":480,"id":3639,"parameterSlots":0,"returnSlots":0},"@isContract_2548":{"entryPoint":null,"id":2548,"parameterSlots":1,"returnSlots":1},"@owner_633":{"entryPoint":null,"id":633,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_661":{"entryPoint":460,"id":661,"parameterSlots":0,"returnSlots":0},"@sendValue_2582":{"entryPoint":1080,"id":2582,"parameterSlots":2,"returnSlots":0},"@transferOwnership_684":{"entryPoint":758,"id":684,"parameterSlots":1,"returnSlots":0},"@withdraw_3727":{"entryPoint":341,"id":3727,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":1556,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1592,"id":null,"parameterSlots":2,"returnSlots":1},"validator_revert_address_payable":{"entryPoint":1535,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4092:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"67:86:33","statements":[{"body":{"nodeType":"YulBlock","src":"131:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"140:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"143:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"133:6:33"},"nodeType":"YulFunctionCall","src":"133:12:33"},"nodeType":"YulExpressionStatement","src":"133:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"90:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"101:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"116:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"121:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"112:3:33"},"nodeType":"YulFunctionCall","src":"112:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"125:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"108:3:33"},"nodeType":"YulFunctionCall","src":"108:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"97:3:33"},"nodeType":"YulFunctionCall","src":"97:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"87:2:33"},"nodeType":"YulFunctionCall","src":"87:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"80:6:33"},"nodeType":"YulFunctionCall","src":"80:50:33"},"nodeType":"YulIf","src":"77:70:33"}]},"name":"validator_revert_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"56:5:33","type":""}],"src":"14:139:33"},{"body":{"nodeType":"YulBlock","src":"236:185:33","statements":[{"body":{"nodeType":"YulBlock","src":"282:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"291:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"294:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"284:6:33"},"nodeType":"YulFunctionCall","src":"284:12:33"},"nodeType":"YulExpressionStatement","src":"284:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"257:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"266:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"253:3:33"},"nodeType":"YulFunctionCall","src":"253:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"278:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"249:3:33"},"nodeType":"YulFunctionCall","src":"249:32:33"},"nodeType":"YulIf","src":"246:52:33"},{"nodeType":"YulVariableDeclaration","src":"307:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"333:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"320:12:33"},"nodeType":"YulFunctionCall","src":"320:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"311:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"385:5:33"}],"functionName":{"name":"validator_revert_address_payable","nodeType":"YulIdentifier","src":"352:32:33"},"nodeType":"YulFunctionCall","src":"352:39:33"},"nodeType":"YulExpressionStatement","src":"352:39:33"},{"nodeType":"YulAssignment","src":"400:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"410:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"400:6:33"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"202:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"213:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"225:6:33","type":""}],"src":"158:263:33"},{"body":{"nodeType":"YulBlock","src":"527:102:33","statements":[{"nodeType":"YulAssignment","src":"537:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"549:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"560:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:33"},"nodeType":"YulFunctionCall","src":"545:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"537:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"579:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"594:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"610:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"615:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"606:3:33"},"nodeType":"YulFunctionCall","src":"606:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"619:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"602:3:33"},"nodeType":"YulFunctionCall","src":"602:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"590:3:33"},"nodeType":"YulFunctionCall","src":"590:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"572:6:33"},"nodeType":"YulFunctionCall","src":"572:51:33"},"nodeType":"YulExpressionStatement","src":"572:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"496:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"507:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"518:4:33","type":""}],"src":"426:203:33"},{"body":{"nodeType":"YulBlock","src":"704:185:33","statements":[{"body":{"nodeType":"YulBlock","src":"750:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"759:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"762:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"752:6:33"},"nodeType":"YulFunctionCall","src":"752:12:33"},"nodeType":"YulExpressionStatement","src":"752:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"725:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"734:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"721:3:33"},"nodeType":"YulFunctionCall","src":"721:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"746:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"717:3:33"},"nodeType":"YulFunctionCall","src":"717:32:33"},"nodeType":"YulIf","src":"714:52:33"},{"nodeType":"YulVariableDeclaration","src":"775:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"788:12:33"},"nodeType":"YulFunctionCall","src":"788:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"779:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"853:5:33"}],"functionName":{"name":"validator_revert_address_payable","nodeType":"YulIdentifier","src":"820:32:33"},"nodeType":"YulFunctionCall","src":"820:39:33"},"nodeType":"YulExpressionStatement","src":"820:39:33"},{"nodeType":"YulAssignment","src":"868:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"878:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"868:6:33"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"670:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"681:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"693:6:33","type":""}],"src":"634:255:33"},{"body":{"nodeType":"YulBlock","src":"995:76:33","statements":[{"nodeType":"YulAssignment","src":"1005:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1017:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1028:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1013:3:33"},"nodeType":"YulFunctionCall","src":"1013:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1005:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1047:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"1058:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1040:6:33"},"nodeType":"YulFunctionCall","src":"1040:25:33"},"nodeType":"YulExpressionStatement","src":"1040:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"964:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"975:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"986:4:33","type":""}],"src":"894:177:33"},{"body":{"nodeType":"YulBlock","src":"1250:236:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1267:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1278:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1260:6:33"},"nodeType":"YulFunctionCall","src":"1260:21:33"},"nodeType":"YulExpressionStatement","src":"1260:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1301:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1312:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1297:3:33"},"nodeType":"YulFunctionCall","src":"1297:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"1317:2:33","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1290:6:33"},"nodeType":"YulFunctionCall","src":"1290:30:33"},"nodeType":"YulExpressionStatement","src":"1290:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1340:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1351:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1336:3:33"},"nodeType":"YulFunctionCall","src":"1336:18:33"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"1356:34:33","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1329:6:33"},"nodeType":"YulFunctionCall","src":"1329:62:33"},"nodeType":"YulExpressionStatement","src":"1329:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1411:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1422:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1407:3:33"},"nodeType":"YulFunctionCall","src":"1407:18:33"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"1427:16:33","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1400:6:33"},"nodeType":"YulFunctionCall","src":"1400:44:33"},"nodeType":"YulExpressionStatement","src":"1400:44:33"},{"nodeType":"YulAssignment","src":"1453:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1465:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1476:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1461:3:33"},"nodeType":"YulFunctionCall","src":"1461:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1453:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1227:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1241:4:33","type":""}],"src":"1076:410:33"},{"body":{"nodeType":"YulBlock","src":"1598:87:33","statements":[{"nodeType":"YulAssignment","src":"1608:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1620:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1631:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1616:3:33"},"nodeType":"YulFunctionCall","src":"1616:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1608:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1650:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1665:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"1673:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1661:3:33"},"nodeType":"YulFunctionCall","src":"1661:17:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1643:6:33"},"nodeType":"YulFunctionCall","src":"1643:36:33"},"nodeType":"YulExpressionStatement","src":"1643:36:33"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1567:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1578:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1589:4:33","type":""}],"src":"1491:194:33"},{"body":{"nodeType":"YulBlock","src":"1864:228:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1881:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1892:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:33"},"nodeType":"YulFunctionCall","src":"1874:21:33"},"nodeType":"YulExpressionStatement","src":"1874:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1915:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1926:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:33"},"nodeType":"YulFunctionCall","src":"1911:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"1931:2:33","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1904:6:33"},"nodeType":"YulFunctionCall","src":"1904:30:33"},"nodeType":"YulExpressionStatement","src":"1904:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1954:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1965:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1950:3:33"},"nodeType":"YulFunctionCall","src":"1950:18:33"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1970:34:33","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1943:6:33"},"nodeType":"YulFunctionCall","src":"1943:62:33"},"nodeType":"YulExpressionStatement","src":"1943:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2025:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2036:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2021:3:33"},"nodeType":"YulFunctionCall","src":"2021:18:33"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"2041:8:33","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2014:6:33"},"nodeType":"YulFunctionCall","src":"2014:36:33"},"nodeType":"YulExpressionStatement","src":"2014:36:33"},{"nodeType":"YulAssignment","src":"2059:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2071:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2082:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:33"},"nodeType":"YulFunctionCall","src":"2067:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2059:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1841:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1855:4:33","type":""}],"src":"1690:402:33"},{"body":{"nodeType":"YulBlock","src":"2145:177:33","statements":[{"body":{"nodeType":"YulBlock","src":"2180:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2201:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2208:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2213:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2204:3:33"},"nodeType":"YulFunctionCall","src":"2204:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2194:6:33"},"nodeType":"YulFunctionCall","src":"2194:31:33"},"nodeType":"YulExpressionStatement","src":"2194:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2245:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2248:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2238:6:33"},"nodeType":"YulFunctionCall","src":"2238:15:33"},"nodeType":"YulExpressionStatement","src":"2238:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2273:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2276:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2266:6:33"},"nodeType":"YulFunctionCall","src":"2266:15:33"},"nodeType":"YulExpressionStatement","src":"2266:15:33"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2161:1:33"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2168:1:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2164:3:33"},"nodeType":"YulFunctionCall","src":"2164:6:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2158:2:33"},"nodeType":"YulFunctionCall","src":"2158:13:33"},"nodeType":"YulIf","src":"2155:136:33"},{"nodeType":"YulAssignment","src":"2300:16:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2311:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"2314:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2307:3:33"},"nodeType":"YulFunctionCall","src":"2307:9:33"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2300:3:33"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2128:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"2131:1:33","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2137:3:33","type":""}],"src":"2097:225:33"},{"body":{"nodeType":"YulBlock","src":"2501:182:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2518:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2529:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2511:6:33"},"nodeType":"YulFunctionCall","src":"2511:21:33"},"nodeType":"YulExpressionStatement","src":"2511:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2552:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2563:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2548:3:33"},"nodeType":"YulFunctionCall","src":"2548:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"2568:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2541:6:33"},"nodeType":"YulFunctionCall","src":"2541:30:33"},"nodeType":"YulExpressionStatement","src":"2541:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2591:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2602:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:33"},"nodeType":"YulFunctionCall","src":"2587:18:33"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2607:34:33","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2580:6:33"},"nodeType":"YulFunctionCall","src":"2580:62:33"},"nodeType":"YulExpressionStatement","src":"2580:62:33"},{"nodeType":"YulAssignment","src":"2651:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2663:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2674:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2659:3:33"},"nodeType":"YulFunctionCall","src":"2659:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2651:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2478:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2492:4:33","type":""}],"src":"2327:356:33"},{"body":{"nodeType":"YulBlock","src":"2862:179:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2879:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2890:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2872:6:33"},"nodeType":"YulFunctionCall","src":"2872:21:33"},"nodeType":"YulExpressionStatement","src":"2872:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2913:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2924:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2909:3:33"},"nodeType":"YulFunctionCall","src":"2909:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"2929:2:33","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2902:6:33"},"nodeType":"YulFunctionCall","src":"2902:30:33"},"nodeType":"YulExpressionStatement","src":"2902:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2952:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2963:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2948:3:33"},"nodeType":"YulFunctionCall","src":"2948:18:33"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"2968:31:33","type":"","value":"Address: insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2941:6:33"},"nodeType":"YulFunctionCall","src":"2941:59:33"},"nodeType":"YulExpressionStatement","src":"2941:59:33"},{"nodeType":"YulAssignment","src":"3009:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3021:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3032:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3017:3:33"},"nodeType":"YulFunctionCall","src":"3017:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3009:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2839:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2853:4:33","type":""}],"src":"2688:353:33"},{"body":{"nodeType":"YulBlock","src":"3237:14:33","statements":[{"nodeType":"YulAssignment","src":"3239:10:33","value":{"name":"pos","nodeType":"YulIdentifier","src":"3246:3:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3239:3:33"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3221:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3229:3:33","type":""}],"src":"3046:205:33"},{"body":{"nodeType":"YulBlock","src":"3430:248:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3447:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3458:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3440:6:33"},"nodeType":"YulFunctionCall","src":"3440:21:33"},"nodeType":"YulExpressionStatement","src":"3440:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3492:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3477:3:33"},"nodeType":"YulFunctionCall","src":"3477:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"3497:2:33","type":"","value":"58"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3470:6:33"},"nodeType":"YulFunctionCall","src":"3470:30:33"},"nodeType":"YulExpressionStatement","src":"3470:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3520:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3531:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3516:3:33"},"nodeType":"YulFunctionCall","src":"3516:18:33"},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c2072","kind":"string","nodeType":"YulLiteral","src":"3536:34:33","type":"","value":"Address: unable to send value, r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3509:6:33"},"nodeType":"YulFunctionCall","src":"3509:62:33"},"nodeType":"YulExpressionStatement","src":"3509:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3591:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3602:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3587:3:33"},"nodeType":"YulFunctionCall","src":"3587:18:33"},{"hexValue":"6563697069656e74206d61792068617665207265766572746564","kind":"string","nodeType":"YulLiteral","src":"3607:28:33","type":"","value":"ecipient may have reverted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3580:6:33"},"nodeType":"YulFunctionCall","src":"3580:56:33"},"nodeType":"YulExpressionStatement","src":"3580:56:33"},{"nodeType":"YulAssignment","src":"3645:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3657:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3668:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3653:3:33"},"nodeType":"YulFunctionCall","src":"3653:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3645:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3407:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3421:4:33","type":""}],"src":"3256:422:33"},{"body":{"nodeType":"YulBlock","src":"3857:233:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3874:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3885:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3867:6:33"},"nodeType":"YulFunctionCall","src":"3867:21:33"},"nodeType":"YulExpressionStatement","src":"3867:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3908:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3919:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3904:3:33"},"nodeType":"YulFunctionCall","src":"3904:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"3924:2:33","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3897:6:33"},"nodeType":"YulFunctionCall","src":"3897:30:33"},"nodeType":"YulExpressionStatement","src":"3897:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3947:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3943:3:33"},"nodeType":"YulFunctionCall","src":"3943:18:33"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"3963:34:33","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3936:6:33"},"nodeType":"YulFunctionCall","src":"3936:62:33"},"nodeType":"YulExpressionStatement","src":"3936:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4018:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4029:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4014:3:33"},"nodeType":"YulFunctionCall","src":"4014:18:33"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"4034:13:33","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4007:6:33"},"nodeType":"YulFunctionCall","src":"4007:41:33"},"nodeType":"YulExpressionStatement","src":"4007:41:33"},{"nodeType":"YulAssignment","src":"4057:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4069:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4080:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4065:3:33"},"nodeType":"YulFunctionCall","src":"4065:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4057:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3834:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3848:4:33","type":""}],"src":"3683:407:33"}]},"contents":"{\n    { }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100605760003560e01c806351cff8d914610065578063715018a6146100875780638129fc1c1461009c5780638da5cb5b146100b1578063e3a9db1a146100de578063f2fde38b14610122578063f340fa0114610142575b600080fd5b34801561007157600080fd5b50610085610080366004610614565b610155565b005b34801561009357600080fd5b506100856101cc565b3480156100a857600080fd5b506100856101e0565b3480156100bd57600080fd5b506033546040516001600160a01b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b506101146100f9366004610614565b6001600160a01b031660009081526065602052604090205490565b6040519081526020016100d5565b34801561012e57600080fd5b5061008561013d366004610614565b6102f6565b610085610150366004610614565b61036c565b61015d6103de565b6001600160a01b03811660008181526065602052604081208054919055906101859082610438565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516101c091815260200190565b60405180910390a25050565b6101d46103de565b6101de6000610553565b565b600054610100900460ff16158080156102005750600054600160ff909116105b8061021a5750303b15801561021a575060005460ff166001145b6102825760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156102a5576000805461ff0019166101001790555b6102ad6105a5565b80156102f3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6102fe6103de565b6001600160a01b0381166103635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610279565b6102f381610553565b6103746103de565b6001600160a01b03811660009081526065602052604081208054349283929161039e908490610638565b90915550506040518181526001600160a01b038316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906020016101c0565b6033546001600160a01b031633146101de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610279565b804710156104885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610279565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104d5576040519150601f19603f3d011682016040523d82523d6000602084013e6104da565b606091505b505090508061054e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726044820152791958da5c1a595b9d081b585e481a185d99481c995d995c9d195960321b6064820152608401610279565b505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166105cc5760405162461bcd60e51b81526004016102799061065e565b6101de600054610100900460ff166105f65760405162461bcd60e51b81526004016102799061065e565b6101de33610553565b6001600160a01b03811681146102f357600080fd5b60006020828403121561062657600080fd5b8135610631816105ff565b9392505050565b6000821982111561065957634e487b7160e01b600052601160045260246000fd5b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212202c8271a2cea9abdeb9f1af907d388d181a93436d618e97c9dd7d87f028602e6b64736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x1CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x15D PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE SWAP1 PUSH2 0x185 SWAP1 DUP3 PUSH2 0x438 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 PUSH2 0x553 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x200 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x21A JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2AD PUSH2 0x5A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x2F3 DUP2 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0x39E SWAP1 DUP5 SWAP1 PUSH2 0x638 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x279 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x1958DA5C1A595B9D081B585E481A185D99481C995D995C9D1959 PUSH1 0x32 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x279 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1DE CALLER PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x631 DUP2 PUSH2 0x5FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x659 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP3 PUSH18 0xA2CEA9ABDEB9F1AF907D388D181A93436D61 DUP15 SWAP8 0xC9 0xDD PUSH30 0x87F028602E6B64736F6C634300080C003300000000000000000000000000 ","sourceMap":"893:2026:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2402:224;;;;;;;;;;-1:-1:-1;2402:224:25;;;;;:::i;:::-;;:::i;:::-;;2071:101:4;;;;;;;;;;;;;:::i;1136:81:25:-;;;;;;;;;;;;;:::i;1441:85:4:-;;;;;;;;;;-1:-1:-1;1513:6:4;;1441:85;;-1:-1:-1;;;;;1513:6:4;;;572:51:33;;560:2;545:18;1441:85:4;;;;;;;;1452:105:25;;;;;;;;;;-1:-1:-1;1452:105:25;;;;;:::i;:::-;-1:-1:-1;;;;;1534:16:25;1508:7;1534:16;;;:9;:16;;;;;;;1452:105;;;;1040:25:33;;;1028:2;1013:18;1452:105:25;894:177:33;2321:198:4;;;;;;;;;;-1:-1:-1;2321:198:4;;;;;:::i;:::-;;:::i;1740:183:25:-;;;;;;:::i;:::-;;:::i;2402:224::-;1334:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;2496:16:25;::::1;2478:15;2496:16:::0;;;:9:::1;:16;::::0;;;;;;2523:20;;;2496:16;2554:24:::1;::::0;2496:16;2554:15:::1;:24::i;:::-;2604:5;-1:-1:-1::0;;;;;2594:25:25::1;;2611:7;2594:25;;;;1040::33::0;;1028:2;1013:18;;894:177;2594:25:25::1;;;;;;;;2468:158;2402:224:::0;:::o;2071:101:4:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1136:81:25:-;3273:19:8;3296:13;;;;;;3295:14;;3341:34;;;;-1:-1:-1;3359:12:8;;3374:1;3359:12;;;;:16;3341:34;3340:108;;;-1:-1:-1;3420:4:8;1481:19:18;:23;;;3381:66:8;;-1:-1:-1;3430:12:8;;;;;:17;3381:66;3319:201;;;;-1:-1:-1;;;3319:201:8;;1278:2:33;3319:201:8;;;1260:21:33;1317:2;1297:18;;;1290:30;1356:34;1336:18;;;1329:62;-1:-1:-1;;;1407:18:33;;;1400:44;1461:19;;3319:201:8;;;;;;;;;3530:12;:16;;-1:-1:-1;;3530:16:8;3545:1;3530:16;;;3556:65;;;;3590:13;:20;;-1:-1:-1;;3590:20:8;;;;;3556:65;1195:15:25::1;:13;:15::i;:::-;3645:14:8::0;3641:99;;;3691:5;3675:21;;-1:-1:-1;;3675:21:8;;;3715:14;;-1:-1:-1;1643:36:33;;3715:14:8;;1631:2:33;1616:18;3715:14:8;;;;;;;3641:99;3263:483;1136:81:25:o;2321:198:4:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:4;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:4;;1892:2:33;2401:73:4::1;::::0;::::1;1874:21:33::0;1931:2;1911:18;;;1904:30;1970:34;1950:18;;;1943:62;-1:-1:-1;;;2021:18:33;;;2014:36;2067:19;;2401:73:4::1;1690:402:33::0;2401:73:4::1;2484:28;2503:8;2484:18;:28::i;1740:183:25:-:0;1334:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;1851:16:25;::::1;1815:14;1851:16:::0;;;:9:::1;:16;::::0;;;;:26;;1832:9:::1;::::0;;;1851:16;:26:::1;::::0;1832:9;;1851:26:::1;:::i;:::-;::::0;;;-1:-1:-1;;1892:24:25::1;::::0;1040:25:33;;;-1:-1:-1;;;;;1892:24:25;::::1;::::0;::::1;::::0;1028:2:33;1013:18;1892:24:25::1;894:177:33::0;1599:130:4;1513:6;;-1:-1:-1;;;;;1513:6:4;929:10:19;1662:23:4;1654:68;;;;-1:-1:-1;;;1654:68:4;;2529:2:33;1654:68:4;;;2511:21:33;;;2548:18;;;2541:30;2607:34;2587:18;;;2580:62;2659:18;;1654:68:4;2327:356:33;2428:312:18;2542:6;2517:21;:31;;2509:73;;;;-1:-1:-1;;;2509:73:18;;2890:2:33;2509:73:18;;;2872:21:33;2929:2;2909:18;;;2902:30;2968:31;2948:18;;;2941:59;3017:18;;2509:73:18;2688:353:33;2509:73:18;2594:12;2612:9;-1:-1:-1;;;;;2612:14:18;2634:6;2612:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:52;;;2663:7;2655:78;;;;-1:-1:-1;;;2655:78:18;;3458:2:33;2655:78:18;;;3440:21:33;3497:2;3477:18;;;3470:30;3536:34;3516:18;;;3509:62;-1:-1:-1;;;3587:18:33;;;3580:56;3653:19;;2655:78:18;3256:422:33;2655:78:18;2499:241;2428:312;;:::o;2673:187:4:-;2765:6;;;-1:-1:-1;;;;;2781:17:4;;;-1:-1:-1;;;;;;2781:17:4;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;963:94:25:-;5368:13:8;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;:::-;1024:26:25::1;5368:13:8::0;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;:::-;1176:32:4::1;929:10:19::0;1176:18:4::1;:32::i;14:139:33:-:0;-1:-1:-1;;;;;97:31:33;;87:42;;77:70;;143:1;140;133:12;158:263;225:6;278:2;266:9;257:7;253:23;249:32;246:52;;;294:1;291;284:12;246:52;333:9;320:23;352:39;385:5;352:39;:::i;:::-;410:5;158:263;-1:-1:-1;;;158:263:33:o;2097:225::-;2137:3;2168:1;2164:6;2161:1;2158:13;2155:136;;;2213:10;2208:3;2204:20;2201:1;2194:31;2248:4;2245:1;2238:15;2276:4;2273:1;2266:15;2155:136;-1:-1:-1;2307:9:33;;2097:225::o;3683:407::-;3885:2;3867:21;;;3924:2;3904:18;;;3897:30;3963:34;3958:2;3943:18;;3936:62;-1:-1:-1;;;4029:2:33;4014:18;;4007:41;4080:3;4065:19;;3683:407::o"},"methodIdentifiers":{"deposit(address)":"f340fa01","depositsOf(address)":"e3a9db1a","initialize()":"8129fc1c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","withdraw(address)":"51cff8d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base escrow contract, holds funds designated for a payee until they withdraw them. Intended usage: This contract (and derived escrow contracts) should be a standalone contract, that only interacts with the contract that instantiated it. That way, it is guaranteed that all Ether will be handled according to the `Escrow` rules, and there is no need to check for payable functions or transfers in the inheritance tree. The contract that uses the escrow as its payment method should be its owner, and provide public methods redirecting to the escrow's deposit and withdraw.\",\"kind\":\"dev\",\"methods\":{\"deposit(address)\":{\"details\":\"Stores the sent amount as credit to be withdrawn.\",\"params\":{\"payee\":\"The destination address of the funds. Emits a {Deposited} event.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"The address whose funds will be withdrawn and transferred to. Emits a {Withdrawn} event.\"}}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"title\":\"Escrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol\":\"EscrowUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol\":{\"keccak256\":\"0xf967fc54daea1917caeff7db4f4b888009d25308b761b304af8a69fb3817f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f97c27dd0a7193923ac446d4c0b23df3350eaa0f087cab7f90882a22a66aee23\",\"dweb:/ipfs/QmSkXvjCnLcUHKAZ9DjbtHkVxyT9jqU21JtEMEqL1FRv9Y\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol:EscrowUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol:EscrowUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol:EscrowUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":589,"contract":"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol:EscrowUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":709,"contract":"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol:EscrowUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":3658,"contract":"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol:EscrowUpgradeable","label":"_deposits","offset":0,"slot":"101","type":"t_mapping(t_address,t_uint256)"},{"astId":3732,"contract":"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol:EscrowUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3776,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207739ad1f43eb543325f21acf03c9ba8f710a91e7be31da7c38c88391a05d110a64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x39AD1F43EB543325F21ACF03C9BA8F710A91E7BE31DA7C38 0xC8 DUP4 SWAP2 LOG0 0x5D GT EXP PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"207:12313:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;207:12313:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207739ad1f43eb543325f21acf03c9ba8f710a91e7be31da7c38c88391a05d110a64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x39AD1F43EB543325F21ACF03C9BA8F710A91E7BE31DA7C38 0xC8 DUP4 SWAP2 LOG0 0x5D GT EXP PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"207:12313:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol":{"SafeMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ab32bdabc675bc342b212e3ae02850c888b7afbfc37caed654cdadef12c1f6464736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xB3 0x2B 0xDA 0xBC PUSH8 0x5BC342B212E3AE02 DUP6 0xC DUP9 DUP12 PUSH27 0xFBFC37CAED654CDADEF12C1F6464736F6C634300080C0033000000 ","sourceMap":"482:6311:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6311:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ab32bdabc675bc342b212e3ae02850c888b7afbfc37caed654cdadef12c1f6464736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xB3 0x2B 0xDA 0xBC PUSH8 0x5BC342B212E3AE02 DUP6 0xC DUP9 DUP12 PUSH27 0xFBFC37CAED654CDADEF12C1F6464736F6C634300080C0033000000 ","sourceMap":"482:6311:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208db8d006f35642e9ff52714e7b14cb0e07261ee1d096dbd6a39b8617e0c06ed664736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xB8 0xD0 MOD RETURN JUMP TIMESTAMP 0xE9 SELFDESTRUCT MSTORE PUSH18 0x4E7B14CB0E07261EE1D096DBD6A39B8617E0 0xC0 PUSH15 0xD664736F6C634300080C0033000000 ","sourceMap":"1326:11641:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1326:11641:30;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208db8d006f35642e9ff52714e7b14cb0e07261ee1d096dbd6a39b8617e0c06ed664736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xB8 0xD0 MOD RETURN JUMP TIMESTAMP 0xE9 SELFDESTRUCT MSTORE PUSH18 0x4E7B14CB0E07261EE1D096DBD6A39B8617E0 0xC0 PUSH15 0xD664736F6C634300080C0033000000 ","sourceMap":"1326:11641:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x3753924aa8f8ef663cbb28d1f214b4ed0206a1832a98cb8f3a4938a71e76f602\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d2a1934171617f97273f1a0a3640363c62861e1de1ac9ce1ab2a9d5b8ca93a\",\"dweb:/ipfs/QmXwTYK7Vu5DAJr2VhA3RYxEvC8ujx9oQPMmccpTxPBb63\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/KRBTokenV01.sol":{"KRBTokenV01":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"uuid","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"Deleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"uuid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"disputedBy","type":"uint256"}],"name":"Disputed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"uuid","type":"uint256"}],"name":"Expired","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"uuid","type":"uint256"},{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"indexed":false,"internalType":"struct VCTypesV01.VerifiableCredential","name":"vc","type":"tuple"}],"name":"Issued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"uuid","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"Revoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"uuid","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"Suspended","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[],"name":"Updated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GOVERN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"},{"internalType":"uint256","name":"stake","type":"uint256"}],"name":"burnStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"internalType":"struct VCTypesV01.VerifiableCredential","name":"vc","type":"tuple"},{"internalType":"string","name":"reason","type":"string"}],"name":"deleteVC","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"internalType":"struct VCTypesV01.VerifiableCredential","name":"vc","type":"tuple"},{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"internalType":"struct VCTypesV01.VerifiableCredential","name":"disputeVC","type":"tuple"}],"name":"disputeVCByGovern","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"internalType":"struct VCTypesV01.VerifiableCredential","name":"vc","type":"tuple"}],"name":"expiredVC","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feesAvailableForWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"internalType":"struct VCTypesV01.VerifiableCredential","name":"vc","type":"tuple"}],"name":"getUuid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"internalType":"struct VCTypesV01.VerifiableCredential","name":"vc","type":"tuple"}],"name":"getVCStatus","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"version","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxPriceToIssue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxStakeToIssue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minBalanceToIssue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minBalanceToReceive","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minBalanceToTransfer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minPriceToIssue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minStakeToIssue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"}],"name":"payments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"internalType":"struct VCTypesV01.VerifiableCredential","name":"vc","type":"tuple"},{"internalType":"bytes","name":"proofValue","type":"bytes"}],"name":"registerVC","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"registry","outputs":[{"internalType":"enum KRBTokenV01.Status","name":"credentialStatus","type":"uint8"},{"internalType":"uint256","name":"disputedBy","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"internalType":"struct VCTypesV01.VerifiableCredential","name":"vc","type":"tuple"},{"internalType":"string","name":"reason","type":"string"}],"name":"revokeVC","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"}],"name":"stakeOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"_context","type":"string"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"id","type":"string"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"}],"internalType":"struct VCTypesV01.Issuer","name":"issuer","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"address","name":"ethereumAddress","type":"address"},{"internalType":"string","name":"_type","type":"string"},{"internalType":"string","name":"typeSchema","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"string","name":"encrypted","type":"string"},{"internalType":"uint8","name":"trust","type":"uint8"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nbf","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"}],"internalType":"struct VCTypesV01.CredentialSubject","name":"credentialSubject","type":"tuple"},{"components":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"internalType":"struct VCTypesV01.CredentialSchema","name":"credentialSchema","type":"tuple"},{"internalType":"string","name":"issuanceDate","type":"string"},{"internalType":"string","name":"expirationDate","type":"string"}],"internalType":"struct VCTypesV01.VerifiableCredential","name":"vc","type":"tuple"},{"internalType":"string","name":"reason","type":"string"}],"name":"suspendVC","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMinBalanceToTransfer","type":"uint256"},{"internalType":"uint256","name":"newMinBalanceToReceive","type":"uint256"},{"internalType":"uint256","name":"newMinBalanceToIssue","type":"uint256"},{"internalType":"uint256","name":"newFeePercentage","type":"uint256"},{"internalType":"uint256","name":"newMinPrice","type":"uint256"},{"internalType":"uint256","name":"newMaxPrice","type":"uint256"},{"internalType":"uint256","name":"newMinStake","type":"uint256"},{"internalType":"uint256","name":"newMaxStake","type":"uint256"},{"internalType":"address","name":"newTrustedForwarder","type":"address"}],"name":"updateParameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"structHash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignedData","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"payee","type":"address"}],"name":"withdrawPayments","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x5D95 PUSH3 0x4D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x10EB ADD MSTORE DUP2 DUP2 PUSH2 0x112B ADD MSTORE DUP2 DUP2 PUSH2 0x1215 ADD MSTORE DUP2 DUP2 PUSH2 0x1255 ADD MSTORE PUSH2 0x12CD ADD MSTORE PUSH2 0x5D95 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2CC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DA0A877 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xAF4E720D GT PUSH2 0xD2 JUMPI DUP1 PUSH4 0xAF4E720D EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0xB25DD4FC EQ PUSH2 0x866 JUMPI DUP1 PUSH4 0xBCD68993 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xC0D506D6 EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x8C6 JUMPI DUP1 PUSH4 0xCA2A8CFC EQ PUSH2 0x8E6 JUMPI DUP1 PUSH4 0xCE556F9D EQ PUSH2 0x906 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x926 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xDE5785D5 EQ PUSH2 0x966 JUMPI DUP1 PUSH4 0xDE9D2B1C EQ PUSH2 0x97D JUMPI DUP1 PUSH4 0xDEC9CAFE EQ PUSH2 0x994 JUMPI DUP1 PUSH4 0xE2982C21 EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xE5A2B28E EQ PUSH2 0x9C7 JUMPI DUP1 PUSH4 0xEE2B1B4D EQ PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0x888BB7B5 EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x8993A3E5 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x717 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0x9C70287C EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0xA6487C53 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xA775AABD EQ PUSH2 0x7F8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x80F JUMPI DUP1 PUSH4 0xAD3B1B47 EQ PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0x231 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x38B7F446 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x42623360 EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x5893253C EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0x716F4D90 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x7A0D798 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x7A77292 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x2A401E81 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x31B3EB94 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x47C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x460C JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x468E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x295 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x290 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCB SLOAD PUSH2 0x33F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x46F2 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4733 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BB0 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C13 JUMP JUMPDEST PUSH2 0xFB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x1043 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C13 JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0x10E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x11A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x11D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x52E CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x11E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x4733 JUMP JUMPDEST PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x429 PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C60 JUMP JUMPDEST PUSH2 0x120A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x12C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH2 0x5ED CALLDATASIZE PUSH1 0x4 PUSH2 0x4733 JUMP JUMPDEST PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP3 SWAP2 SWAP1 PUSH2 0x4CBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x2F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x64F CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x66F CALLDATASIZE PUSH1 0x4 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x68F CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x1532 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E SLOAD PUSH2 0x6B5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x4D40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x154E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x6F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D54 JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x712 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D90 JUMP JUMPDEST PUSH2 0x1624 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH2 0x732 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E04 JUMP JUMPDEST PUSH2 0x1798 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x752 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C13 JUMP JUMPDEST PUSH2 0x17B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x17DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x787 CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x17EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x296 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x7D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x17FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x7F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E26 JUMP JUMPDEST PUSH2 0x188D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x293 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x82A CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x19AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x291 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x881 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EAD JUMP JUMPDEST PUSH2 0x1A0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x8A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D54 JUMP JUMPDEST PUSH2 0x1B0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x8C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D54 JUMP JUMPDEST PUSH2 0x1B17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x8E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4733 JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x901 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x1CF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x921 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x1DD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x941 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C13 JUMP JUMPDEST PUSH2 0x1F2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x961 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EFB JUMP JUMPDEST PUSH2 0x1F50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x297 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x294 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x9A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x1F7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x9C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0x24FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x28F SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x292 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA1A JUMPI POP PUSH2 0xA1A DUP3 PUSH2 0x2572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCC DUP1 SLOAD PUSH2 0xA2F SWAP1 PUSH2 0x4F29 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x4F29 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xABD PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0x25C9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xADF PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xAEC DUP6 DUP3 DUP6 PUSH2 0x26ED JUMP JUMPDEST PUSH2 0xAF7 DUP6 DUP6 DUP6 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0E PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB64 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x5B2256657269666961626C6543726564656E7469616C222C2244697370757465 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x43726564656E7469616C225D PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206469737075746520636C61696D2074797065206D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D08189948111A5CDC1D5D1950DC9959195B9D1A585B PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1E PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A20697373756572206D7573742062652074686520476F76 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726E2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x80 DUP6 ADD MLOAD MLOAD SWAP1 SWAP3 PUSH2 0xCDA SWAP3 ADD PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206469737075746556432063726564656E7469616C5375 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x626A6563742069642064696666657265732066726F6D20564320696400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0xD6C DUP3 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD77 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD9E JUMPI PUSH2 0xD9E PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO JUMPDEST PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A20564320737461746520616C7265616479206469737075 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 DUP5 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR DUP2 SSTORE PUSH1 0x1 ADD DUP4 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x7A5B7DE3BC82F24E3A2EC84FDD3D22A2611ADFF3DF42E2917470DC204F0EB0A4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xB4323E298F3A82D5CF939B5E4ED408526ED5F8EBE42169C54EC2B667A85E1BC9 SWAP1 PUSH2 0xEDC SWAP1 DUP4 SWAP1 DUP8 SWAP1 PUSH2 0x50A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0xEF2 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0xF05 SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH2 0xF19 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF30 DUP3 DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0xF44 DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0xF56 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF64 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF90 DUP3 DUP10 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA4 DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2E96 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFCE DUP2 PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0xFD8 DUP4 DUP4 PUSH2 0x2F62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x229 SLOAD PUSH1 0x40 MLOAD PUSH4 0x51CFF8D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x51CFF8D9 SWAP1 PUSH2 0x100E SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x103C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104D PUSH2 0x2F84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x105A PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x3001 JUMP JUMPDEST POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x1129 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x52CD JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x115B PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x118A DUP2 PUSH2 0x303F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11A6 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x3047 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11B4 PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0x11C6 DUP6 DUP10 PUSH2 0x1F50 JUMP JUMPDEST PUSH2 0x11D0 SWAP2 SWAP1 PUSH2 0x5365 JUMP JUMPDEST PUSH2 0x25C9 JUMP JUMPDEST PUSH2 0x11DD PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x11E5 PUSH2 0x31B2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11EF PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x11A6 PUSH2 0x1204 PUSH2 0x25A7 JUMP JUMPDEST DUP3 PUSH2 0x2D68 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x52CD JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1285 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x12B4 DUP3 PUSH2 0x303F JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH1 0x1 PUSH2 0x3047 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x135B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CF9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x28E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST DUP1 PUSH2 0x13E5 JUMPI POP PUSH2 0x13C8 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x537D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140C DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1434 JUMPI PUSH2 0x1434 PUSH2 0x4CA5 JUMP JUMPDEST EQ PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x53D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x9033E030B285E24D878A56C0809910A4FBC2C14BC876C3060BFDEFC4F21EA68C SWAP1 PUSH2 0x149A SWAP1 DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x540A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x14B0 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14DC DUP3 DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0x14F0 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x1502 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x1514 DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0x1526 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1544 DUP3 PUSH2 0x153E PUSH2 0x25A7 JUMP JUMPDEST DUP4 PUSH2 0x26ED JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0x1556 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x11E5 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x156A DUP4 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x140 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x1614 JUMPI PUSH1 0x0 PUSH2 0x158B PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x159E SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH2 0x15B2 DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x15C4 DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2E96 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 OR SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0xF80DBAEA4785589E52984CA36A31DE106ADC77759539A5C7D92883BF49692FE9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP PUSH1 0x80 ADD MLOAD PUSH2 0x140 ADD MLOAD TIMESTAMP GT SWAP1 JUMP JUMPDEST PUSH2 0x162C PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x28F DUP10 SWAP1 SSTORE PUSH2 0x290 DUP9 SWAP1 SSTORE PUSH2 0x291 DUP8 SWAP1 SSTORE PUSH2 0x296 DUP7 SWAP1 SSTORE DUP5 DUP5 LT ISZERO PUSH2 0x16BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206E65774D61785072696365206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6561746572206F7220657175616C207468616E206E65774D696E507269636500 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x292 DUP6 SWAP1 SSTORE PUSH2 0x293 DUP5 SWAP1 SSTORE DUP3 DUP3 LT ISZERO PUSH2 0x173C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206E65774D61785374616B65206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6561746572206F7220657175616C207468616E206E65774D696E5374616B6500 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x294 DUP4 SWAP1 SSTORE PUSH2 0x295 DUP3 SWAP1 SSTORE PUSH2 0x28E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF2E795D4A33AE9A0D3282888375B8AE781EA4DE1CBF101AC96150AA95CCFF0B4 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xAFD SWAP1 DUP4 PUSH2 0x3244 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCD DUP1 SLOAD PUSH2 0xA2F SWAP1 PUSH2 0x4F29 JUMP JUMPDEST PUSH2 0x17F2 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1807 PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1815 DUP3 DUP7 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x1882 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x25C9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x18AD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x18CE JUMPI POP PUSH2 0x18BC ADDRESS PUSH2 0x3250 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x18CE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1954 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x195F DUP5 DUP5 DUP5 PUSH2 0x325F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19B6 PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0x2761 JUMP JUMPDEST PUSH2 0x19CB PUSH2 0x32ED JUMP JUMPDEST PUSH2 0x19D3 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x297 SLOAD DUP2 GT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x297 SLOAD PUSH2 0x19F1 SWAP1 DUP3 PUSH2 0x3349 JUMP JUMPDEST PUSH2 0x297 SSTORE PUSH2 0x19FF DUP3 DUP3 PUSH2 0x3355 JUMP JUMPDEST PUSH2 0x10DC PUSH1 0x1 PUSH2 0x25C SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A15 DUP4 PUSH2 0x33C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A23 DUP3 DUP5 PUSH2 0x3414 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A20696E76616C6964207369676E61747572652061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x657373283029 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x103C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A207265636F766572656420616464726573732064696666 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x32B93990333937B69032BC3832B1BA32B21039B4B3B732B9 PUSH1 0x41 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP3 PUSH2 0x3438 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1B24 DUP4 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1B4F JUMPI PUSH2 0x1B4F PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1B78 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x4E6F6E65 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1B8C JUMPI PUSH2 0x1B8C PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1BB7 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x125CDCDD5959 PUSH1 0xD2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1BCB JUMPI PUSH2 0x1BCB PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1BF8 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x111A5CDC1D5D1959 PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1C0C JUMPI PUSH2 0x1C0C PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1C38 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x14995D9BDAD959 PUSH1 0xCA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1C4C JUMPI PUSH2 0x1C4C PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1C7A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x14DD5CDC195B991959 PUSH1 0xBA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1C8E JUMPI PUSH2 0x1C8E PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1CBA JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x115E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x22B93937B9 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xA1A SWAP1 PUSH2 0x352C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFF PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5423 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D42 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1D6A JUMPI PUSH2 0x1D6A PUSH2 0x4CA5 JUMP JUMPDEST EQ PUSH2 0x1D87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x53D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE MLOAD PUSH32 0x9E41D39F5FBE80F71BC2F0A44E937A0EE3DFF62DD07F191A8A461A339891A03 SWAP1 PUSH2 0x149A SWAP1 DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x540A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDD PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5423 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E20 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1E48 JUMPI PUSH2 0x1E48 PUSH2 0x4CA5 JUMP JUMPDEST EQ PUSH2 0x1E65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x53D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE MLOAD PUSH32 0x78A24D70A605E5984BDF7233D4F5E3F53C63BDA44F9CAA9803B2CCABAE033643 SWAP1 PUSH2 0x1EB1 SWAP1 DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x540A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x1EC7 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x1EDA SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EF3 DUP3 DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F07 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x1F19 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x1526 DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1F46 DUP2 PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0xFD8 DUP4 DUP4 PUSH2 0x3001 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F97 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST DUP1 PUSH2 0x1FC2 JUMPI POP PUSH2 0x1FA5 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1FDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x537D JUMP JUMPDEST PUSH2 0x292 SLOAD CALLVALUE LT ISZERO PUSH2 0x2052 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206D73672E76616C7565206D7573742062652067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x746572207468616E206D696E5072696365546F4973737565 PUSH1 0x40 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x293 SLOAD CALLVALUE GT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206D73672E76616C7565206D757374206265206C657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x207468616E206D61785072696365546F4973737565 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST CALLVALUE DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x100 ADD MLOAD EQ PUSH2 0x213E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206D73672E76616C756520646F6573206E6F74206D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x63682063726564656E7469616C5375626A6563742E7072696365 PUSH1 0x30 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2149 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH2 0x2166 DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x2160 DUP7 PUSH2 0x3438 JUMP JUMPDEST DUP6 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x216F DUP5 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2193 JUMPI PUSH2 0x2193 PUSH2 0x4CA5 JUMP JUMPDEST EQ PUSH2 0x2201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2056657269666961626C652043726564656E7469616C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1A185CDA08185B1C9958591E481899595B881A5CDCDD5959 PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x291 SLOAD PUSH2 0x2216 DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x1383 JUMP JUMPDEST LT ISZERO PUSH2 0x227A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2069737375657220646F6573206E6F7420686176652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6E6F7567682062616C616E6365 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2288 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x229B SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH2 0x294 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x22B3 JUMPI POP PUSH2 0x295 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x2331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A207374616B65206D757374206265206265747765656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D696E5374616B65546F497373756520616E64206D61785374616B65546F4973 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x737565 PUSH1 0xE8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x2343 DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2371 SWAP1 DUP3 PUSH2 0x3536 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 MLOAD DUP3 ADD MLOAD SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP4 AND SWAP3 PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP5 DUP2 MSTORE PUSH2 0x298 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2417 JUMPI PUSH2 0x2417 PUSH2 0x4CA5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH32 0xB4323E298F3A82D5CF939B5E4ED408526ED5F8EBE42169C54EC2B667A85E1BC9 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x245A SWAP3 SWAP2 SWAP1 PUSH2 0x50A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x2479 DUP3 DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0x248D DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x249F DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2E96 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C1 PUSH2 0x24BA DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x296 SLOAD PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x24E0 SWAP1 PUSH2 0x24DB CALLVALUE DUP5 PUSH2 0x3349 JUMP JUMPDEST PUSH2 0x3355 JUMP JUMPDEST PUSH2 0x297 SLOAD PUSH2 0x24EE SWAP1 DUP3 PUSH2 0x3536 JUMP JUMPDEST PUSH2 0x297 SSTORE POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x229 SLOAD PUSH1 0x40 MLOAD PUSH4 0x71D4ED8D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE3A9DB1A SWAP1 PUSH2 0x2531 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x254E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x546E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA1A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B2 CALLER PUSH2 0x136E JUMP JUMPDEST ISZERO PUSH2 0x25C4 JUMPI POP PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x262B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x268C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F9 DUP5 DUP5 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x19A5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2754 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x19A5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x27C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x2832 DUP4 DUP4 DUP4 PUSH2 0x355A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x28AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D40 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x28F8 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0x291F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206D757374206861766520676F7665726E20726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2062616420697373756572206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206261642063726564656E7469616C5375626A65637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2A4D SWAP2 SWAP1 PUSH1 0x20 ADD PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x60 DUP5 ADD MLOAD MLOAD SWAP1 SWAP3 PUSH2 0x2A78 SWAP3 ADD PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x2AFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2069737375657220444944206973207468652073616D65 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x8185CC818DC9959195B9D1A585B14DD589A9958DD PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2069737375657220616464726573732069732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH25 0x1CD85B5948185CC818DC9959195B9D1A585B14DD589A9958DD PUSH1 0x3A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0x120 ADD MLOAD TIMESTAMP GT PUSH2 0x2BF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2056432069737375616E63654461746520697320696E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x74686520667574757265 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0x140 ADD MLOAD TIMESTAMP LT PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2056432068617320616C72656164792065787069726564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2CBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206275726E207374616B652066726F6D20746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x10DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2CFE SWAP1 DUP3 PUSH2 0x3349 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x299 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 SWAP1 PUSH2 0x2D4D SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD PUSH2 0x24BA DUP5 DUP5 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2DC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x2DD4 DUP3 PUSH1 0x0 DUP4 PUSH2 0x355A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2E48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0xCB DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D40 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2EEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x2EF8 PUSH1 0x0 DUP4 DUP4 PUSH2 0x355A JUMP JUMPDEST DUP1 PUSH1 0xCB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2F0A SWAP2 SWAP1 PUSH2 0x5365 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D40 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x11A6 DUP2 PUSH2 0x2F5D PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x36D4 JUMP JUMPDEST PUSH2 0x2F6C DUP3 DUP3 PUSH2 0x372D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xFD8 SWAP1 DUP3 PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104D PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x2FB4 PUSH2 0x191 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x192 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x300B DUP3 DUP3 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xFD8 SWAP1 DUP3 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CF9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x11A6 PUSH2 0x2905 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x307A JUMPI PUSH2 0xFD8 DUP4 PUSH2 0x3863 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x30D4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x30D1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x546E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3137 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CF9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x31A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST POP PUSH2 0xFD8 DUP4 DUP4 DUP4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x31BA PUSH2 0x3922 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x31EE PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31FB SWAP2 SWAP1 PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x320D PUSH2 0x396C JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x31EE PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP4 DUP4 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3286 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH2 0x328E PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x3296 PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x329E PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x32A6 PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x32B0 DUP4 DUP4 PUSH2 0x3A04 JUMP JUMPDEST PUSH2 0x32B8 PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x32C0 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x32C8 PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x32D2 DUP4 DUP3 PUSH2 0x3A86 JUMP JUMPDEST PUSH2 0x32DA PUSH2 0x3AC9 JUMP JUMPDEST PUSH2 0x32E2 PUSH2 0x3B84 JUMP JUMPDEST PUSH2 0xFD8 DUP4 DUP4 DUP4 PUSH2 0x3BAB JUMP JUMPDEST PUSH1 0x2 PUSH2 0x25C SLOAD EQ ISZERO PUSH2 0x3341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x2 PUSH2 0x25C SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 DUP5 PUSH2 0x54D2 JUMP JUMPDEST PUSH2 0x229 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF340FA01 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF340FA01 SWAP1 DUP4 SWAP1 PUSH2 0x3388 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x25C SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1A PUSH2 0x33D3 PUSH2 0x2F84 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3423 DUP6 DUP6 PUSH2 0x3CA5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x3430 DUP2 PUSH2 0x3CEB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x63C4847AA3662952B34B8F76F3ABC371C24535EE34FCE5B3DF34D029DB924D4E PUSH1 0x0 SHL DUP3 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x20 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH1 0x40 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x348F DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x3E34 JUMP JUMPDEST PUSH2 0x349C DUP8 PUSH1 0x80 ADD MLOAD PUSH2 0x3E8D JUMP JUMPDEST PUSH2 0x34A9 DUP9 PUSH1 0xA0 ADD MLOAD PUSH2 0x3F86 JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0xE0 DUP12 ADD MLOAD DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x350F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 ADD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 DUP5 PUSH2 0x5365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 DUP5 PUSH2 0x52AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 DUP5 PUSH2 0x54E9 JUMP JUMPDEST PUSH2 0x3565 DUP4 DUP4 DUP4 PUSH2 0x3FDC JUMP JUMPDEST PUSH2 0x357F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST DUP1 PUSH2 0x3591 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x35A3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST DUP1 PUSH2 0x35B9 JUMPI POP PUSH2 0x28F SLOAD PUSH2 0x35B6 DUP5 PUSH2 0x1383 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x361B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2073656E64657220646F6573206E6F7420686176652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6E6F7567682062616C616E6365 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x3635 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST DUP1 PUSH2 0x3647 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x3659 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST DUP1 PUSH2 0x366F JUMPI POP PUSH2 0x290 SLOAD PUSH2 0x366C DUP4 PUSH2 0x1383 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A20726563697069656E7420646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6520656E6F7567682062616C616E6365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x36DE DUP3 DUP3 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x10DC JUMPI PUSH2 0x36EB DUP2 PUSH2 0x4043 JUMP JUMPDEST PUSH2 0x36F6 DUP4 PUSH1 0x20 PUSH2 0x4055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3707 SWAP3 SWAP2 SWAP1 PUSH2 0x550B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0xC0D SWAP2 PUSH1 0x4 ADD PUSH2 0x468E JUMP JUMPDEST PUSH2 0x3737 DUP3 DUP3 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x10DC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x3770 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x41F0 JUMP JUMPDEST PUSH2 0x37D3 DUP3 DUP3 PUSH2 0x17B0 JUMP JUMPDEST ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x380A PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x423F JUMP JUMPDEST PUSH2 0x386C DUP2 PUSH2 0x3250 JUMP JUMPDEST PUSH2 0x38CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CF9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3906 DUP4 PUSH2 0x4332 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x3913 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xFD8 JUMPI PUSH2 0x19A5 DUP4 DUP4 PUSH2 0x4372 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x39CA JUMPI PUSH2 0x39CA PUSH2 0x557A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3A2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x3A3E SWAP1 PUSH1 0xCC SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x4566 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0xFD8 SWAP1 PUSH1 0xCD SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x4566 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3A79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3AAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP2 MLOAD SWAP2 SWAP1 SWAP3 ADD KECCAK256 PUSH2 0x191 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x192 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3AF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AFC SWAP1 PUSH2 0x45EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x3B18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x229 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x204A7F07 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x8129FC1C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x33BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3BD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH2 0x3BE4 PUSH1 0x0 PUSH2 0x3BDF PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x4464 JUMP JUMPDEST PUSH2 0x3BFE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3BDF PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x3C0A PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C15 SWAP1 PUSH1 0x64 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x28F SSTORE PUSH2 0x3C25 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C30 SWAP1 PUSH1 0x64 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x290 SSTORE PUSH1 0xA PUSH2 0x296 SSTORE PUSH1 0x12 PUSH2 0x3C47 SWAP1 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C52 SWAP1 PUSH1 0x64 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x291 SSTORE PUSH1 0x0 PUSH2 0x292 SSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x293 SSTORE PUSH2 0x3C76 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C81 SWAP1 PUSH1 0x1 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x294 SSTORE PUSH2 0x3C91 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C9C SWAP1 PUSH1 0xA PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x295 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 EQ ISZERO PUSH2 0x3CDC JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x3CD0 DUP8 DUP3 DUP6 DUP6 PUSH2 0x446E JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x3CE4 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3CFF JUMPI PUSH2 0x3CFF PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x3D08 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3D1C JUMPI PUSH2 0x3D1C PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x3D65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x45434453413A20696E76616C6964207369676E6174757265 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3D79 JUMPI PUSH2 0x3D79 PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x3DC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3DDB JUMPI PUSH2 0x3DDB PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP4 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xABB691E6E52CEB1FF8B3DF91DC14323057E88EFA3252486ED994FD62706CDFAA SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH2 0x350F JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4B87DB6C5998F503AC6519B5A7D74EFCF2A230368DEEAF54DD8BF078DA459FF7 PUSH1 0x0 SHL DUP3 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x60 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x80 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0xA0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x350F SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD SWAP11 SWAP1 SWAP11 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 SWAP1 SWAP9 AND PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP10 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xFF AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0x180 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP4 ADD MLOAD DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0x1A58B7C56676B62343F37F4F3603A07AE6DD78BEA300689BCEFEF0F9498C6CC9 SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH2 0x350F JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA1A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x4064 DUP4 PUSH1 0x2 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x406F SWAP1 PUSH1 0x2 PUSH2 0x5365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4086 JUMPI PUSH2 0x4086 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40B0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x40CB JUMPI PUSH2 0x40CB PUSH2 0x557A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x40FA JUMPI PUSH2 0x40FA PUSH2 0x557A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x411E DUP5 PUSH1 0x2 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x4129 SWAP1 PUSH1 0x1 PUSH2 0x5365 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x41A1 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x415D JUMPI PUSH2 0x415D PUSH2 0x557A JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4173 JUMPI PUSH2 0x4173 PUSH2 0x557A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x419A DUP2 PUSH2 0x5590 JUMP JUMPDEST SWAP1 POP PUSH2 0x412C JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4237 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xA1A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x4328 JUMPI PUSH1 0x0 PUSH2 0x4263 PUSH1 0x1 DUP4 PUSH2 0x54D2 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x4277 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x54D2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x42DC JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4297 JUMPI PUSH2 0x4297 PUSH2 0x557A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x42BA JUMPI PUSH2 0x42BA PUSH2 0x557A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x42ED JUMPI PUSH2 0x42ED PUSH2 0x55A7 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x433B DUP2 PUSH2 0x3863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x437D DUP4 PUSH2 0x3250 JUMP JUMPDEST PUSH2 0x43D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x43F3 SWAP2 SWAP1 PUSH2 0x55BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x442E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4433 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x445B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5D19 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x4528 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x2F62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 GT ISZERO PUSH2 0x449B JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x451F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4518 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x451F JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4537 JUMPI POP DUP2 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0xAFD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x454C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP2 SWAP1 PUSH2 0x468E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4572 SWAP1 PUSH2 0x4F29 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4594 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x45DA JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x45AD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x45DA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x45DA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x45DA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x45BF JUMP JUMPDEST POP PUSH2 0x45E6 SWAP3 SWAP2 POP PUSH2 0x45F7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x6FF DUP1 PUSH2 0x55DA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x45E6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x45F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x461E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4651 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4639 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x19A5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x467A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4636 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAFD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4662 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x46C1 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x46E4 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4712 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4722 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4784 JUMPI PUSH2 0x4784 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4784 JUMPI PUSH2 0x4784 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4784 JUMPI PUSH2 0x4784 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x47E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x47FB JUMPI PUSH2 0x47FB PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4823 JUMPI PUSH2 0x4823 PUSH2 0x474C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x483C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x486E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4876 PUSH2 0x4762 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x488E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x489A DUP5 DUP3 DUP6 ADD PUSH2 0x47D0 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH2 0x48AB DUP2 PUSH2 0x46A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x46C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E2 PUSH2 0x478A JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x48FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4907 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST DUP4 MSTORE PUSH2 0x4915 PUSH1 0x20 DUP6 ADD PUSH2 0x46B6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x492E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x493A DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x495F DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4984 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x499D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49AA DUP5 DUP3 DUP6 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x49BC PUSH1 0xC0 DUP4 ADD PUSH2 0x48B6 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP4 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x120 DUP1 DUP4 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x140 DUP1 DUP4 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A0F PUSH2 0x4762 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A34 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A57 DUP5 DUP3 DUP6 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A7E PUSH2 0x47AD JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4A97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AA3 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AC5 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4ADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AEA DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B0F DUP6 DUP4 DUP7 ADD PUSH2 0x485C JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B34 DUP6 DUP4 DUP7 ADD PUSH2 0x48C7 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B59 DUP6 DUP4 DUP7 ADD PUSH2 0x49F5 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B7E DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA4 DUP5 DUP3 DUP6 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BE6 DUP7 DUP4 DUP8 ADD PUSH2 0x4A63 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4BFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C09 DUP6 DUP3 DUP7 ADD PUSH2 0x4A63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C38 DUP2 PUSH2 0x46A1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAFD DUP2 PUSH2 0x46A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4C7E DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C09 DUP6 DUP3 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD PUSH1 0x6 DUP5 LT PUSH2 0x4CDD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 DUP2 MSTORE PUSH1 0x20 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4CFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D1D DUP7 DUP4 DUP8 ADD PUSH2 0x4A63 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4D33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C09 DUP6 DUP3 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4D7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D88 DUP5 DUP3 DUP6 ADD PUSH2 0x4A63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4DAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x100 DUP11 ADD CALLDATALOAD PUSH2 0x4DF3 DUP2 PUSH2 0x46A1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4E17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4E52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E5E DUP8 DUP4 DUP9 ADD PUSH2 0x47D0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E80 DUP8 DUP4 DUP9 ADD PUSH2 0x47D0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EA3 DUP7 DUP3 DUP8 ADD PUSH2 0x47D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4EC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4ECD DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4EEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4EA3 DUP7 DUP3 DUP8 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4F19 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C38 DUP2 PUSH2 0x46A1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4F3D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4F5E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x40 DUP5 MSTORE PUSH2 0x4F79 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4662 JUMP JUMPDEST PUSH1 0x20 SWAP4 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x4FAC DUP3 DUP7 ADD DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4FC9 PUSH1 0x20 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x4FE1 DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x4FFB DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x5015 DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x502F DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x5046 PUSH1 0xC0 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x40 DUP5 MSTORE PUSH2 0x508F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x445B DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x100 DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x50CD PUSH2 0x140 DUP6 ADD DUP4 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x3F NOT DUP1 DUP7 DUP6 SUB ADD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x50EB DUP5 DUP4 PUSH2 0x4662 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x5108 DUP5 DUP4 PUSH2 0x4662 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x5125 DUP5 DUP4 PUSH2 0x4F64 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x5142 DUP5 DUP4 PUSH2 0x4F96 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x515F DUP5 DUP4 PUSH2 0x507A JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD DUP4 DUP8 ADD MSTORE PUSH2 0x517B DUP5 DUP4 PUSH2 0x4662 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP8 ADD MLOAD SWAP3 POP DUP1 DUP7 DUP6 SUB ADD PUSH2 0x120 DUP8 ADD MSTORE POP POP PUSH2 0x519B DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x51F6 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x51DC JUMPI PUSH2 0x51DC PUSH2 0x51A5 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x51E9 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x51C0 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x520D JUMPI POP PUSH1 0x1 PUSH2 0xA1A JUMP JUMPDEST DUP2 PUSH2 0x521A JUMPI POP PUSH1 0x0 PUSH2 0xA1A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5230 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x523A JUMPI PUSH2 0x5256 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA1A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x524B JUMPI PUSH2 0x524B PUSH2 0x51A5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xA1A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5279 JUMPI POP DUP2 DUP2 EXP PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x5283 DUP4 DUP4 PUSH2 0x51BB JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x5297 JUMPI PUSH2 0x5297 PUSH2 0x51A5 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x51FE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x52C8 JUMPI PUSH2 0x52C8 PUSH2 0x51A5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5378 JUMPI PUSH2 0x5378 PUSH2 0x51A5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2073656E646572206D7573742062652074686520637265 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x64656E7469616C5375626A6563742061646472657373 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A207374617465206973206E6F7420497373756564000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4D88 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4662 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2073656E646572206D7573742062652074686520697373 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x7565722061646472657373 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x54E4 JUMPI PUSH2 0x54E4 PUSH2 0x51A5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5506 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x553D DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4636 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x556E DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4636 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x559F JUMPI PUSH2 0x559F PUSH2 0x51A5 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x55CF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4636 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x1CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x15D PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE SWAP1 PUSH2 0x185 SWAP1 DUP3 PUSH2 0x438 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 PUSH2 0x553 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x200 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x21A JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2AD PUSH2 0x5A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x2F3 DUP2 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0x39E SWAP1 DUP5 SWAP1 PUSH2 0x638 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x279 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x1958DA5C1A595B9D081B585E481A185D99481C995D995C9D1959 PUSH1 0x32 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x279 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1DE CALLER PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x631 DUP2 PUSH2 0x5FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x659 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP3 PUSH18 0xA2CEA9ABDEB9F1AF907D388D181A93436D61 DUP15 SWAP8 0xC9 0xDD PUSH30 0x87F028602E6B64736F6C634300080C0033899BD46557473CB80307A9DABC 0x29 PUSH18 0x31CED39608330A2D29B2D52B660C03923E36 ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564DDF252AD1BE2C89B69C2B0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x8DBA34486FFD1532954841C9CE808718F1BA8C DUP7 0xA5 0xAD SMOD 0xC8 0x23 0x4D SWAP6 0xC2 0xB4 0xB7 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"1875:24436:31:-:0;;;1337:4:9;1294:48;;1875:24436:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_187":{"entryPoint":null,"id":187,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_6267":{"entryPoint":4163,"id":6267,"parameterSlots":0,"returnSlots":1},"@GOVERN_ROLE_5621":{"entryPoint":null,"id":5621,"parameterSlots":0,"returnSlots":0},"@_EIP712NameHash_3587":{"entryPoint":null,"id":3587,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_3596":{"entryPoint":null,"id":3596,"parameterSlots":0,"returnSlots":1},"@__AccessControlEnumerable_init_unchained_24":{"entryPoint":null,"id":24,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_unchained_172":{"entryPoint":null,"id":172,"parameterSlots":0,"returnSlots":0},"@__Context_init_unchained_2832":{"entryPoint":14813,"id":2832,"parameterSlots":0,"returnSlots":0},"@__EIP712_init_unchained_3520":{"entryPoint":14982,"id":3520,"parameterSlots":2,"returnSlots":0},"@__ERC165_init_unchained_3754":{"entryPoint":null,"id":3754,"parameterSlots":0,"returnSlots":0},"@__ERC20Burnable_init_unchained_2405":{"entryPoint":null,"id":2405,"parameterSlots":0,"returnSlots":0},"@__ERC20Pausable_init_unchained_2472":{"entryPoint":null,"id":2472,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_unchained_1756":{"entryPoint":14852,"id":1756,"parameterSlots":2,"returnSlots":0},"@__KRBTokenV01_init_5817":{"entryPoint":12895,"id":5817,"parameterSlots":3,"returnSlots":0},"@__KRBTokenV01_init_unchained_5903":{"entryPoint":15275,"id":5903,"parameterSlots":3,"returnSlots":0},"@__Pausable_init_unchained_1445":{"entryPoint":14930,"id":1445,"parameterSlots":0,"returnSlots":0},"@__PullPayment_init_unchained_1568":{"entryPoint":15049,"id":1568,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_1651":{"entryPoint":15236,"id":1651,"parameterSlots":0,"returnSlots":0},"@_add_5019":{"entryPoint":16880,"id":5019,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_2297":{"entryPoint":null,"id":2297,"parameterSlots":3,"returnSlots":0},"@_approve_2232":{"entryPoint":9673,"id":2232,"parameterSlots":3,"returnSlots":0},"@_asyncTransfer_1612":{"entryPoint":13141,"id":1612,"parameterSlots":2,"returnSlots":0},"@_at_5153":{"entryPoint":14771,"id":5153,"parameterSlots":2,"returnSlots":1},"@_authorizeUpgrade_5914":{"entryPoint":12351,"id":5914,"parameterSlots":1,"returnSlots":0},"@_beforeTokenTransfer_2286":{"entryPoint":null,"id":2286,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2499":{"entryPoint":16348,"id":2499,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_6146":{"entryPoint":13658,"id":6146,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3562":{"entryPoint":null,"id":3562,"parameterSlots":3,"returnSlots":1},"@_burnStake_6192":{"entryPoint":11345,"id":6192,"parameterSlots":2,"returnSlots":0},"@_burn_2187":{"entryPoint":11624,"id":2187,"parameterSlots":2,"returnSlots":0},"@_checkGovern_5735":{"entryPoint":10501,"id":5735,"parameterSlots":0,"returnSlots":0},"@_checkRole_252":{"entryPoint":12113,"id":252,"parameterSlots":1,"returnSlots":0},"@_checkRole_291":{"entryPoint":14036,"id":291,"parameterSlots":2,"returnSlots":0},"@_contains_5122":{"entryPoint":null,"id":5122,"parameterSlots":2,"returnSlots":1},"@_domainSeparatorV4_3535":{"entryPoint":12164,"id":3535,"parameterSlots":0,"returnSlots":1},"@_functionDelegateCall_1083":{"entryPoint":17266,"id":1083,"parameterSlots":2,"returnSlots":1},"@_getCredentialSchema_7550":{"entryPoint":16262,"id":7550,"parameterSlots":1,"returnSlots":1},"@_getCredentialSubject_7520":{"entryPoint":16013,"id":7520,"parameterSlots":1,"returnSlots":1},"@_getImplementation_767":{"entryPoint":12323,"id":767,"parameterSlots":0,"returnSlots":1},"@_getIssuer_7457":{"entryPoint":15924,"id":7457,"parameterSlots":1,"returnSlots":1},"@_grantRole_114":{"entryPoint":12130,"id":114,"parameterSlots":2,"returnSlots":0},"@_grantRole_443":{"entryPoint":14125,"id":443,"parameterSlots":2,"returnSlots":0},"@_hashTypedDataV4_3578":{"entryPoint":13254,"id":3578,"parameterSlots":1,"returnSlots":1},"@_length_5136":{"entryPoint":null,"id":5136,"parameterSlots":1,"returnSlots":1},"@_mint_2115":{"entryPoint":11926,"id":2115,"parameterSlots":2,"returnSlots":0},"@_msgSender_2841":{"entryPoint":null,"id":2841,"parameterSlots":0,"returnSlots":1},"@_msgSender_5948":{"entryPoint":9639,"id":5948,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1685":{"entryPoint":13246,"id":1685,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1677":{"entryPoint":13037,"id":1677,"parameterSlots":0,"returnSlots":0},"@_pause_1509":{"entryPoint":12805,"id":1509,"parameterSlots":0,"returnSlots":0},"@_remove_5103":{"entryPoint":16959,"id":5103,"parameterSlots":2,"returnSlots":1},"@_requireNotPaused_1482":{"entryPoint":14700,"id":1482,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1493":{"entryPoint":14626,"id":1493,"parameterSlots":0,"returnSlots":0},"@_revert_2813":{"entryPoint":null,"id":2813,"parameterSlots":2,"returnSlots":0},"@_revokeRole_138":{"entryPoint":12289,"id":138,"parameterSlots":2,"returnSlots":0},"@_revokeRole_474":{"entryPoint":14281,"id":474,"parameterSlots":2,"returnSlots":0},"@_setImplementation_791":{"entryPoint":14435,"id":791,"parameterSlots":1,"returnSlots":0},"@_setupRole_383":{"entryPoint":17508,"id":383,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_2275":{"entryPoint":9965,"id":2275,"parameterSlots":3,"returnSlots":0},"@_throwError_3145":{"entryPoint":15595,"id":3145,"parameterSlots":1,"returnSlots":0},"@_transfer_2058":{"entryPoint":10081,"id":2058,"parameterSlots":3,"returnSlots":0},"@_unpause_1525":{"entryPoint":12722,"id":1525,"parameterSlots":0,"returnSlots":0},"@_upgradeToAndCallUUPS_887":{"entryPoint":12359,"id":887,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_834":{"entryPoint":14589,"id":834,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_806":{"entryPoint":17202,"id":806,"parameterSlots":1,"returnSlots":0},"@add_4830":{"entryPoint":13622,"id":4830,"parameterSlots":2,"returnSlots":1},"@add_5319":{"entryPoint":14260,"id":5319,"parameterSlots":2,"returnSlots":1},"@allowance_1853":{"entryPoint":8016,"id":1853,"parameterSlots":2,"returnSlots":1},"@approve_1878":{"entryPoint":2738,"id":1878,"parameterSlots":2,"returnSlots":1},"@at_5415":{"entryPoint":12868,"id":5415,"parameterSlots":2,"returnSlots":1},"@balanceOf_1810":{"entryPoint":4995,"id":1810,"parameterSlots":1,"returnSlots":1},"@burnFrom_2439":{"entryPoint":5426,"id":2439,"parameterSlots":2,"returnSlots":0},"@burnStake_6224":{"entryPoint":6122,"id":6224,"parameterSlots":2,"returnSlots":0},"@burn_2418":{"entryPoint":4601,"id":2418,"parameterSlots":1,"returnSlots":0},"@decimals_1786":{"entryPoint":null,"id":1786,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1981":{"entryPoint":6140,"id":1981,"parameterSlots":2,"returnSlots":1},"@deleteVC_6731":{"entryPoint":5022,"id":6731,"parameterSlots":2,"returnSlots":1},"@disputeVCByGovern_7205":{"entryPoint":2820,"id":7205,"parameterSlots":2,"returnSlots":1},"@div_4875":{"entryPoint":13646,"id":4875,"parameterSlots":2,"returnSlots":1},"@expiredVC_6999":{"entryPoint":5470,"id":6999,"parameterSlots":1,"returnSlots":1},"@feePercentage_5648":{"entryPoint":null,"id":5648,"parameterSlots":0,"returnSlots":0},"@feesAvailableForWithdraw_5651":{"entryPoint":null,"id":5651,"parameterSlots":0,"returnSlots":0},"@getAddressSlot_2882":{"entryPoint":null,"id":2882,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_2893":{"entryPoint":null,"id":2893,"parameterSlots":1,"returnSlots":1},"@getReward_7432":{"entryPoint":11609,"id":7432,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_306":{"entryPoint":null,"id":306,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_90":{"entryPoint":7390,"id":90,"parameterSlots":1,"returnSlots":1},"@getRoleMember_74":{"entryPoint":6040,"id":74,"parameterSlots":2,"returnSlots":1},"@getUuid_6327":{"entryPoint":6924,"id":6327,"parameterSlots":1,"returnSlots":1},"@getVCStatus_6395":{"entryPoint":6935,"id":6395,"parameterSlots":1,"returnSlots":1},"@getVerifiableCredential_7613":{"entryPoint":13368,"id":7613,"parameterSlots":1,"returnSlots":1},"@grantRole_326":{"entryPoint":4019,"id":326,"parameterSlots":2,"returnSlots":0},"@hasRole_239":{"entryPoint":6064,"id":239,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1940":{"entryPoint":4521,"id":1940,"parameterSlots":2,"returnSlots":1},"@initialize_5761":{"entryPoint":6285,"id":5761,"parameterSlots":3,"returnSlots":0},"@isContract_2548":{"entryPoint":12880,"id":2548,"parameterSlots":1,"returnSlots":1},"@isTrustedForwarder_5927":{"entryPoint":4974,"id":5927,"parameterSlots":1,"returnSlots":1},"@length_5388":{"entryPoint":13612,"id":5388,"parameterSlots":1,"returnSlots":1},"@maxPriceToIssue_5639":{"entryPoint":null,"id":5639,"parameterSlots":0,"returnSlots":0},"@maxStakeToIssue_5645":{"entryPoint":null,"id":5645,"parameterSlots":0,"returnSlots":0},"@minBalanceToIssue_5633":{"entryPoint":null,"id":5633,"parameterSlots":0,"returnSlots":0},"@minBalanceToReceive_5630":{"entryPoint":null,"id":5630,"parameterSlots":0,"returnSlots":0},"@minBalanceToTransfer_5627":{"entryPoint":null,"id":5627,"parameterSlots":0,"returnSlots":0},"@minPriceToIssue_5636":{"entryPoint":null,"id":5636,"parameterSlots":0,"returnSlots":0},"@minStakeToIssue_5642":{"entryPoint":null,"id":5642,"parameterSlots":0,"returnSlots":0},"@mint_6208":{"entryPoint":4583,"id":6208,"parameterSlots":2,"returnSlots":0},"@mul_4860":{"entryPoint":13634,"id":4860,"parameterSlots":2,"returnSlots":1},"@name_1766":{"entryPoint":2592,"id":1766,"parameterSlots":0,"returnSlots":1},"@pause_6234":{"entryPoint":5454,"id":6234,"parameterSlots":0,"returnSlots":0},"@paused_1470":{"entryPoint":null,"id":1470,"parameterSlots":0,"returnSlots":1},"@payments_1595":{"entryPoint":9471,"id":1595,"parameterSlots":1,"returnSlots":1},"@proxiableUUID_1349":{"entryPoint":4800,"id":1349,"parameterSlots":0,"returnSlots":1},"@recover_3218":{"entryPoint":13332,"id":3218,"parameterSlots":2,"returnSlots":1},"@registerVC_6622":{"entryPoint":8059,"id":6622,"parameterSlots":2,"returnSlots":1},"@registry_5673":{"entryPoint":null,"id":5673,"parameterSlots":0,"returnSlots":0},"@remove_5346":{"entryPoint":14414,"id":5346,"parameterSlots":2,"returnSlots":1},"@renounceRole_369":{"entryPoint":4178,"id":369,"parameterSlots":2,"returnSlots":0},"@revokeRole_346":{"entryPoint":7979,"id":346,"parameterSlots":2,"returnSlots":0},"@revokeVC_6834":{"entryPoint":7413,"id":6834,"parameterSlots":2,"returnSlots":1},"@stakeOf_6257":{"entryPoint":null,"id":6257,"parameterSlots":1,"returnSlots":1},"@sub_4845":{"entryPoint":13129,"id":4845,"parameterSlots":2,"returnSlots":1},"@supportsInterface_220":{"entryPoint":9586,"id":220,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3771":{"entryPoint":null,"id":3771,"parameterSlots":1,"returnSlots":1},"@supportsInterface_55":{"entryPoint":2549,"id":55,"parameterSlots":1,"returnSlots":1},"@suspendVC_6930":{"entryPoint":7635,"id":6930,"parameterSlots":2,"returnSlots":1},"@symbol_1776":{"entryPoint":6107,"id":1776,"parameterSlots":0,"returnSlots":1},"@toHexString_3070":{"entryPoint":16469,"id":3070,"parameterSlots":2,"returnSlots":1},"@toHexString_3090":{"entryPoint":16451,"id":3090,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3451":{"entryPoint":null,"id":3451,"parameterSlots":2,"returnSlots":1},"@totalSupply_1796":{"entryPoint":null,"id":1796,"parameterSlots":0,"returnSlots":1},"@transferFrom_1911":{"entryPoint":2772,"id":1911,"parameterSlots":3,"returnSlots":1},"@transfer_1835":{"entryPoint":6571,"id":1835,"parameterSlots":2,"returnSlots":1},"@trustedForwarder_5624":{"entryPoint":null,"id":5624,"parameterSlots":0,"returnSlots":0},"@tryRecover_3191":{"entryPoint":15525,"id":3191,"parameterSlots":2,"returnSlots":2},"@tryRecover_3359":{"entryPoint":17518,"id":3359,"parameterSlots":4,"returnSlots":2},"@unpause_6244":{"entryPoint":4565,"id":6244,"parameterSlots":0,"returnSlots":0},"@updateParameters_6066":{"entryPoint":5668,"id":6066,"parameterSlots":9,"returnSlots":0},"@upgradeToAndCall_1392":{"entryPoint":4618,"id":1392,"parameterSlots":2,"returnSlots":0},"@upgradeTo_1371":{"entryPoint":4320,"id":1371,"parameterSlots":1,"returnSlots":0},"@validateSignedData_6309":{"entryPoint":6666,"id":6309,"parameterSlots":3,"returnSlots":0},"@validateVC_7411":{"entryPoint":10603,"id":7411,"parameterSlots":1,"returnSlots":0},"@verifyCallResult_2793":{"entryPoint":17704,"id":2793,"parameterSlots":3,"returnSlots":1},"@withdrawFees_7236":{"entryPoint":6595,"id":7236,"parameterSlots":2,"returnSlots":0},"@withdrawPayments_1581":{"entryPoint":4061,"id":1581,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":18102,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":18384,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_CredentialSchema":{"entryPoint":18933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_CredentialSubject":{"entryPoint":18631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Issuer":{"entryPoint":18524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_VerifiableCredential":{"entryPoint":19043,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":19523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_address":{"entryPoint":20219,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":18162,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr":{"entryPoint":20141,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":19552,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":18118,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":18227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":19475,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":19972,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":17932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":20006,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptr":{"entryPoint":19796,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptrt_bytes_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptrt_string_memory_ptr":{"entryPoint":19687,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptrt_struct$_VerifiableCredential_$7312_memory_ptr":{"entryPoint":19376,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":21614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address":{"entryPoint":19856,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_uint8":{"entryPoint":18614,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":18018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_CredentialSchema":{"entryPoint":20602,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_CredentialSubject":{"entryPoint":20374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Issuer":{"entryPoint":20324,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21771,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":19776,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_address_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_bytes32_t_address_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_enum$_Status_$5661_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":19643,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_008d3f233664fb495b27bd80e2a167c986f5e4d1a83de1124a0fbd174d10a58b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_11adc1742b89d376db148ee1423253ca8ce5bccf18c29152e79d450916181b73__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1882f1b1fc242a9895b5ba6cf731f897c919c3aa02c49eabd839b5af5f912a9e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21539,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_19fbd3859058090876c7379a139a68075260c19b49b652a8115d9a2284a56bb2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_332c2939fb313dc20fa48e12a4dc181352b759b37e44ec55d8d7e17b0f95cc4e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_34550b29c2a6cea2c45d9052485cd5d267739ac50461d2acec8e216f6ec8e019__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3603672c3b08973ae817b0488ed6115eb7a95a5d250db50f67ba4f72e13d7a41__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21197,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_59915efbd9b9ea0883ab9a80b80cf8e069efd5c55ae58df7a4d817ffeb895d99__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21459,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_61c878cc2073e2c17eaedc304e8e908cfabe225be81b30fcebd2592845affef1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_65e8e0569f667d83ff560a291a95fc03ec0722346b0fbfc084e161f7c9261e72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68bf8498d45c2faa8674ac2e5b474e7bcc0195dc28826c452a373a323748a8ee__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6940c565f3d71bd3368fee296cb1e459b0065bdd2e5335e6830f498d1bc2458b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6ab6f67ab3e5c9d3e3ad1ce6e59c6145b1dca09929899c966d2f1683f7246d26__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7275d7417746227075f624f85a543397112ae5996ca94abb88e8f8c1a78aafe5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a6e9e56cdc54e2c4c3fa43770fa86f5b2554ff1e5fa1184beda9231a57c0dc0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7c09dfbc593af863f0f68d921742e69677dba2b17f7d0fef75c5f7d53e2a63fc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7e1977cacd35f2d9e9099ad9af0b7986aef7a028a39d80f79d502a11af996b22__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_80adf7fdd8ed453748d6e9747b1b1855d9e9219e68346041dc4ac43505e97331__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_83110a80c054bcc7e4c0b30d1981dbd14d0634878b0d0ea47333f50396778953__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_91ee1d72c262cf54d2263e53ca95d17b8447785204e2fcf5c35c3b85dce47ce6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_991995f99bb432f025de88f8f62466096976af05cf274093f61a137b02eab584__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9aa176bbd438000177acf769a48d80b095df0cb0035424d15e7d7154b35a89e6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9c9622ad52091e2b95a9f53802ec9bc638a7514fa414a842365027a9f4b3d0f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d97f95a245ba79f42a9065910fcf779e5b39b905459cc7e72c471a31d853943__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ac3e225f52da57937dca4729ff7a9b2aef9f1e1bb77e4624f55be8081627dee6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c3c30a0cfcd14b95a736c6e8404a5219d4f4f37173a5b67492adc4f42d450088__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ca4c381f2cae1bcc5b366609fb5b26a5f2d331bb0bb261d709964b6edd5b203e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3e2e532f35077290d5b88b7db3097bb836039268a2ba2d6858c6508237a35cf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21639,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ea2f19a4ac42eec14f65d7d4dcad7015f4efe84177cc6011a1dccdc6b71a0b46__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_edbe082f9bfd44b24100253331b8b5648999939251a9df0a754ae195eec06fdf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21514,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_struct$_VerifiableCredential_$7312_memory_ptr__to_t_uint256_t_struct$_VerifiableCredential_$7312_memory_ptr__fromStack_reversed":{"entryPoint":20648,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":18349,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_6608":{"entryPoint":18274,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_6609":{"entryPoint":18314,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":21349,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":21737,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":20923,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":21151,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":20990,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":21166,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":21714,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":17974,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":21904,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":20265,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":20901,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":19621,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":21927,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":21882,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":18252,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":18081,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:53336:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:33","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:33"},"nodeType":"YulFunctionCall","src":"131:12:33"},"nodeType":"YulExpressionStatement","src":"131:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:33"},"nodeType":"YulFunctionCall","src":"100:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:33"},"nodeType":"YulFunctionCall","src":"96:32:33"},"nodeType":"YulIf","src":"93:52:33"},{"nodeType":"YulVariableDeclaration","src":"154:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:33"},"nodeType":"YulFunctionCall","src":"167:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:33"},"nodeType":"YulFunctionCall","src":"256:12:33"},"nodeType":"YulExpressionStatement","src":"256:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:33","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:33"},"nodeType":"YulFunctionCall","src":"230:20:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:33"},"nodeType":"YulFunctionCall","src":"219:32:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:33"},"nodeType":"YulFunctionCall","src":"209:43:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:33"},"nodeType":"YulFunctionCall","src":"202:51:33"},"nodeType":"YulIf","src":"199:71:33"},{"nodeType":"YulAssignment","src":"279:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:33","type":""}],"src":"14:286:33"},{"body":{"nodeType":"YulBlock","src":"400:92:33","statements":[{"nodeType":"YulAssignment","src":"410:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:33"},"nodeType":"YulFunctionCall","src":"418:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:33"},"nodeType":"YulFunctionCall","src":"470:14:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:33"},"nodeType":"YulFunctionCall","src":"463:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:33"},"nodeType":"YulFunctionCall","src":"445:41:33"},"nodeType":"YulExpressionStatement","src":"445:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:33","type":""}],"src":"305:187:33"},{"body":{"nodeType":"YulBlock","src":"550:205:33","statements":[{"nodeType":"YulVariableDeclaration","src":"560:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"569:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"564:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"629:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"654:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"659:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"650:3:33"},"nodeType":"YulFunctionCall","src":"650:11:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"673:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"678:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"669:3:33"},"nodeType":"YulFunctionCall","src":"669:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"663:5:33"},"nodeType":"YulFunctionCall","src":"663:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"643:6:33"},"nodeType":"YulFunctionCall","src":"643:39:33"},"nodeType":"YulExpressionStatement","src":"643:39:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"590:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"593:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"587:2:33"},"nodeType":"YulFunctionCall","src":"587:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"601:19:33","statements":[{"nodeType":"YulAssignment","src":"603:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"612:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"615:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"608:3:33"},"nodeType":"YulFunctionCall","src":"608:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"603:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"583:3:33","statements":[]},"src":"579:113:33"},{"body":{"nodeType":"YulBlock","src":"718:31:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"731:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"736:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:33"},"nodeType":"YulFunctionCall","src":"727:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"745:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"720:6:33"},"nodeType":"YulFunctionCall","src":"720:27:33"},"nodeType":"YulExpressionStatement","src":"720:27:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"707:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"710:6:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"704:2:33"},"nodeType":"YulFunctionCall","src":"704:13:33"},"nodeType":"YulIf","src":"701:48:33"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"528:3:33","type":""},{"name":"dst","nodeType":"YulTypedName","src":"533:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"538:6:33","type":""}],"src":"497:258:33"},{"body":{"nodeType":"YulBlock","src":"810:208:33","statements":[{"nodeType":"YulVariableDeclaration","src":"820:26:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"840:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"834:5:33"},"nodeType":"YulFunctionCall","src":"834:12:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"824:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"862:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"867:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"855:6:33"},"nodeType":"YulFunctionCall","src":"855:19:33"},"nodeType":"YulExpressionStatement","src":"855:19:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"909:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"916:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"905:3:33"},"nodeType":"YulFunctionCall","src":"905:16:33"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"927:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"932:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:33"},"nodeType":"YulFunctionCall","src":"923:14:33"},{"name":"length","nodeType":"YulIdentifier","src":"939:6:33"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"883:21:33"},"nodeType":"YulFunctionCall","src":"883:63:33"},"nodeType":"YulExpressionStatement","src":"883:63:33"},{"nodeType":"YulAssignment","src":"955:57:33","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"970:3:33"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"983:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"991:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:33"},"nodeType":"YulFunctionCall","src":"979:15:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1000:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"996:3:33"},"nodeType":"YulFunctionCall","src":"996:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"975:3:33"},"nodeType":"YulFunctionCall","src":"975:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"966:3:33"},"nodeType":"YulFunctionCall","src":"966:39:33"},{"kind":"number","nodeType":"YulLiteral","src":"1007:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"962:3:33"},"nodeType":"YulFunctionCall","src":"962:50:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"955:3:33"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"787:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"794:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"802:3:33","type":""}],"src":"760:258:33"},{"body":{"nodeType":"YulBlock","src":"1144:99:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1161:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1172:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1154:6:33"},"nodeType":"YulFunctionCall","src":"1154:21:33"},"nodeType":"YulExpressionStatement","src":"1154:21:33"},{"nodeType":"YulAssignment","src":"1184:53:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1210:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1222:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1233:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1218:3:33"},"nodeType":"YulFunctionCall","src":"1218:18:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1192:17:33"},"nodeType":"YulFunctionCall","src":"1192:45:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1184:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1113:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1124:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1135:4:33","type":""}],"src":"1023:220:33"},{"body":{"nodeType":"YulBlock","src":"1349:76:33","statements":[{"nodeType":"YulAssignment","src":"1359:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1371:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1382:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1367:3:33"},"nodeType":"YulFunctionCall","src":"1367:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1359:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1401:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"1412:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1394:6:33"},"nodeType":"YulFunctionCall","src":"1394:25:33"},"nodeType":"YulExpressionStatement","src":"1394:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1318:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1329:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1340:4:33","type":""}],"src":"1248:177:33"},{"body":{"nodeType":"YulBlock","src":"1475:86:33","statements":[{"body":{"nodeType":"YulBlock","src":"1539:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1548:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1551:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1541:6:33"},"nodeType":"YulFunctionCall","src":"1541:12:33"},"nodeType":"YulExpressionStatement","src":"1541:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1498:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1509:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1524:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1529:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1520:3:33"},"nodeType":"YulFunctionCall","src":"1520:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"1533:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1516:3:33"},"nodeType":"YulFunctionCall","src":"1516:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1505:3:33"},"nodeType":"YulFunctionCall","src":"1505:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1495:2:33"},"nodeType":"YulFunctionCall","src":"1495:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1488:6:33"},"nodeType":"YulFunctionCall","src":"1488:50:33"},"nodeType":"YulIf","src":"1485:70:33"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1464:5:33","type":""}],"src":"1430:131:33"},{"body":{"nodeType":"YulBlock","src":"1615:85:33","statements":[{"nodeType":"YulAssignment","src":"1625:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1647:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1634:12:33"},"nodeType":"YulFunctionCall","src":"1634:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1625:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1688:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1663:24:33"},"nodeType":"YulFunctionCall","src":"1663:31:33"},"nodeType":"YulExpressionStatement","src":"1663:31:33"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1594:6:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1605:5:33","type":""}],"src":"1566:134:33"},{"body":{"nodeType":"YulBlock","src":"1792:228:33","statements":[{"body":{"nodeType":"YulBlock","src":"1838:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1847:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1850:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1840:6:33"},"nodeType":"YulFunctionCall","src":"1840:12:33"},"nodeType":"YulExpressionStatement","src":"1840:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1813:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"1822:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1809:3:33"},"nodeType":"YulFunctionCall","src":"1809:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"1834:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1805:3:33"},"nodeType":"YulFunctionCall","src":"1805:32:33"},"nodeType":"YulIf","src":"1802:52:33"},{"nodeType":"YulVariableDeclaration","src":"1863:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1889:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1876:12:33"},"nodeType":"YulFunctionCall","src":"1876:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1867:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1933:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1908:24:33"},"nodeType":"YulFunctionCall","src":"1908:31:33"},"nodeType":"YulExpressionStatement","src":"1908:31:33"},{"nodeType":"YulAssignment","src":"1948:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"1958:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1948:6:33"}]},{"nodeType":"YulAssignment","src":"1972:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1999:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2010:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1995:3:33"},"nodeType":"YulFunctionCall","src":"1995:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1982:12:33"},"nodeType":"YulFunctionCall","src":"1982:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1972:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1750:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1761:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1773:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1781:6:33","type":""}],"src":"1705:315:33"},{"body":{"nodeType":"YulBlock","src":"2129:352:33","statements":[{"body":{"nodeType":"YulBlock","src":"2175:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2184:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2187:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2177:6:33"},"nodeType":"YulFunctionCall","src":"2177:12:33"},"nodeType":"YulExpressionStatement","src":"2177:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2150:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2159:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2146:3:33"},"nodeType":"YulFunctionCall","src":"2146:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2142:3:33"},"nodeType":"YulFunctionCall","src":"2142:32:33"},"nodeType":"YulIf","src":"2139:52:33"},{"nodeType":"YulVariableDeclaration","src":"2200:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2226:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2213:12:33"},"nodeType":"YulFunctionCall","src":"2213:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2204:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2270:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2245:24:33"},"nodeType":"YulFunctionCall","src":"2245:31:33"},"nodeType":"YulExpressionStatement","src":"2245:31:33"},{"nodeType":"YulAssignment","src":"2285:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"2295:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2285:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"2309:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2341:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2352:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2337:3:33"},"nodeType":"YulFunctionCall","src":"2337:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2324:12:33"},"nodeType":"YulFunctionCall","src":"2324:32:33"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2313:7:33","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2390:7:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2365:24:33"},"nodeType":"YulFunctionCall","src":"2365:33:33"},"nodeType":"YulExpressionStatement","src":"2365:33:33"},{"nodeType":"YulAssignment","src":"2407:17:33","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2417:7:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2407:6:33"}]},{"nodeType":"YulAssignment","src":"2433:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2460:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2471:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2456:3:33"},"nodeType":"YulFunctionCall","src":"2456:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2443:12:33"},"nodeType":"YulFunctionCall","src":"2443:32:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2433:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2079:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2090:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2102:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2110:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2118:6:33","type":""}],"src":"2025:456:33"},{"body":{"nodeType":"YulBlock","src":"2556:110:33","statements":[{"body":{"nodeType":"YulBlock","src":"2602:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2611:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2614:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2604:6:33"},"nodeType":"YulFunctionCall","src":"2604:12:33"},"nodeType":"YulExpressionStatement","src":"2604:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2577:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2586:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2573:3:33"},"nodeType":"YulFunctionCall","src":"2573:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2598:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2569:3:33"},"nodeType":"YulFunctionCall","src":"2569:32:33"},"nodeType":"YulIf","src":"2566:52:33"},{"nodeType":"YulAssignment","src":"2627:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2650:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2637:12:33"},"nodeType":"YulFunctionCall","src":"2637:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2627:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2522:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2533:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2545:6:33","type":""}],"src":"2486:180:33"},{"body":{"nodeType":"YulBlock","src":"2772:76:33","statements":[{"nodeType":"YulAssignment","src":"2782:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2794:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2805:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2790:3:33"},"nodeType":"YulFunctionCall","src":"2790:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2782:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2824:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"2835:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2817:6:33"},"nodeType":"YulFunctionCall","src":"2817:25:33"},"nodeType":"YulExpressionStatement","src":"2817:25:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2741:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2752:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2763:4:33","type":""}],"src":"2671:177:33"},{"body":{"nodeType":"YulBlock","src":"2885:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2902:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2909:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2914:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2905:3:33"},"nodeType":"YulFunctionCall","src":"2905:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2895:6:33"},"nodeType":"YulFunctionCall","src":"2895:31:33"},"nodeType":"YulExpressionStatement","src":"2895:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2942:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2945:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2935:6:33"},"nodeType":"YulFunctionCall","src":"2935:15:33"},"nodeType":"YulExpressionStatement","src":"2935:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2966:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2969:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2959:6:33"},"nodeType":"YulFunctionCall","src":"2959:15:33"},"nodeType":"YulExpressionStatement","src":"2959:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2853:127:33"},{"body":{"nodeType":"YulBlock","src":"3031:211:33","statements":[{"nodeType":"YulAssignment","src":"3041:21:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3057:4:33","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3051:5:33"},"nodeType":"YulFunctionCall","src":"3051:11:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3041:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"3071:35:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3093:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3101:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3089:3:33"},"nodeType":"YulFunctionCall","src":"3089:17:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3075:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3181:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3183:16:33"},"nodeType":"YulFunctionCall","src":"3183:18:33"},"nodeType":"YulExpressionStatement","src":"3183:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3124:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"3136:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3121:2:33"},"nodeType":"YulFunctionCall","src":"3121:34:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3160:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3172:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3157:2:33"},"nodeType":"YulFunctionCall","src":"3157:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3118:2:33"},"nodeType":"YulFunctionCall","src":"3118:62:33"},"nodeType":"YulIf","src":"3115:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3219:4:33","type":"","value":"0x40"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3225:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3212:6:33"},"nodeType":"YulFunctionCall","src":"3212:24:33"},"nodeType":"YulExpressionStatement","src":"3212:24:33"}]},"name":"allocate_memory_6608","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3020:6:33","type":""}],"src":"2985:257:33"},{"body":{"nodeType":"YulBlock","src":"3293:209:33","statements":[{"nodeType":"YulAssignment","src":"3303:19:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3313:5:33"},"nodeType":"YulFunctionCall","src":"3313:9:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3303:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"3331:37:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3353:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3361:6:33","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3349:3:33"},"nodeType":"YulFunctionCall","src":"3349:19:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3335:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3443:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3445:16:33"},"nodeType":"YulFunctionCall","src":"3445:18:33"},"nodeType":"YulExpressionStatement","src":"3445:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3386:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"3398:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3383:2:33"},"nodeType":"YulFunctionCall","src":"3383:34:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3422:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3434:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3419:2:33"},"nodeType":"YulFunctionCall","src":"3419:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3380:2:33"},"nodeType":"YulFunctionCall","src":"3380:62:33"},"nodeType":"YulIf","src":"3377:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3481:2:33","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3485:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3474:6:33"},"nodeType":"YulFunctionCall","src":"3474:22:33"},"nodeType":"YulExpressionStatement","src":"3474:22:33"}]},"name":"allocate_memory_6609","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3282:6:33","type":""}],"src":"3247:255:33"},{"body":{"nodeType":"YulBlock","src":"3548:209:33","statements":[{"nodeType":"YulAssignment","src":"3558:19:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3574:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3568:5:33"},"nodeType":"YulFunctionCall","src":"3568:9:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3558:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"3586:37:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3608:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3616:6:33","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3604:3:33"},"nodeType":"YulFunctionCall","src":"3604:19:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3590:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3698:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3700:16:33"},"nodeType":"YulFunctionCall","src":"3700:18:33"},"nodeType":"YulExpressionStatement","src":"3700:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3641:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"3653:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3638:2:33"},"nodeType":"YulFunctionCall","src":"3638:34:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3677:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3689:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3674:2:33"},"nodeType":"YulFunctionCall","src":"3674:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3635:2:33"},"nodeType":"YulFunctionCall","src":"3635:62:33"},"nodeType":"YulIf","src":"3632:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3736:2:33","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3740:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3729:6:33"},"nodeType":"YulFunctionCall","src":"3729:22:33"},"nodeType":"YulExpressionStatement","src":"3729:22:33"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3537:6:33","type":""}],"src":"3507:250:33"},{"body":{"nodeType":"YulBlock","src":"3815:666:33","statements":[{"body":{"nodeType":"YulBlock","src":"3864:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3873:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3876:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3866:6:33"},"nodeType":"YulFunctionCall","src":"3866:12:33"},"nodeType":"YulExpressionStatement","src":"3866:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3843:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3851:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3839:3:33"},"nodeType":"YulFunctionCall","src":"3839:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"3858:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3835:3:33"},"nodeType":"YulFunctionCall","src":"3835:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3828:6:33"},"nodeType":"YulFunctionCall","src":"3828:35:33"},"nodeType":"YulIf","src":"3825:55:33"},{"nodeType":"YulVariableDeclaration","src":"3889:30:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3912:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3899:12:33"},"nodeType":"YulFunctionCall","src":"3899:20:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3893:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3928:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3938:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3932:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3979:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3981:16:33"},"nodeType":"YulFunctionCall","src":"3981:18:33"},"nodeType":"YulExpressionStatement","src":"3981:18:33"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3971:2:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3975:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3968:2:33"},"nodeType":"YulFunctionCall","src":"3968:10:33"},"nodeType":"YulIf","src":"3965:36:33"},{"nodeType":"YulVariableDeclaration","src":"4010:17:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4024:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4020:3:33"},"nodeType":"YulFunctionCall","src":"4020:7:33"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4014:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4036:23:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4056:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4050:5:33"},"nodeType":"YulFunctionCall","src":"4050:9:33"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4040:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4068:71:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4090:6:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4114:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"4118:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:33"},"nodeType":"YulFunctionCall","src":"4110:13:33"},{"name":"_3","nodeType":"YulIdentifier","src":"4125:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4106:3:33"},"nodeType":"YulFunctionCall","src":"4106:22:33"},{"kind":"number","nodeType":"YulLiteral","src":"4130:2:33","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4102:3:33"},"nodeType":"YulFunctionCall","src":"4102:31:33"},{"name":"_3","nodeType":"YulIdentifier","src":"4135:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4098:3:33"},"nodeType":"YulFunctionCall","src":"4098:40:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4086:3:33"},"nodeType":"YulFunctionCall","src":"4086:53:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4072:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4198:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4200:16:33"},"nodeType":"YulFunctionCall","src":"4200:18:33"},"nodeType":"YulExpressionStatement","src":"4200:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4157:10:33"},{"name":"_2","nodeType":"YulIdentifier","src":"4169:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4154:2:33"},"nodeType":"YulFunctionCall","src":"4154:18:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4177:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4189:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4174:2:33"},"nodeType":"YulFunctionCall","src":"4174:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4151:2:33"},"nodeType":"YulFunctionCall","src":"4151:46:33"},"nodeType":"YulIf","src":"4148:72:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4236:2:33","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4240:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4229:6:33"},"nodeType":"YulFunctionCall","src":"4229:22:33"},"nodeType":"YulExpressionStatement","src":"4229:22:33"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4267:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4275:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4260:6:33"},"nodeType":"YulFunctionCall","src":"4260:18:33"},"nodeType":"YulExpressionStatement","src":"4260:18:33"},{"body":{"nodeType":"YulBlock","src":"4326:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4335:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4338:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4328:6:33"},"nodeType":"YulFunctionCall","src":"4328:12:33"},"nodeType":"YulExpressionStatement","src":"4328:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4301:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4309:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:33"},"nodeType":"YulFunctionCall","src":"4297:15:33"},{"kind":"number","nodeType":"YulLiteral","src":"4314:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4293:3:33"},"nodeType":"YulFunctionCall","src":"4293:26:33"},{"name":"end","nodeType":"YulIdentifier","src":"4321:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4290:2:33"},"nodeType":"YulFunctionCall","src":"4290:35:33"},"nodeType":"YulIf","src":"4287:55:33"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4368:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"4376:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4364:3:33"},"nodeType":"YulFunctionCall","src":"4364:17:33"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4387:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"4395:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4383:3:33"},"nodeType":"YulFunctionCall","src":"4383:17:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4402:2:33"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4351:12:33"},"nodeType":"YulFunctionCall","src":"4351:54:33"},"nodeType":"YulExpressionStatement","src":"4351:54:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4429:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4437:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4425:3:33"},"nodeType":"YulFunctionCall","src":"4425:15:33"},{"kind":"number","nodeType":"YulLiteral","src":"4442:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4421:3:33"},"nodeType":"YulFunctionCall","src":"4421:26:33"},{"kind":"number","nodeType":"YulLiteral","src":"4449:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4414:6:33"},"nodeType":"YulFunctionCall","src":"4414:37:33"},"nodeType":"YulExpressionStatement","src":"4414:37:33"},{"nodeType":"YulAssignment","src":"4460:15:33","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4469:6:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4460:5:33"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3789:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"3797:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3805:5:33","type":""}],"src":"3762:719:33"},{"body":{"nodeType":"YulBlock","src":"4549:419:33","statements":[{"body":{"nodeType":"YulBlock","src":"4593:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4602:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4605:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4595:6:33"},"nodeType":"YulFunctionCall","src":"4595:12:33"},"nodeType":"YulExpressionStatement","src":"4595:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4570:3:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"4575:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4566:3:33"},"nodeType":"YulFunctionCall","src":"4566:19:33"},{"kind":"number","nodeType":"YulLiteral","src":"4587:4:33","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4562:3:33"},"nodeType":"YulFunctionCall","src":"4562:30:33"},"nodeType":"YulIf","src":"4559:50:33"},{"nodeType":"YulAssignment","src":"4618:31:33","value":{"arguments":[],"functionName":{"name":"allocate_memory_6608","nodeType":"YulIdentifier","src":"4627:20:33"},"nodeType":"YulFunctionCall","src":"4627:22:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4618:5:33"}]},{"nodeType":"YulVariableDeclaration","src":"4658:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4685:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4672:12:33"},"nodeType":"YulFunctionCall","src":"4672:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4662:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4738:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4747:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4750:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4740:6:33"},"nodeType":"YulFunctionCall","src":"4740:12:33"},"nodeType":"YulExpressionStatement","src":"4740:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4710:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"4718:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4707:2:33"},"nodeType":"YulFunctionCall","src":"4707:30:33"},"nodeType":"YulIf","src":"4704:50:33"},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4770:5:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4799:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"4810:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4795:3:33"},"nodeType":"YulFunctionCall","src":"4795:22:33"},{"name":"end","nodeType":"YulIdentifier","src":"4819:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4777:17:33"},"nodeType":"YulFunctionCall","src":"4777:46:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4763:6:33"},"nodeType":"YulFunctionCall","src":"4763:61:33"},"nodeType":"YulExpressionStatement","src":"4763:61:33"},{"nodeType":"YulVariableDeclaration","src":"4833:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4865:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4876:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4861:3:33"},"nodeType":"YulFunctionCall","src":"4861:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4848:12:33"},"nodeType":"YulFunctionCall","src":"4848:32:33"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4837:7:33","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4914:7:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4889:24:33"},"nodeType":"YulFunctionCall","src":"4889:33:33"},"nodeType":"YulExpressionStatement","src":"4889:33:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4942:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4938:3:33"},"nodeType":"YulFunctionCall","src":"4938:14:33"},{"name":"value_1","nodeType":"YulIdentifier","src":"4954:7:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4931:6:33"},"nodeType":"YulFunctionCall","src":"4931:31:33"},"nodeType":"YulExpressionStatement","src":"4931:31:33"}]},"name":"abi_decode_struct_Issuer","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4520:9:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"4531:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4539:5:33","type":""}],"src":"4486:482:33"},{"body":{"nodeType":"YulBlock","src":"5020:109:33","statements":[{"nodeType":"YulAssignment","src":"5030:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5052:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5039:12:33"},"nodeType":"YulFunctionCall","src":"5039:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5030:5:33"}]},{"body":{"nodeType":"YulBlock","src":"5107:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5116:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5119:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5109:6:33"},"nodeType":"YulFunctionCall","src":"5109:12:33"},"nodeType":"YulExpressionStatement","src":"5109:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5081:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5092:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"5099:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5088:3:33"},"nodeType":"YulFunctionCall","src":"5088:16:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5078:2:33"},"nodeType":"YulFunctionCall","src":"5078:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5071:6:33"},"nodeType":"YulFunctionCall","src":"5071:35:33"},"nodeType":"YulIf","src":"5068:55:33"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4999:6:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5010:5:33","type":""}],"src":"4973:156:33"},{"body":{"nodeType":"YulBlock","src":"5208:1510:33","statements":[{"body":{"nodeType":"YulBlock","src":"5254:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5263:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5266:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5256:6:33"},"nodeType":"YulFunctionCall","src":"5256:12:33"},"nodeType":"YulExpressionStatement","src":"5256:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5229:3:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"5234:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5225:3:33"},"nodeType":"YulFunctionCall","src":"5225:19:33"},{"kind":"number","nodeType":"YulLiteral","src":"5246:6:33","type":"","value":"0x0160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5221:3:33"},"nodeType":"YulFunctionCall","src":"5221:32:33"},"nodeType":"YulIf","src":"5218:52:33"},{"nodeType":"YulAssignment","src":"5279:31:33","value":{"arguments":[],"functionName":{"name":"allocate_memory_6609","nodeType":"YulIdentifier","src":"5288:20:33"},"nodeType":"YulFunctionCall","src":"5288:22:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5279:5:33"}]},{"nodeType":"YulVariableDeclaration","src":"5319:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5346:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5333:12:33"},"nodeType":"YulFunctionCall","src":"5333:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5365:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5375:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5369:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5420:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5429:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5432:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5422:6:33"},"nodeType":"YulFunctionCall","src":"5422:12:33"},"nodeType":"YulExpressionStatement","src":"5422:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5408:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"5416:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5405:2:33"},"nodeType":"YulFunctionCall","src":"5405:14:33"},"nodeType":"YulIf","src":"5402:34:33"},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5452:5:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5481:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"5492:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5477:3:33"},"nodeType":"YulFunctionCall","src":"5477:22:33"},{"name":"end","nodeType":"YulIdentifier","src":"5501:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5459:17:33"},"nodeType":"YulFunctionCall","src":"5459:46:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5445:6:33"},"nodeType":"YulFunctionCall","src":"5445:61:33"},"nodeType":"YulExpressionStatement","src":"5445:61:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5526:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"5533:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5522:3:33"},"nodeType":"YulFunctionCall","src":"5522:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5561:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5572:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5557:3:33"},"nodeType":"YulFunctionCall","src":"5557:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5538:18:33"},"nodeType":"YulFunctionCall","src":"5538:38:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5515:6:33"},"nodeType":"YulFunctionCall","src":"5515:62:33"},"nodeType":"YulExpressionStatement","src":"5515:62:33"},{"nodeType":"YulVariableDeclaration","src":"5586:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5619:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5630:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5615:3:33"},"nodeType":"YulFunctionCall","src":"5615:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5602:12:33"},"nodeType":"YulFunctionCall","src":"5602:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5590:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5663:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5672:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5675:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5665:6:33"},"nodeType":"YulFunctionCall","src":"5665:12:33"},"nodeType":"YulExpressionStatement","src":"5665:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5649:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"5659:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5646:2:33"},"nodeType":"YulFunctionCall","src":"5646:16:33"},"nodeType":"YulIf","src":"5643:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5699:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"5706:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5695:3:33"},"nodeType":"YulFunctionCall","src":"5695:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5733:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5744:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5729:3:33"},"nodeType":"YulFunctionCall","src":"5729:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"5755:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5711:17:33"},"nodeType":"YulFunctionCall","src":"5711:48:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5688:6:33"},"nodeType":"YulFunctionCall","src":"5688:72:33"},"nodeType":"YulExpressionStatement","src":"5688:72:33"},{"nodeType":"YulVariableDeclaration","src":"5769:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5802:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5813:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5798:3:33"},"nodeType":"YulFunctionCall","src":"5798:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5785:12:33"},"nodeType":"YulFunctionCall","src":"5785:32:33"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"5773:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5846:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5855:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5858:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5848:6:33"},"nodeType":"YulFunctionCall","src":"5848:12:33"},"nodeType":"YulExpressionStatement","src":"5848:12:33"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"5832:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"5842:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5829:2:33"},"nodeType":"YulFunctionCall","src":"5829:16:33"},"nodeType":"YulIf","src":"5826:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5882:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"5889:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5878:3:33"},"nodeType":"YulFunctionCall","src":"5878:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5916:9:33"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5927:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5912:3:33"},"nodeType":"YulFunctionCall","src":"5912:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"5938:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5894:17:33"},"nodeType":"YulFunctionCall","src":"5894:48:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5871:6:33"},"nodeType":"YulFunctionCall","src":"5871:72:33"},"nodeType":"YulExpressionStatement","src":"5871:72:33"},{"nodeType":"YulVariableDeclaration","src":"5952:49:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5985:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5996:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5981:3:33"},"nodeType":"YulFunctionCall","src":"5981:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5968:12:33"},"nodeType":"YulFunctionCall","src":"5968:33:33"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"5956:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6030:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6039:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6042:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6032:6:33"},"nodeType":"YulFunctionCall","src":"6032:12:33"},"nodeType":"YulExpressionStatement","src":"6032:12:33"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"6016:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6026:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6013:2:33"},"nodeType":"YulFunctionCall","src":"6013:16:33"},"nodeType":"YulIf","src":"6010:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6066:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"6073:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6062:3:33"},"nodeType":"YulFunctionCall","src":"6062:15:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6101:9:33"},{"name":"offset_3","nodeType":"YulIdentifier","src":"6112:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6097:3:33"},"nodeType":"YulFunctionCall","src":"6097:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"6123:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6079:17:33"},"nodeType":"YulFunctionCall","src":"6079:48:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6055:6:33"},"nodeType":"YulFunctionCall","src":"6055:73:33"},"nodeType":"YulExpressionStatement","src":"6055:73:33"},{"nodeType":"YulVariableDeclaration","src":"6137:49:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6170:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6181:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6166:3:33"},"nodeType":"YulFunctionCall","src":"6166:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6153:12:33"},"nodeType":"YulFunctionCall","src":"6153:33:33"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"6141:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6215:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6224:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6227:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6217:6:33"},"nodeType":"YulFunctionCall","src":"6217:12:33"},"nodeType":"YulExpressionStatement","src":"6217:12:33"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"6201:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6211:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6198:2:33"},"nodeType":"YulFunctionCall","src":"6198:16:33"},"nodeType":"YulIf","src":"6195:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6251:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"6258:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6247:3:33"},"nodeType":"YulFunctionCall","src":"6247:15:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6286:9:33"},{"name":"offset_4","nodeType":"YulIdentifier","src":"6297:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6282:3:33"},"nodeType":"YulFunctionCall","src":"6282:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"6308:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6264:17:33"},"nodeType":"YulFunctionCall","src":"6264:48:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6240:6:33"},"nodeType":"YulFunctionCall","src":"6240:73:33"},"nodeType":"YulExpressionStatement","src":"6240:73:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6333:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"6340:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6329:3:33"},"nodeType":"YulFunctionCall","src":"6329:15:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6367:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6378:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6363:3:33"},"nodeType":"YulFunctionCall","src":"6363:19:33"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"6346:16:33"},"nodeType":"YulFunctionCall","src":"6346:37:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6322:6:33"},"nodeType":"YulFunctionCall","src":"6322:62:33"},"nodeType":"YulExpressionStatement","src":"6322:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6404:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"6411:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6400:3:33"},"nodeType":"YulFunctionCall","src":"6400:15:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6434:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6445:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6430:3:33"},"nodeType":"YulFunctionCall","src":"6430:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6417:12:33"},"nodeType":"YulFunctionCall","src":"6417:33:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6393:6:33"},"nodeType":"YulFunctionCall","src":"6393:58:33"},"nodeType":"YulExpressionStatement","src":"6393:58:33"},{"nodeType":"YulVariableDeclaration","src":"6460:13:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6470:3:33","type":"","value":"256"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6464:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:33"},{"name":"_2","nodeType":"YulIdentifier","src":"6500:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6489:3:33"},"nodeType":"YulFunctionCall","src":"6489:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6522:9:33"},{"name":"_2","nodeType":"YulIdentifier","src":"6533:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:33"},"nodeType":"YulFunctionCall","src":"6518:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6505:12:33"},"nodeType":"YulFunctionCall","src":"6505:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6482:6:33"},"nodeType":"YulFunctionCall","src":"6482:56:33"},"nodeType":"YulExpressionStatement","src":"6482:56:33"},{"nodeType":"YulVariableDeclaration","src":"6547:13:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6557:3:33","type":"","value":"288"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6551:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6580:5:33"},{"name":"_3","nodeType":"YulIdentifier","src":"6587:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6576:3:33"},"nodeType":"YulFunctionCall","src":"6576:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6609:9:33"},{"name":"_3","nodeType":"YulIdentifier","src":"6620:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6605:3:33"},"nodeType":"YulFunctionCall","src":"6605:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6592:12:33"},"nodeType":"YulFunctionCall","src":"6592:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6569:6:33"},"nodeType":"YulFunctionCall","src":"6569:56:33"},"nodeType":"YulExpressionStatement","src":"6569:56:33"},{"nodeType":"YulVariableDeclaration","src":"6634:13:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6644:3:33","type":"","value":"320"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"6638:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6667:5:33"},{"name":"_4","nodeType":"YulIdentifier","src":"6674:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6663:3:33"},"nodeType":"YulFunctionCall","src":"6663:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6696:9:33"},{"name":"_4","nodeType":"YulIdentifier","src":"6707:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6692:3:33"},"nodeType":"YulFunctionCall","src":"6692:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6679:12:33"},"nodeType":"YulFunctionCall","src":"6679:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6656:6:33"},"nodeType":"YulFunctionCall","src":"6656:56:33"},"nodeType":"YulExpressionStatement","src":"6656:56:33"}]},"name":"abi_decode_struct_CredentialSubject","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5179:9:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"5190:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5198:5:33","type":""}],"src":"5134:1584:33"},{"body":{"nodeType":"YulBlock","src":"6796:485:33","statements":[{"body":{"nodeType":"YulBlock","src":"6840:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6849:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6852:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6842:6:33"},"nodeType":"YulFunctionCall","src":"6842:12:33"},"nodeType":"YulExpressionStatement","src":"6842:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"6817:3:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"6822:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6813:3:33"},"nodeType":"YulFunctionCall","src":"6813:19:33"},{"kind":"number","nodeType":"YulLiteral","src":"6834:4:33","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6809:3:33"},"nodeType":"YulFunctionCall","src":"6809:30:33"},"nodeType":"YulIf","src":"6806:50:33"},{"nodeType":"YulAssignment","src":"6865:31:33","value":{"arguments":[],"functionName":{"name":"allocate_memory_6608","nodeType":"YulIdentifier","src":"6874:20:33"},"nodeType":"YulFunctionCall","src":"6874:22:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6865:5:33"}]},{"nodeType":"YulVariableDeclaration","src":"6905:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6932:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6919:12:33"},"nodeType":"YulFunctionCall","src":"6919:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6909:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6951:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6961:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6955:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"7006:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7015:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7018:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7008:6:33"},"nodeType":"YulFunctionCall","src":"7008:12:33"},"nodeType":"YulExpressionStatement","src":"7008:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6994:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"7002:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6991:2:33"},"nodeType":"YulFunctionCall","src":"6991:14:33"},"nodeType":"YulIf","src":"6988:34:33"},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7038:5:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7067:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"7078:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7063:3:33"},"nodeType":"YulFunctionCall","src":"7063:22:33"},{"name":"end","nodeType":"YulIdentifier","src":"7087:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7045:17:33"},"nodeType":"YulFunctionCall","src":"7045:46:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7031:6:33"},"nodeType":"YulFunctionCall","src":"7031:61:33"},"nodeType":"YulExpressionStatement","src":"7031:61:33"},{"nodeType":"YulVariableDeclaration","src":"7101:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7134:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7145:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7130:3:33"},"nodeType":"YulFunctionCall","src":"7130:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7117:12:33"},"nodeType":"YulFunctionCall","src":"7117:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7105:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"7178:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7187:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7190:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7180:6:33"},"nodeType":"YulFunctionCall","src":"7180:12:33"},"nodeType":"YulExpressionStatement","src":"7180:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7164:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"7174:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7161:2:33"},"nodeType":"YulFunctionCall","src":"7161:16:33"},"nodeType":"YulIf","src":"7158:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7214:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"7221:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7210:3:33"},"nodeType":"YulFunctionCall","src":"7210:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7248:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7259:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7244:3:33"},"nodeType":"YulFunctionCall","src":"7244:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"7270:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7226:17:33"},"nodeType":"YulFunctionCall","src":"7226:48:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7203:6:33"},"nodeType":"YulFunctionCall","src":"7203:72:33"},"nodeType":"YulExpressionStatement","src":"7203:72:33"}]},"name":"abi_decode_struct_CredentialSchema","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6767:9:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"6778:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6786:5:33","type":""}],"src":"6723:558:33"},{"body":{"nodeType":"YulBlock","src":"7363:1630:33","statements":[{"body":{"nodeType":"YulBlock","src":"7409:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7418:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7421:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7411:6:33"},"nodeType":"YulFunctionCall","src":"7411:12:33"},"nodeType":"YulExpressionStatement","src":"7411:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"7384:3:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"7389:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7380:3:33"},"nodeType":"YulFunctionCall","src":"7380:19:33"},{"kind":"number","nodeType":"YulLiteral","src":"7401:6:33","type":"","value":"0x0100"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7376:3:33"},"nodeType":"YulFunctionCall","src":"7376:32:33"},"nodeType":"YulIf","src":"7373:52:33"},{"nodeType":"YulAssignment","src":"7434:26:33","value":{"arguments":[],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7443:15:33"},"nodeType":"YulFunctionCall","src":"7443:17:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7434:5:33"}]},{"nodeType":"YulVariableDeclaration","src":"7469:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7496:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7483:12:33"},"nodeType":"YulFunctionCall","src":"7483:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7473:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7515:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"7525:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7519:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"7570:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7579:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7582:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7572:6:33"},"nodeType":"YulFunctionCall","src":"7572:12:33"},"nodeType":"YulExpressionStatement","src":"7572:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7558:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"7566:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7555:2:33"},"nodeType":"YulFunctionCall","src":"7555:14:33"},"nodeType":"YulIf","src":"7552:34:33"},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7602:5:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7631:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"7642:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7627:3:33"},"nodeType":"YulFunctionCall","src":"7627:22:33"},{"name":"end","nodeType":"YulIdentifier","src":"7651:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7609:17:33"},"nodeType":"YulFunctionCall","src":"7609:46:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7595:6:33"},"nodeType":"YulFunctionCall","src":"7595:61:33"},"nodeType":"YulExpressionStatement","src":"7595:61:33"},{"nodeType":"YulVariableDeclaration","src":"7665:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7698:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7709:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7694:3:33"},"nodeType":"YulFunctionCall","src":"7694:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7681:12:33"},"nodeType":"YulFunctionCall","src":"7681:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7669:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"7742:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7751:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7754:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7744:6:33"},"nodeType":"YulFunctionCall","src":"7744:12:33"},"nodeType":"YulExpressionStatement","src":"7744:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7728:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"7738:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7725:2:33"},"nodeType":"YulFunctionCall","src":"7725:16:33"},"nodeType":"YulIf","src":"7722:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7778:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"7785:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7774:3:33"},"nodeType":"YulFunctionCall","src":"7774:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7812:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7823:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7808:3:33"},"nodeType":"YulFunctionCall","src":"7808:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"7834:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7790:17:33"},"nodeType":"YulFunctionCall","src":"7790:48:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7767:6:33"},"nodeType":"YulFunctionCall","src":"7767:72:33"},"nodeType":"YulExpressionStatement","src":"7767:72:33"},{"nodeType":"YulVariableDeclaration","src":"7848:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7881:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7892:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7877:3:33"},"nodeType":"YulFunctionCall","src":"7877:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7864:12:33"},"nodeType":"YulFunctionCall","src":"7864:32:33"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"7852:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"7925:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7934:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7937:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7927:6:33"},"nodeType":"YulFunctionCall","src":"7927:12:33"},"nodeType":"YulExpressionStatement","src":"7927:12:33"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"7911:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"7921:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7908:2:33"},"nodeType":"YulFunctionCall","src":"7908:16:33"},"nodeType":"YulIf","src":"7905:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7961:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"7968:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7957:3:33"},"nodeType":"YulFunctionCall","src":"7957:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7995:9:33"},{"name":"offset_2","nodeType":"YulIdentifier","src":"8006:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7991:3:33"},"nodeType":"YulFunctionCall","src":"7991:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"8017:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7973:17:33"},"nodeType":"YulFunctionCall","src":"7973:48:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7950:6:33"},"nodeType":"YulFunctionCall","src":"7950:72:33"},"nodeType":"YulExpressionStatement","src":"7950:72:33"},{"nodeType":"YulVariableDeclaration","src":"8031:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8064:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8075:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8060:3:33"},"nodeType":"YulFunctionCall","src":"8060:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8047:12:33"},"nodeType":"YulFunctionCall","src":"8047:32:33"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"8035:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"8108:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8117:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8120:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8110:6:33"},"nodeType":"YulFunctionCall","src":"8110:12:33"},"nodeType":"YulExpressionStatement","src":"8110:12:33"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"8094:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"8104:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8091:2:33"},"nodeType":"YulFunctionCall","src":"8091:16:33"},"nodeType":"YulIf","src":"8088:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8144:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"8151:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8140:3:33"},"nodeType":"YulFunctionCall","src":"8140:14:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8185:9:33"},{"name":"offset_3","nodeType":"YulIdentifier","src":"8196:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8181:3:33"},"nodeType":"YulFunctionCall","src":"8181:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"8207:3:33"}],"functionName":{"name":"abi_decode_struct_Issuer","nodeType":"YulIdentifier","src":"8156:24:33"},"nodeType":"YulFunctionCall","src":"8156:55:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8133:6:33"},"nodeType":"YulFunctionCall","src":"8133:79:33"},"nodeType":"YulExpressionStatement","src":"8133:79:33"},{"nodeType":"YulVariableDeclaration","src":"8221:49:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8254:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8265:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8250:3:33"},"nodeType":"YulFunctionCall","src":"8250:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8237:12:33"},"nodeType":"YulFunctionCall","src":"8237:33:33"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"8225:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"8299:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8308:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8311:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8301:6:33"},"nodeType":"YulFunctionCall","src":"8301:12:33"},"nodeType":"YulExpressionStatement","src":"8301:12:33"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"8285:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"8295:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8282:2:33"},"nodeType":"YulFunctionCall","src":"8282:16:33"},"nodeType":"YulIf","src":"8279:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8335:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"8342:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8331:3:33"},"nodeType":"YulFunctionCall","src":"8331:15:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8388:9:33"},{"name":"offset_4","nodeType":"YulIdentifier","src":"8399:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8384:3:33"},"nodeType":"YulFunctionCall","src":"8384:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"8410:3:33"}],"functionName":{"name":"abi_decode_struct_CredentialSubject","nodeType":"YulIdentifier","src":"8348:35:33"},"nodeType":"YulFunctionCall","src":"8348:66:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8324:6:33"},"nodeType":"YulFunctionCall","src":"8324:91:33"},"nodeType":"YulExpressionStatement","src":"8324:91:33"},{"nodeType":"YulVariableDeclaration","src":"8424:49:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8457:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8468:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8453:3:33"},"nodeType":"YulFunctionCall","src":"8453:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8440:12:33"},"nodeType":"YulFunctionCall","src":"8440:33:33"},"variables":[{"name":"offset_5","nodeType":"YulTypedName","src":"8428:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"8502:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8511:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8514:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8504:6:33"},"nodeType":"YulFunctionCall","src":"8504:12:33"},"nodeType":"YulExpressionStatement","src":"8504:12:33"}]},"condition":{"arguments":[{"name":"offset_5","nodeType":"YulIdentifier","src":"8488:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"8498:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8485:2:33"},"nodeType":"YulFunctionCall","src":"8485:16:33"},"nodeType":"YulIf","src":"8482:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8538:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"8545:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8534:3:33"},"nodeType":"YulFunctionCall","src":"8534:15:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8590:9:33"},{"name":"offset_5","nodeType":"YulIdentifier","src":"8601:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8586:3:33"},"nodeType":"YulFunctionCall","src":"8586:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"8612:3:33"}],"functionName":{"name":"abi_decode_struct_CredentialSchema","nodeType":"YulIdentifier","src":"8551:34:33"},"nodeType":"YulFunctionCall","src":"8551:65:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8527:6:33"},"nodeType":"YulFunctionCall","src":"8527:90:33"},"nodeType":"YulExpressionStatement","src":"8527:90:33"},{"nodeType":"YulVariableDeclaration","src":"8626:49:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8659:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8670:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8655:3:33"},"nodeType":"YulFunctionCall","src":"8655:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8642:12:33"},"nodeType":"YulFunctionCall","src":"8642:33:33"},"variables":[{"name":"offset_6","nodeType":"YulTypedName","src":"8630:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"8704:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8713:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8716:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8706:6:33"},"nodeType":"YulFunctionCall","src":"8706:12:33"},"nodeType":"YulExpressionStatement","src":"8706:12:33"}]},"condition":{"arguments":[{"name":"offset_6","nodeType":"YulIdentifier","src":"8690:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"8700:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8687:2:33"},"nodeType":"YulFunctionCall","src":"8687:16:33"},"nodeType":"YulIf","src":"8684:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8740:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"8747:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8736:3:33"},"nodeType":"YulFunctionCall","src":"8736:15:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8775:9:33"},{"name":"offset_6","nodeType":"YulIdentifier","src":"8786:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8771:3:33"},"nodeType":"YulFunctionCall","src":"8771:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"8797:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8753:17:33"},"nodeType":"YulFunctionCall","src":"8753:48:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8729:6:33"},"nodeType":"YulFunctionCall","src":"8729:73:33"},"nodeType":"YulExpressionStatement","src":"8729:73:33"},{"nodeType":"YulVariableDeclaration","src":"8811:49:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8844:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8855:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8840:3:33"},"nodeType":"YulFunctionCall","src":"8840:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8827:12:33"},"nodeType":"YulFunctionCall","src":"8827:33:33"},"variables":[{"name":"offset_7","nodeType":"YulTypedName","src":"8815:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"8889:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8898:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8901:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8891:6:33"},"nodeType":"YulFunctionCall","src":"8891:12:33"},"nodeType":"YulExpressionStatement","src":"8891:12:33"}]},"condition":{"arguments":[{"name":"offset_7","nodeType":"YulIdentifier","src":"8875:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"8885:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8872:2:33"},"nodeType":"YulFunctionCall","src":"8872:16:33"},"nodeType":"YulIf","src":"8869:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8925:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"8932:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8921:3:33"},"nodeType":"YulFunctionCall","src":"8921:15:33"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8960:9:33"},{"name":"offset_7","nodeType":"YulIdentifier","src":"8971:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8956:3:33"},"nodeType":"YulFunctionCall","src":"8956:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"8982:3:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8938:17:33"},"nodeType":"YulFunctionCall","src":"8938:48:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8914:6:33"},"nodeType":"YulFunctionCall","src":"8914:73:33"},"nodeType":"YulExpressionStatement","src":"8914:73:33"}]},"name":"abi_decode_struct_VerifiableCredential","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7334:9:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"7345:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7353:5:33","type":""}],"src":"7286:1707:33"},{"body":{"nodeType":"YulBlock","src":"9161:478:33","statements":[{"body":{"nodeType":"YulBlock","src":"9207:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9216:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9219:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9209:6:33"},"nodeType":"YulFunctionCall","src":"9209:12:33"},"nodeType":"YulExpressionStatement","src":"9209:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9182:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"9191:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9178:3:33"},"nodeType":"YulFunctionCall","src":"9178:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"9203:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9174:3:33"},"nodeType":"YulFunctionCall","src":"9174:32:33"},"nodeType":"YulIf","src":"9171:52:33"},{"nodeType":"YulVariableDeclaration","src":"9232:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9259:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9246:12:33"},"nodeType":"YulFunctionCall","src":"9246:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9236:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9278:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9288:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9282:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9333:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9342:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9345:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9335:6:33"},"nodeType":"YulFunctionCall","src":"9335:12:33"},"nodeType":"YulExpressionStatement","src":"9335:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9321:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9329:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9318:2:33"},"nodeType":"YulFunctionCall","src":"9318:14:33"},"nodeType":"YulIf","src":"9315:34:33"},{"nodeType":"YulAssignment","src":"9358:81:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9411:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"9422:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9407:3:33"},"nodeType":"YulFunctionCall","src":"9407:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9431:7:33"}],"functionName":{"name":"abi_decode_struct_VerifiableCredential","nodeType":"YulIdentifier","src":"9368:38:33"},"nodeType":"YulFunctionCall","src":"9368:71:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9358:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"9448:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9481:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9492:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9477:3:33"},"nodeType":"YulFunctionCall","src":"9477:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9464:12:33"},"nodeType":"YulFunctionCall","src":"9464:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"9452:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9525:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9534:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9537:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9527:6:33"},"nodeType":"YulFunctionCall","src":"9527:12:33"},"nodeType":"YulExpressionStatement","src":"9527:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"9511:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9521:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9508:2:33"},"nodeType":"YulFunctionCall","src":"9508:16:33"},"nodeType":"YulIf","src":"9505:36:33"},{"nodeType":"YulAssignment","src":"9550:83:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9603:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"9614:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9599:3:33"},"nodeType":"YulFunctionCall","src":"9599:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9625:7:33"}],"functionName":{"name":"abi_decode_struct_VerifiableCredential","nodeType":"YulIdentifier","src":"9560:38:33"},"nodeType":"YulFunctionCall","src":"9560:73:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9550:6:33"}]}]},"name":"abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptrt_struct$_VerifiableCredential_$7312_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9119:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9130:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9142:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9150:6:33","type":""}],"src":"8998:641:33"},{"body":{"nodeType":"YulBlock","src":"9731:228:33","statements":[{"body":{"nodeType":"YulBlock","src":"9777:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9786:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9789:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9779:6:33"},"nodeType":"YulFunctionCall","src":"9779:12:33"},"nodeType":"YulExpressionStatement","src":"9779:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9752:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"9761:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9748:3:33"},"nodeType":"YulFunctionCall","src":"9748:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"9773:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9744:3:33"},"nodeType":"YulFunctionCall","src":"9744:32:33"},"nodeType":"YulIf","src":"9741:52:33"},{"nodeType":"YulAssignment","src":"9802:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9825:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9812:12:33"},"nodeType":"YulFunctionCall","src":"9812:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9802:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"9844:45:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9874:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9885:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9870:3:33"},"nodeType":"YulFunctionCall","src":"9870:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9857:12:33"},"nodeType":"YulFunctionCall","src":"9857:32:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9848:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9923:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9898:24:33"},"nodeType":"YulFunctionCall","src":"9898:31:33"},"nodeType":"YulExpressionStatement","src":"9898:31:33"},{"nodeType":"YulAssignment","src":"9938:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"9948:5:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9938:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9689:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9700:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9712:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9720:6:33","type":""}],"src":"9644:315:33"},{"body":{"nodeType":"YulBlock","src":"10006:33:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10015:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10024:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"10031:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10020:3:33"},"nodeType":"YulFunctionCall","src":"10020:16:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10008:6:33"},"nodeType":"YulFunctionCall","src":"10008:29:33"},"nodeType":"YulExpressionStatement","src":"10008:29:33"}]},"name":"abi_encode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9990:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9997:3:33","type":""}],"src":"9964:75:33"},{"body":{"nodeType":"YulBlock","src":"10141:87:33","statements":[{"nodeType":"YulAssignment","src":"10151:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10163:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10174:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10159:3:33"},"nodeType":"YulFunctionCall","src":"10159:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10151:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10193:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10208:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"10216:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10204:3:33"},"nodeType":"YulFunctionCall","src":"10204:17:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10186:6:33"},"nodeType":"YulFunctionCall","src":"10186:36:33"},"nodeType":"YulExpressionStatement","src":"10186:36:33"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10110:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10121:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10132:4:33","type":""}],"src":"10044:184:33"},{"body":{"nodeType":"YulBlock","src":"10311:177:33","statements":[{"body":{"nodeType":"YulBlock","src":"10357:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10366:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10369:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10359:6:33"},"nodeType":"YulFunctionCall","src":"10359:12:33"},"nodeType":"YulExpressionStatement","src":"10359:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10332:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"10341:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10328:3:33"},"nodeType":"YulFunctionCall","src":"10328:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"10353:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10324:3:33"},"nodeType":"YulFunctionCall","src":"10324:32:33"},"nodeType":"YulIf","src":"10321:52:33"},{"nodeType":"YulVariableDeclaration","src":"10382:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10408:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10395:12:33"},"nodeType":"YulFunctionCall","src":"10395:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10386:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10452:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10427:24:33"},"nodeType":"YulFunctionCall","src":"10427:31:33"},"nodeType":"YulExpressionStatement","src":"10427:31:33"},{"nodeType":"YulAssignment","src":"10467:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"10477:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10467:6:33"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10277:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10288:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10300:6:33","type":""}],"src":"10233:255:33"},{"body":{"nodeType":"YulBlock","src":"10563:177:33","statements":[{"body":{"nodeType":"YulBlock","src":"10609:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10618:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10621:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10611:6:33"},"nodeType":"YulFunctionCall","src":"10611:12:33"},"nodeType":"YulExpressionStatement","src":"10611:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10584:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"10593:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10580:3:33"},"nodeType":"YulFunctionCall","src":"10580:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"10605:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10576:3:33"},"nodeType":"YulFunctionCall","src":"10576:32:33"},"nodeType":"YulIf","src":"10573:52:33"},{"nodeType":"YulVariableDeclaration","src":"10634:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10660:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10647:12:33"},"nodeType":"YulFunctionCall","src":"10647:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10638:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10704:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10679:24:33"},"nodeType":"YulFunctionCall","src":"10679:31:33"},"nodeType":"YulExpressionStatement","src":"10679:31:33"},{"nodeType":"YulAssignment","src":"10719:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"10729:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10719:6:33"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10529:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10540:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10552:6:33","type":""}],"src":"10493:247:33"},{"body":{"nodeType":"YulBlock","src":"10815:110:33","statements":[{"body":{"nodeType":"YulBlock","src":"10861:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10870:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10873:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10863:6:33"},"nodeType":"YulFunctionCall","src":"10863:12:33"},"nodeType":"YulExpressionStatement","src":"10863:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10836:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"10845:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10832:3:33"},"nodeType":"YulFunctionCall","src":"10832:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"10857:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10828:3:33"},"nodeType":"YulFunctionCall","src":"10828:32:33"},"nodeType":"YulIf","src":"10825:52:33"},{"nodeType":"YulAssignment","src":"10886:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10909:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10896:12:33"},"nodeType":"YulFunctionCall","src":"10896:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10886:6:33"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10781:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10792:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10804:6:33","type":""}],"src":"10745:180:33"},{"body":{"nodeType":"YulBlock","src":"11026:360:33","statements":[{"body":{"nodeType":"YulBlock","src":"11072:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11081:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11084:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11074:6:33"},"nodeType":"YulFunctionCall","src":"11074:12:33"},"nodeType":"YulExpressionStatement","src":"11074:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11047:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"11056:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11043:3:33"},"nodeType":"YulFunctionCall","src":"11043:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"11068:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11039:3:33"},"nodeType":"YulFunctionCall","src":"11039:32:33"},"nodeType":"YulIf","src":"11036:52:33"},{"nodeType":"YulVariableDeclaration","src":"11097:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11123:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11110:12:33"},"nodeType":"YulFunctionCall","src":"11110:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11101:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11167:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"11142:24:33"},"nodeType":"YulFunctionCall","src":"11142:31:33"},"nodeType":"YulExpressionStatement","src":"11142:31:33"},{"nodeType":"YulAssignment","src":"11182:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"11192:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11182:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"11206:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11237:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11248:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11233:3:33"},"nodeType":"YulFunctionCall","src":"11233:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11220:12:33"},"nodeType":"YulFunctionCall","src":"11220:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11210:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"11295:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11304:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11307:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11297:6:33"},"nodeType":"YulFunctionCall","src":"11297:12:33"},"nodeType":"YulExpressionStatement","src":"11297:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11267:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"11275:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11264:2:33"},"nodeType":"YulFunctionCall","src":"11264:30:33"},"nodeType":"YulIf","src":"11261:50:33"},{"nodeType":"YulAssignment","src":"11320:60:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11352:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"11363:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11348:3:33"},"nodeType":"YulFunctionCall","src":"11348:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11372:7:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"11330:17:33"},"nodeType":"YulFunctionCall","src":"11330:50:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11320:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10984:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10995:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11007:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11015:6:33","type":""}],"src":"10930:456:33"},{"body":{"nodeType":"YulBlock","src":"11423:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11440:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11447:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11452:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11443:3:33"},"nodeType":"YulFunctionCall","src":"11443:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11433:6:33"},"nodeType":"YulFunctionCall","src":"11433:31:33"},"nodeType":"YulExpressionStatement","src":"11433:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11480:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11483:4:33","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11473:6:33"},"nodeType":"YulFunctionCall","src":"11473:15:33"},"nodeType":"YulExpressionStatement","src":"11473:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11504:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11507:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11497:6:33"},"nodeType":"YulFunctionCall","src":"11497:15:33"},"nodeType":"YulExpressionStatement","src":"11497:15:33"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11391:127:33"},{"body":{"nodeType":"YulBlock","src":"11661:272:33","statements":[{"nodeType":"YulAssignment","src":"11671:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11683:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11694:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11679:3:33"},"nodeType":"YulFunctionCall","src":"11679:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11671:4:33"}]},{"body":{"nodeType":"YulBlock","src":"11739:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11760:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11767:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11772:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11763:3:33"},"nodeType":"YulFunctionCall","src":"11763:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11753:6:33"},"nodeType":"YulFunctionCall","src":"11753:31:33"},"nodeType":"YulExpressionStatement","src":"11753:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11804:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11807:4:33","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11797:6:33"},"nodeType":"YulFunctionCall","src":"11797:15:33"},"nodeType":"YulExpressionStatement","src":"11797:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11832:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11835:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11825:6:33"},"nodeType":"YulFunctionCall","src":"11825:15:33"},"nodeType":"YulExpressionStatement","src":"11825:15:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11719:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"11727:1:33","type":"","value":"6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11716:2:33"},"nodeType":"YulFunctionCall","src":"11716:13:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11709:6:33"},"nodeType":"YulFunctionCall","src":"11709:21:33"},"nodeType":"YulIf","src":"11706:144:33"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11866:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"11877:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11859:6:33"},"nodeType":"YulFunctionCall","src":"11859:25:33"},"nodeType":"YulExpressionStatement","src":"11859:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11904:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11915:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11900:3:33"},"nodeType":"YulFunctionCall","src":"11900:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"11920:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11893:6:33"},"nodeType":"YulFunctionCall","src":"11893:34:33"},"nodeType":"YulExpressionStatement","src":"11893:34:33"}]},"name":"abi_encode_tuple_t_enum$_Status_$5661_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11622:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11633:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11641:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11652:4:33","type":""}],"src":"11523:410:33"},{"body":{"nodeType":"YulBlock","src":"12073:457:33","statements":[{"body":{"nodeType":"YulBlock","src":"12119:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12128:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12131:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12121:6:33"},"nodeType":"YulFunctionCall","src":"12121:12:33"},"nodeType":"YulExpressionStatement","src":"12121:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12094:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"12103:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12090:3:33"},"nodeType":"YulFunctionCall","src":"12090:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"12115:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12086:3:33"},"nodeType":"YulFunctionCall","src":"12086:32:33"},"nodeType":"YulIf","src":"12083:52:33"},{"nodeType":"YulVariableDeclaration","src":"12144:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12171:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12158:12:33"},"nodeType":"YulFunctionCall","src":"12158:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12148:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12190:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"12200:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12194:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"12245:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12254:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12257:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12247:6:33"},"nodeType":"YulFunctionCall","src":"12247:12:33"},"nodeType":"YulExpressionStatement","src":"12247:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12233:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"12241:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12230:2:33"},"nodeType":"YulFunctionCall","src":"12230:14:33"},"nodeType":"YulIf","src":"12227:34:33"},{"nodeType":"YulAssignment","src":"12270:81:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12323:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"12334:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12319:3:33"},"nodeType":"YulFunctionCall","src":"12319:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12343:7:33"}],"functionName":{"name":"abi_decode_struct_VerifiableCredential","nodeType":"YulIdentifier","src":"12280:38:33"},"nodeType":"YulFunctionCall","src":"12280:71:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12270:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"12360:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12393:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12404:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12389:3:33"},"nodeType":"YulFunctionCall","src":"12389:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12376:12:33"},"nodeType":"YulFunctionCall","src":"12376:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"12364:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"12437:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12446:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12449:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12439:6:33"},"nodeType":"YulFunctionCall","src":"12439:12:33"},"nodeType":"YulExpressionStatement","src":"12439:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"12423:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"12433:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12420:2:33"},"nodeType":"YulFunctionCall","src":"12420:16:33"},"nodeType":"YulIf","src":"12417:36:33"},{"nodeType":"YulAssignment","src":"12462:62:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12494:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"12505:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12490:3:33"},"nodeType":"YulFunctionCall","src":"12490:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12516:7:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"12472:17:33"},"nodeType":"YulFunctionCall","src":"12472:52:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12462:6:33"}]}]},"name":"abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12031:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12042:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12054:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12062:6:33","type":""}],"src":"11938:592:33"},{"body":{"nodeType":"YulBlock","src":"12579:60:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12596:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12605:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12620:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12625:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12616:3:33"},"nodeType":"YulFunctionCall","src":"12616:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"12629:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12612:3:33"},"nodeType":"YulFunctionCall","src":"12612:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12601:3:33"},"nodeType":"YulFunctionCall","src":"12601:31:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12589:6:33"},"nodeType":"YulFunctionCall","src":"12589:44:33"},"nodeType":"YulExpressionStatement","src":"12589:44:33"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12563:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12570:3:33","type":""}],"src":"12535:104:33"},{"body":{"nodeType":"YulBlock","src":"12745:102:33","statements":[{"nodeType":"YulAssignment","src":"12755:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12767:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12778:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12763:3:33"},"nodeType":"YulFunctionCall","src":"12763:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12755:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12797:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12812:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12828:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12833:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12824:3:33"},"nodeType":"YulFunctionCall","src":"12824:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"12837:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12820:3:33"},"nodeType":"YulFunctionCall","src":"12820:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12808:3:33"},"nodeType":"YulFunctionCall","src":"12808:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12790:6:33"},"nodeType":"YulFunctionCall","src":"12790:51:33"},"nodeType":"YulExpressionStatement","src":"12790:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12714:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12725:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12736:4:33","type":""}],"src":"12644:203:33"},{"body":{"nodeType":"YulBlock","src":"12960:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"13006:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13015:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13018:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13008:6:33"},"nodeType":"YulFunctionCall","src":"13008:12:33"},"nodeType":"YulExpressionStatement","src":"13008:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12981:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"12990:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12977:3:33"},"nodeType":"YulFunctionCall","src":"12977:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"13002:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12973:3:33"},"nodeType":"YulFunctionCall","src":"12973:32:33"},"nodeType":"YulIf","src":"12970:52:33"},{"nodeType":"YulVariableDeclaration","src":"13031:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13058:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13045:12:33"},"nodeType":"YulFunctionCall","src":"13045:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13035:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"13111:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13120:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13123:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13113:6:33"},"nodeType":"YulFunctionCall","src":"13113:12:33"},"nodeType":"YulExpressionStatement","src":"13113:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13083:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"13091:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13080:2:33"},"nodeType":"YulFunctionCall","src":"13080:30:33"},"nodeType":"YulIf","src":"13077:50:33"},{"nodeType":"YulAssignment","src":"13136:81:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13189:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"13200:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13185:3:33"},"nodeType":"YulFunctionCall","src":"13185:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13209:7:33"}],"functionName":{"name":"abi_decode_struct_VerifiableCredential","nodeType":"YulIdentifier","src":"13146:38:33"},"nodeType":"YulFunctionCall","src":"13146:71:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13136:6:33"}]}]},"name":"abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12926:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12937:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12949:6:33","type":""}],"src":"12852:371:33"},{"body":{"nodeType":"YulBlock","src":"13434:591:33","statements":[{"body":{"nodeType":"YulBlock","src":"13481:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13490:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13493:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13483:6:33"},"nodeType":"YulFunctionCall","src":"13483:12:33"},"nodeType":"YulExpressionStatement","src":"13483:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13455:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"13464:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13451:3:33"},"nodeType":"YulFunctionCall","src":"13451:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"13476:3:33","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13447:3:33"},"nodeType":"YulFunctionCall","src":"13447:33:33"},"nodeType":"YulIf","src":"13444:53:33"},{"nodeType":"YulAssignment","src":"13506:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13529:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13516:12:33"},"nodeType":"YulFunctionCall","src":"13516:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13506:6:33"}]},{"nodeType":"YulAssignment","src":"13548:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13575:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13586:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13571:3:33"},"nodeType":"YulFunctionCall","src":"13571:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13558:12:33"},"nodeType":"YulFunctionCall","src":"13558:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13548:6:33"}]},{"nodeType":"YulAssignment","src":"13599:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13626:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13637:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13622:3:33"},"nodeType":"YulFunctionCall","src":"13622:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13609:12:33"},"nodeType":"YulFunctionCall","src":"13609:32:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13599:6:33"}]},{"nodeType":"YulAssignment","src":"13650:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13677:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13688:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13673:3:33"},"nodeType":"YulFunctionCall","src":"13673:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13660:12:33"},"nodeType":"YulFunctionCall","src":"13660:32:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13650:6:33"}]},{"nodeType":"YulAssignment","src":"13701:43:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13728:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13739:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13724:3:33"},"nodeType":"YulFunctionCall","src":"13724:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13711:12:33"},"nodeType":"YulFunctionCall","src":"13711:33:33"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13701:6:33"}]},{"nodeType":"YulAssignment","src":"13753:43:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13780:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13791:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13776:3:33"},"nodeType":"YulFunctionCall","src":"13776:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13763:12:33"},"nodeType":"YulFunctionCall","src":"13763:33:33"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"13753:6:33"}]},{"nodeType":"YulAssignment","src":"13805:43:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13832:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13843:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13828:3:33"},"nodeType":"YulFunctionCall","src":"13828:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13815:12:33"},"nodeType":"YulFunctionCall","src":"13815:33:33"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"13805:6:33"}]},{"nodeType":"YulAssignment","src":"13857:43:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13884:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13895:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13880:3:33"},"nodeType":"YulFunctionCall","src":"13880:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13867:12:33"},"nodeType":"YulFunctionCall","src":"13867:33:33"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"13857:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"13909:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13939:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13950:3:33","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13935:3:33"},"nodeType":"YulFunctionCall","src":"13935:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13922:12:33"},"nodeType":"YulFunctionCall","src":"13922:33:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13913:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13989:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13964:24:33"},"nodeType":"YulFunctionCall","src":"13964:31:33"},"nodeType":"YulExpressionStatement","src":"13964:31:33"},{"nodeType":"YulAssignment","src":"14004:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"14014:5:33"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"14004:6:33"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13336:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13347:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13359:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13367:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13375:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13383:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13391:6:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13399:6:33","type":""},{"name":"value6","nodeType":"YulTypedName","src":"13407:6:33","type":""},{"name":"value7","nodeType":"YulTypedName","src":"13415:6:33","type":""},{"name":"value8","nodeType":"YulTypedName","src":"13423:6:33","type":""}],"src":"13228:797:33"},{"body":{"nodeType":"YulBlock","src":"14117:161:33","statements":[{"body":{"nodeType":"YulBlock","src":"14163:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14172:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14175:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14165:6:33"},"nodeType":"YulFunctionCall","src":"14165:12:33"},"nodeType":"YulExpressionStatement","src":"14165:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14138:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"14147:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14134:3:33"},"nodeType":"YulFunctionCall","src":"14134:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"14159:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14130:3:33"},"nodeType":"YulFunctionCall","src":"14130:32:33"},"nodeType":"YulIf","src":"14127:52:33"},{"nodeType":"YulAssignment","src":"14188:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14211:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14198:12:33"},"nodeType":"YulFunctionCall","src":"14198:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14188:6:33"}]},{"nodeType":"YulAssignment","src":"14230:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14257:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14268:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14253:3:33"},"nodeType":"YulFunctionCall","src":"14253:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14240:12:33"},"nodeType":"YulFunctionCall","src":"14240:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14230:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14075:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14086:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14098:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14106:6:33","type":""}],"src":"14030:248:33"},{"body":{"nodeType":"YulBlock","src":"14417:609:33","statements":[{"body":{"nodeType":"YulBlock","src":"14463:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14472:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14475:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14465:6:33"},"nodeType":"YulFunctionCall","src":"14465:12:33"},"nodeType":"YulExpressionStatement","src":"14465:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14438:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"14447:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14434:3:33"},"nodeType":"YulFunctionCall","src":"14434:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"14459:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14430:3:33"},"nodeType":"YulFunctionCall","src":"14430:32:33"},"nodeType":"YulIf","src":"14427:52:33"},{"nodeType":"YulVariableDeclaration","src":"14488:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14515:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14502:12:33"},"nodeType":"YulFunctionCall","src":"14502:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14492:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14534:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"14544:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14538:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"14589:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14598:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14601:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14591:6:33"},"nodeType":"YulFunctionCall","src":"14591:12:33"},"nodeType":"YulExpressionStatement","src":"14591:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14577:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"14585:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14574:2:33"},"nodeType":"YulFunctionCall","src":"14574:14:33"},"nodeType":"YulIf","src":"14571:34:33"},{"nodeType":"YulAssignment","src":"14614:60:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14646:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"14657:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14642:3:33"},"nodeType":"YulFunctionCall","src":"14642:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14666:7:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"14624:17:33"},"nodeType":"YulFunctionCall","src":"14624:50:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14614:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"14683:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14716:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14727:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14712:3:33"},"nodeType":"YulFunctionCall","src":"14712:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14699:12:33"},"nodeType":"YulFunctionCall","src":"14699:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"14687:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"14760:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14769:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14772:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14762:6:33"},"nodeType":"YulFunctionCall","src":"14762:12:33"},"nodeType":"YulExpressionStatement","src":"14762:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"14746:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"14756:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14743:2:33"},"nodeType":"YulFunctionCall","src":"14743:16:33"},"nodeType":"YulIf","src":"14740:36:33"},{"nodeType":"YulAssignment","src":"14785:62:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14817:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"14828:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14813:3:33"},"nodeType":"YulFunctionCall","src":"14813:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14839:7:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"14795:17:33"},"nodeType":"YulFunctionCall","src":"14795:52:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14785:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"14856:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14889:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14900:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14885:3:33"},"nodeType":"YulFunctionCall","src":"14885:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14872:12:33"},"nodeType":"YulFunctionCall","src":"14872:32:33"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"14860:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"14933:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14942:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14945:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14935:6:33"},"nodeType":"YulFunctionCall","src":"14935:12:33"},"nodeType":"YulExpressionStatement","src":"14935:12:33"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"14919:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"14929:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14916:2:33"},"nodeType":"YulFunctionCall","src":"14916:16:33"},"nodeType":"YulIf","src":"14913:36:33"},{"nodeType":"YulAssignment","src":"14958:62:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14990:9:33"},{"name":"offset_2","nodeType":"YulIdentifier","src":"15001:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14986:3:33"},"nodeType":"YulFunctionCall","src":"14986:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15012:7:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"14968:17:33"},"nodeType":"YulFunctionCall","src":"14968:52:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14958:6:33"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14367:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14378:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14390:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14398:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14406:6:33","type":""}],"src":"14283:743:33"},{"body":{"nodeType":"YulBlock","src":"15126:228:33","statements":[{"body":{"nodeType":"YulBlock","src":"15172:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15181:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15184:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15174:6:33"},"nodeType":"YulFunctionCall","src":"15174:12:33"},"nodeType":"YulExpressionStatement","src":"15174:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15147:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"15156:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15143:3:33"},"nodeType":"YulFunctionCall","src":"15143:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"15168:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15139:3:33"},"nodeType":"YulFunctionCall","src":"15139:32:33"},"nodeType":"YulIf","src":"15136:52:33"},{"nodeType":"YulVariableDeclaration","src":"15197:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15223:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15210:12:33"},"nodeType":"YulFunctionCall","src":"15210:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15201:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15267:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"15242:24:33"},"nodeType":"YulFunctionCall","src":"15242:31:33"},"nodeType":"YulExpressionStatement","src":"15242:31:33"},{"nodeType":"YulAssignment","src":"15282:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"15292:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15282:6:33"}]},{"nodeType":"YulAssignment","src":"15306:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15333:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15344:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15329:3:33"},"nodeType":"YulFunctionCall","src":"15329:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15316:12:33"},"nodeType":"YulFunctionCall","src":"15316:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15306:6:33"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15084:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15095:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15107:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15115:6:33","type":""}],"src":"15031:323:33"},{"body":{"nodeType":"YulBlock","src":"15472:411:33","statements":[{"body":{"nodeType":"YulBlock","src":"15518:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15527:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15530:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15520:6:33"},"nodeType":"YulFunctionCall","src":"15520:12:33"},"nodeType":"YulExpressionStatement","src":"15520:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15493:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"15502:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15489:3:33"},"nodeType":"YulFunctionCall","src":"15489:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"15514:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15485:3:33"},"nodeType":"YulFunctionCall","src":"15485:32:33"},"nodeType":"YulIf","src":"15482:52:33"},{"nodeType":"YulVariableDeclaration","src":"15543:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15569:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15556:12:33"},"nodeType":"YulFunctionCall","src":"15556:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15547:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15613:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"15588:24:33"},"nodeType":"YulFunctionCall","src":"15588:31:33"},"nodeType":"YulExpressionStatement","src":"15588:31:33"},{"nodeType":"YulAssignment","src":"15628:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"15638:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15628:6:33"}]},{"nodeType":"YulAssignment","src":"15652:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15679:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15690:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15675:3:33"},"nodeType":"YulFunctionCall","src":"15675:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15662:12:33"},"nodeType":"YulFunctionCall","src":"15662:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15652:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"15703:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15734:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15745:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15730:3:33"},"nodeType":"YulFunctionCall","src":"15730:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15717:12:33"},"nodeType":"YulFunctionCall","src":"15717:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15707:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"15792:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15801:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15804:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15794:6:33"},"nodeType":"YulFunctionCall","src":"15794:12:33"},"nodeType":"YulExpressionStatement","src":"15794:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15764:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"15772:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15761:2:33"},"nodeType":"YulFunctionCall","src":"15761:30:33"},"nodeType":"YulIf","src":"15758:50:33"},{"nodeType":"YulAssignment","src":"15817:60:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15849:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"15860:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15845:3:33"},"nodeType":"YulFunctionCall","src":"15845:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15869:7:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"15827:17:33"},"nodeType":"YulFunctionCall","src":"15827:50:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15817:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15422:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15433:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15445:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15453:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15461:6:33","type":""}],"src":"15359:524:33"},{"body":{"nodeType":"YulBlock","src":"15975:301:33","statements":[{"body":{"nodeType":"YulBlock","src":"16021:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16030:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16033:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16023:6:33"},"nodeType":"YulFunctionCall","src":"16023:12:33"},"nodeType":"YulExpressionStatement","src":"16023:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15996:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"16005:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15992:3:33"},"nodeType":"YulFunctionCall","src":"15992:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"16017:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15988:3:33"},"nodeType":"YulFunctionCall","src":"15988:32:33"},"nodeType":"YulIf","src":"15985:52:33"},{"nodeType":"YulVariableDeclaration","src":"16046:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16072:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16059:12:33"},"nodeType":"YulFunctionCall","src":"16059:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16050:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16116:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"16091:24:33"},"nodeType":"YulFunctionCall","src":"16091:31:33"},"nodeType":"YulExpressionStatement","src":"16091:31:33"},{"nodeType":"YulAssignment","src":"16131:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"16141:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16131:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"16155:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16187:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16198:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16183:3:33"},"nodeType":"YulFunctionCall","src":"16183:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16170:12:33"},"nodeType":"YulFunctionCall","src":"16170:32:33"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"16159:7:33","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"16236:7:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"16211:24:33"},"nodeType":"YulFunctionCall","src":"16211:33:33"},"nodeType":"YulExpressionStatement","src":"16211:33:33"},{"nodeType":"YulAssignment","src":"16253:17:33","value":{"name":"value_1","nodeType":"YulIdentifier","src":"16263:7:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16253:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15933:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15944:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15956:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15964:6:33","type":""}],"src":"15888:388:33"},{"body":{"nodeType":"YulBlock","src":"16415:457:33","statements":[{"body":{"nodeType":"YulBlock","src":"16461:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16470:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16473:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16463:6:33"},"nodeType":"YulFunctionCall","src":"16463:12:33"},"nodeType":"YulExpressionStatement","src":"16463:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16436:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"16445:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16432:3:33"},"nodeType":"YulFunctionCall","src":"16432:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"16457:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16428:3:33"},"nodeType":"YulFunctionCall","src":"16428:32:33"},"nodeType":"YulIf","src":"16425:52:33"},{"nodeType":"YulVariableDeclaration","src":"16486:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16513:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16500:12:33"},"nodeType":"YulFunctionCall","src":"16500:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16490:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16532:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"16542:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16536:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"16587:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16596:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16599:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16589:6:33"},"nodeType":"YulFunctionCall","src":"16589:12:33"},"nodeType":"YulExpressionStatement","src":"16589:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16575:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"16583:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16572:2:33"},"nodeType":"YulFunctionCall","src":"16572:14:33"},"nodeType":"YulIf","src":"16569:34:33"},{"nodeType":"YulAssignment","src":"16612:81:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16665:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"16676:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16661:3:33"},"nodeType":"YulFunctionCall","src":"16661:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16685:7:33"}],"functionName":{"name":"abi_decode_struct_VerifiableCredential","nodeType":"YulIdentifier","src":"16622:38:33"},"nodeType":"YulFunctionCall","src":"16622:71:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16612:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"16702:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16735:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16746:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16731:3:33"},"nodeType":"YulFunctionCall","src":"16731:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16718:12:33"},"nodeType":"YulFunctionCall","src":"16718:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"16706:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"16779:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16788:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16791:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16781:6:33"},"nodeType":"YulFunctionCall","src":"16781:12:33"},"nodeType":"YulExpressionStatement","src":"16781:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"16765:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"16775:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16762:2:33"},"nodeType":"YulFunctionCall","src":"16762:16:33"},"nodeType":"YulIf","src":"16759:36:33"},{"nodeType":"YulAssignment","src":"16804:62:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16836:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"16847:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16832:3:33"},"nodeType":"YulFunctionCall","src":"16832:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16858:7:33"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"16814:17:33"},"nodeType":"YulFunctionCall","src":"16814:52:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16804:6:33"}]}]},"name":"abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16373:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16384:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16396:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16404:6:33","type":""}],"src":"16281:591:33"},{"body":{"nodeType":"YulBlock","src":"16932:325:33","statements":[{"nodeType":"YulAssignment","src":"16942:22:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16956:1:33","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"16959:4:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16952:3:33"},"nodeType":"YulFunctionCall","src":"16952:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16942:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"16973:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17003:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"17009:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16999:3:33"},"nodeType":"YulFunctionCall","src":"16999:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"16977:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"17050:31:33","statements":[{"nodeType":"YulAssignment","src":"17052:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17066:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"17074:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17062:3:33"},"nodeType":"YulFunctionCall","src":"17062:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17052:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"17030:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17023:6:33"},"nodeType":"YulFunctionCall","src":"17023:26:33"},"nodeType":"YulIf","src":"17020:61:33"},{"body":{"nodeType":"YulBlock","src":"17140:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17161:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17168:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"17173:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17164:3:33"},"nodeType":"YulFunctionCall","src":"17164:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17154:6:33"},"nodeType":"YulFunctionCall","src":"17154:31:33"},"nodeType":"YulExpressionStatement","src":"17154:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17205:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17208:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17198:6:33"},"nodeType":"YulFunctionCall","src":"17198:15:33"},"nodeType":"YulExpressionStatement","src":"17198:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17233:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17236:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17226:6:33"},"nodeType":"YulFunctionCall","src":"17226:15:33"},"nodeType":"YulExpressionStatement","src":"17226:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"17096:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17119:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"17127:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17116:2:33"},"nodeType":"YulFunctionCall","src":"17116:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17093:2:33"},"nodeType":"YulFunctionCall","src":"17093:38:33"},"nodeType":"YulIf","src":"17090:161:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16912:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16921:6:33","type":""}],"src":"16877:380:33"},{"body":{"nodeType":"YulBlock","src":"17436:288:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17453:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17464:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17446:6:33"},"nodeType":"YulFunctionCall","src":"17446:21:33"},"nodeType":"YulExpressionStatement","src":"17446:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17487:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17498:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17483:3:33"},"nodeType":"YulFunctionCall","src":"17483:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"17503:2:33","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17476:6:33"},"nodeType":"YulFunctionCall","src":"17476:30:33"},"nodeType":"YulExpressionStatement","src":"17476:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17526:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17537:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17522:3:33"},"nodeType":"YulFunctionCall","src":"17522:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"17542:66:33","type":"","value":"0x5b2256657269666961626c6543726564656e7469616c222c2244697370757465"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17515:6:33"},"nodeType":"YulFunctionCall","src":"17515:94:33"},"nodeType":"YulExpressionStatement","src":"17515:94:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17629:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17640:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17625:3:33"},"nodeType":"YulFunctionCall","src":"17625:18:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17649:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"17654:26:33","type":"","value":"0x43726564656e7469616c225d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17645:3:33"},"nodeType":"YulFunctionCall","src":"17645:36:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17618:6:33"},"nodeType":"YulFunctionCall","src":"17618:64:33"},"nodeType":"YulExpressionStatement","src":"17618:64:33"},{"nodeType":"YulAssignment","src":"17691:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17703:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17714:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17699:3:33"},"nodeType":"YulFunctionCall","src":"17699:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17691:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_65e8e0569f667d83ff560a291a95fc03ec0722346b0fbfc084e161f7c9261e72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17413:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17427:4:33","type":""}],"src":"17262:462:33"},{"body":{"nodeType":"YulBlock","src":"17903:244:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17920:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17931:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17913:6:33"},"nodeType":"YulFunctionCall","src":"17913:21:33"},"nodeType":"YulExpressionStatement","src":"17913:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17954:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17965:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17950:3:33"},"nodeType":"YulFunctionCall","src":"17950:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"17970:2:33","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17943:6:33"},"nodeType":"YulFunctionCall","src":"17943:30:33"},"nodeType":"YulExpressionStatement","src":"17943:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17993:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18004:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17989:3:33"},"nodeType":"YulFunctionCall","src":"17989:18:33"},{"hexValue":"4b5242546f6b656e3a206469737075746520636c61696d2074797065206d7573","kind":"string","nodeType":"YulLiteral","src":"18009:34:33","type":"","value":"KRBToken: dispute claim type mus"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17982:6:33"},"nodeType":"YulFunctionCall","src":"17982:62:33"},"nodeType":"YulExpressionStatement","src":"17982:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18064:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18075:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18060:3:33"},"nodeType":"YulFunctionCall","src":"18060:18:33"},{"hexValue":"74206265204469737075746543726564656e7469616c","kind":"string","nodeType":"YulLiteral","src":"18080:24:33","type":"","value":"t be DisputeCredential"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18053:6:33"},"nodeType":"YulFunctionCall","src":"18053:52:33"},"nodeType":"YulExpressionStatement","src":"18053:52:33"},{"nodeType":"YulAssignment","src":"18114:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18126:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18137:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18122:3:33"},"nodeType":"YulFunctionCall","src":"18122:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18114:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_ac3e225f52da57937dca4729ff7a9b2aef9f1e1bb77e4624f55be8081627dee6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17880:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17894:4:33","type":""}],"src":"17729:418:33"},{"body":{"nodeType":"YulBlock","src":"18326:233:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18343:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18354:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18336:6:33"},"nodeType":"YulFunctionCall","src":"18336:21:33"},"nodeType":"YulExpressionStatement","src":"18336:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18377:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18388:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18373:3:33"},"nodeType":"YulFunctionCall","src":"18373:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"18393:2:33","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18366:6:33"},"nodeType":"YulFunctionCall","src":"18366:30:33"},"nodeType":"YulExpressionStatement","src":"18366:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18416:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18427:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18412:3:33"},"nodeType":"YulFunctionCall","src":"18412:18:33"},{"hexValue":"4b5242546f6b656e3a20697373756572206d7573742062652074686520476f76","kind":"string","nodeType":"YulLiteral","src":"18432:34:33","type":"","value":"KRBToken: issuer must be the Gov"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18405:6:33"},"nodeType":"YulFunctionCall","src":"18405:62:33"},"nodeType":"YulExpressionStatement","src":"18405:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18487:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18498:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18483:3:33"},"nodeType":"YulFunctionCall","src":"18483:18:33"},{"hexValue":"65726e2061646472657373","kind":"string","nodeType":"YulLiteral","src":"18503:13:33","type":"","value":"ern address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18476:6:33"},"nodeType":"YulFunctionCall","src":"18476:41:33"},"nodeType":"YulExpressionStatement","src":"18476:41:33"},{"nodeType":"YulAssignment","src":"18526:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18538:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18549:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18534:3:33"},"nodeType":"YulFunctionCall","src":"18534:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18526:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_6940c565f3d71bd3368fee296cb1e459b0065bdd2e5335e6830f498d1bc2458b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18303:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18317:4:33","type":""}],"src":"18152:407:33"},{"body":{"nodeType":"YulBlock","src":"18738:250:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18755:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18766:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18748:6:33"},"nodeType":"YulFunctionCall","src":"18748:21:33"},"nodeType":"YulExpressionStatement","src":"18748:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18789:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18800:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18785:3:33"},"nodeType":"YulFunctionCall","src":"18785:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"18805:2:33","type":"","value":"60"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18778:6:33"},"nodeType":"YulFunctionCall","src":"18778:30:33"},"nodeType":"YulExpressionStatement","src":"18778:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18828:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18839:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18824:3:33"},"nodeType":"YulFunctionCall","src":"18824:18:33"},{"hexValue":"4b5242546f6b656e3a206469737075746556432063726564656e7469616c5375","kind":"string","nodeType":"YulLiteral","src":"18844:34:33","type":"","value":"KRBToken: disputeVC credentialSu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18817:6:33"},"nodeType":"YulFunctionCall","src":"18817:62:33"},"nodeType":"YulExpressionStatement","src":"18817:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18899:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18910:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18895:3:33"},"nodeType":"YulFunctionCall","src":"18895:18:33"},{"hexValue":"626a6563742069642064696666657265732066726f6d205643206964","kind":"string","nodeType":"YulLiteral","src":"18915:30:33","type":"","value":"bject id differes from VC id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18888:6:33"},"nodeType":"YulFunctionCall","src":"18888:58:33"},"nodeType":"YulExpressionStatement","src":"18888:58:33"},{"nodeType":"YulAssignment","src":"18955:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18967:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18978:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18963:3:33"},"nodeType":"YulFunctionCall","src":"18963:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18955:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a6e9e56cdc54e2c4c3fa43770fa86f5b2554ff1e5fa1184beda9231a57c0dc0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18715:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18729:4:33","type":""}],"src":"18564:424:33"},{"body":{"nodeType":"YulBlock","src":"19167:225:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19184:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19195:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19177:6:33"},"nodeType":"YulFunctionCall","src":"19177:21:33"},"nodeType":"YulExpressionStatement","src":"19177:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19218:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19229:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19214:3:33"},"nodeType":"YulFunctionCall","src":"19214:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"19234:2:33","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19207:6:33"},"nodeType":"YulFunctionCall","src":"19207:30:33"},"nodeType":"YulExpressionStatement","src":"19207:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19257:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19268:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19253:3:33"},"nodeType":"YulFunctionCall","src":"19253:18:33"},{"hexValue":"4b5242546f6b656e3a20564320737461746520616c7265616479206469737075","kind":"string","nodeType":"YulLiteral","src":"19273:34:33","type":"","value":"KRBToken: VC state already dispu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19246:6:33"},"nodeType":"YulFunctionCall","src":"19246:62:33"},"nodeType":"YulExpressionStatement","src":"19246:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19328:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19339:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19324:3:33"},"nodeType":"YulFunctionCall","src":"19324:18:33"},{"hexValue":"746564","kind":"string","nodeType":"YulLiteral","src":"19344:5:33","type":"","value":"ted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19317:6:33"},"nodeType":"YulFunctionCall","src":"19317:33:33"},"nodeType":"YulExpressionStatement","src":"19317:33:33"},{"nodeType":"YulAssignment","src":"19359:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19371:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19382:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19367:3:33"},"nodeType":"YulFunctionCall","src":"19367:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19359:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_68bf8498d45c2faa8674ac2e5b474e7bcc0195dc28826c452a373a323748a8ee__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19144:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19158:4:33","type":""}],"src":"18993:399:33"},{"body":{"nodeType":"YulBlock","src":"19526:119:33","statements":[{"nodeType":"YulAssignment","src":"19536:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19548:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19559:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19544:3:33"},"nodeType":"YulFunctionCall","src":"19544:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19536:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19578:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"19589:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19571:6:33"},"nodeType":"YulFunctionCall","src":"19571:25:33"},"nodeType":"YulExpressionStatement","src":"19571:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19616:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19627:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19612:3:33"},"nodeType":"YulFunctionCall","src":"19612:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"19632:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19605:6:33"},"nodeType":"YulFunctionCall","src":"19605:34:33"},"nodeType":"YulExpressionStatement","src":"19605:34:33"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19487:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19498:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19506:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19517:4:33","type":""}],"src":"19397:248:33"},{"body":{"nodeType":"YulBlock","src":"19707:244:33","statements":[{"nodeType":"YulVariableDeclaration","src":"19717:32:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19743:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19737:5:33"},"nodeType":"YulFunctionCall","src":"19737:12:33"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19721:12:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19765:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"19770:4:33","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19758:6:33"},"nodeType":"YulFunctionCall","src":"19758:17:33"},"nodeType":"YulExpressionStatement","src":"19758:17:33"},{"nodeType":"YulVariableDeclaration","src":"19784:59:33","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19814:12:33"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19832:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"19837:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19828:3:33"},"nodeType":"YulFunctionCall","src":"19828:14:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"19796:17:33"},"nodeType":"YulFunctionCall","src":"19796:47:33"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"19788:4:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19863:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"19868:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19859:3:33"},"nodeType":"YulFunctionCall","src":"19859:14:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19889:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"19896:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19885:3:33"},"nodeType":"YulFunctionCall","src":"19885:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19879:5:33"},"nodeType":"YulFunctionCall","src":"19879:23:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19912:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19917:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19908:3:33"},"nodeType":"YulFunctionCall","src":"19908:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"19921:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19904:3:33"},"nodeType":"YulFunctionCall","src":"19904:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19875:3:33"},"nodeType":"YulFunctionCall","src":"19875:49:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19852:6:33"},"nodeType":"YulFunctionCall","src":"19852:73:33"},"nodeType":"YulExpressionStatement","src":"19852:73:33"},{"nodeType":"YulAssignment","src":"19934:11:33","value":{"name":"tail","nodeType":"YulIdentifier","src":"19941:4:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19934:3:33"}]}]},"name":"abi_encode_struct_Issuer","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19684:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19691:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19699:3:33","type":""}],"src":"19650:301:33"},{"body":{"nodeType":"YulBlock","src":"20024:1360:33","statements":[{"nodeType":"YulVariableDeclaration","src":"20034:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"20044:6:33","type":"","value":"0x0160"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20038:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20059:32:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20085:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20079:5:33"},"nodeType":"YulFunctionCall","src":"20079:12:33"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20063:12:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20107:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"20112:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20100:6:33"},"nodeType":"YulFunctionCall","src":"20100:15:33"},"nodeType":"YulExpressionStatement","src":"20100:15:33"},{"nodeType":"YulVariableDeclaration","src":"20124:57:33","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20154:12:33"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20172:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"20177:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20168:3:33"},"nodeType":"YulFunctionCall","src":"20168:12:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20136:17:33"},"nodeType":"YulFunctionCall","src":"20136:45:33"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"20128:4:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20190:45:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20222:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"20229:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20218:3:33"},"nodeType":"YulFunctionCall","src":"20218:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20212:5:33"},"nodeType":"YulFunctionCall","src":"20212:23:33"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"20194:14:33","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"20263:14:33"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20283:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"20288:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20279:3:33"},"nodeType":"YulFunctionCall","src":"20279:14:33"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"20244:18:33"},"nodeType":"YulFunctionCall","src":"20244:50:33"},"nodeType":"YulExpressionStatement","src":"20244:50:33"},{"nodeType":"YulVariableDeclaration","src":"20303:45:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20335:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"20342:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20331:3:33"},"nodeType":"YulFunctionCall","src":"20331:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20325:5:33"},"nodeType":"YulFunctionCall","src":"20325:23:33"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"20307:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20368:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"20373:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20364:3:33"},"nodeType":"YulFunctionCall","src":"20364:14:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20384:4:33"},{"name":"pos","nodeType":"YulIdentifier","src":"20390:3:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20380:3:33"},"nodeType":"YulFunctionCall","src":"20380:14:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20357:6:33"},"nodeType":"YulFunctionCall","src":"20357:38:33"},"nodeType":"YulExpressionStatement","src":"20357:38:33"},{"nodeType":"YulVariableDeclaration","src":"20404:53:33","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"20436:14:33"},{"name":"tail","nodeType":"YulIdentifier","src":"20452:4:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20418:17:33"},"nodeType":"YulFunctionCall","src":"20418:39:33"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"20408:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20466:45:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20498:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"20505:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20494:3:33"},"nodeType":"YulFunctionCall","src":"20494:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20488:5:33"},"nodeType":"YulFunctionCall","src":"20488:23:33"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"20470:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20531:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"20536:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20527:3:33"},"nodeType":"YulFunctionCall","src":"20527:14:33"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"20547:6:33"},{"name":"pos","nodeType":"YulIdentifier","src":"20555:3:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20543:3:33"},"nodeType":"YulFunctionCall","src":"20543:16:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20520:6:33"},"nodeType":"YulFunctionCall","src":"20520:40:33"},"nodeType":"YulExpressionStatement","src":"20520:40:33"},{"nodeType":"YulVariableDeclaration","src":"20569:55:33","value":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"20601:14:33"},{"name":"tail_1","nodeType":"YulIdentifier","src":"20617:6:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20583:17:33"},"nodeType":"YulFunctionCall","src":"20583:41:33"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"20573:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20633:45:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20665:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"20672:4:33","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20661:3:33"},"nodeType":"YulFunctionCall","src":"20661:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20655:5:33"},"nodeType":"YulFunctionCall","src":"20655:23:33"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"20637:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20698:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"20703:4:33","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20694:3:33"},"nodeType":"YulFunctionCall","src":"20694:14:33"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"20714:6:33"},{"name":"pos","nodeType":"YulIdentifier","src":"20722:3:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20710:3:33"},"nodeType":"YulFunctionCall","src":"20710:16:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20687:6:33"},"nodeType":"YulFunctionCall","src":"20687:40:33"},"nodeType":"YulExpressionStatement","src":"20687:40:33"},{"nodeType":"YulVariableDeclaration","src":"20736:55:33","value":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"20768:14:33"},{"name":"tail_2","nodeType":"YulIdentifier","src":"20784:6:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20750:17:33"},"nodeType":"YulFunctionCall","src":"20750:41:33"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"20740:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20800:45:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20832:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"20839:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20828:3:33"},"nodeType":"YulFunctionCall","src":"20828:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20822:5:33"},"nodeType":"YulFunctionCall","src":"20822:23:33"},"variables":[{"name":"memberValue0_5","nodeType":"YulTypedName","src":"20804:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20865:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"20870:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20861:3:33"},"nodeType":"YulFunctionCall","src":"20861:14:33"},{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"20881:6:33"},{"name":"pos","nodeType":"YulIdentifier","src":"20889:3:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20877:3:33"},"nodeType":"YulFunctionCall","src":"20877:16:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20854:6:33"},"nodeType":"YulFunctionCall","src":"20854:40:33"},"nodeType":"YulExpressionStatement","src":"20854:40:33"},{"nodeType":"YulVariableDeclaration","src":"20903:55:33","value":{"arguments":[{"name":"memberValue0_5","nodeType":"YulIdentifier","src":"20935:14:33"},{"name":"tail_3","nodeType":"YulIdentifier","src":"20951:6:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20917:17:33"},"nodeType":"YulFunctionCall","src":"20917:41:33"},"variables":[{"name":"tail_4","nodeType":"YulTypedName","src":"20907:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20967:45:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20999:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"21006:4:33","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20995:3:33"},"nodeType":"YulFunctionCall","src":"20995:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20989:5:33"},"nodeType":"YulFunctionCall","src":"20989:23:33"},"variables":[{"name":"memberValue0_6","nodeType":"YulTypedName","src":"20971:14:33","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_6","nodeType":"YulIdentifier","src":"21038:14:33"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21058:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"21063:4:33","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21054:3:33"},"nodeType":"YulFunctionCall","src":"21054:14:33"}],"functionName":{"name":"abi_encode_uint8","nodeType":"YulIdentifier","src":"21021:16:33"},"nodeType":"YulFunctionCall","src":"21021:48:33"},"nodeType":"YulExpressionStatement","src":"21021:48:33"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21089:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"21094:4:33","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21085:3:33"},"nodeType":"YulFunctionCall","src":"21085:14:33"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21111:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"21118:4:33","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21107:3:33"},"nodeType":"YulFunctionCall","src":"21107:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21101:5:33"},"nodeType":"YulFunctionCall","src":"21101:23:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21078:6:33"},"nodeType":"YulFunctionCall","src":"21078:47:33"},"nodeType":"YulExpressionStatement","src":"21078:47:33"},{"nodeType":"YulVariableDeclaration","src":"21134:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"21144:6:33","type":"","value":"0x0100"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"21138:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21170:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"21175:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21166:3:33"},"nodeType":"YulFunctionCall","src":"21166:12:33"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21190:5:33"},{"name":"_2","nodeType":"YulIdentifier","src":"21197:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21186:3:33"},"nodeType":"YulFunctionCall","src":"21186:14:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21180:5:33"},"nodeType":"YulFunctionCall","src":"21180:21:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21159:6:33"},"nodeType":"YulFunctionCall","src":"21159:43:33"},"nodeType":"YulExpressionStatement","src":"21159:43:33"},{"nodeType":"YulVariableDeclaration","src":"21211:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"21221:6:33","type":"","value":"0x0120"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"21215:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21247:3:33"},{"name":"_3","nodeType":"YulIdentifier","src":"21252:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21243:3:33"},"nodeType":"YulFunctionCall","src":"21243:12:33"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21267:5:33"},{"name":"_3","nodeType":"YulIdentifier","src":"21274:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21263:3:33"},"nodeType":"YulFunctionCall","src":"21263:14:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21257:5:33"},"nodeType":"YulFunctionCall","src":"21257:21:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21236:6:33"},"nodeType":"YulFunctionCall","src":"21236:43:33"},"nodeType":"YulExpressionStatement","src":"21236:43:33"},{"nodeType":"YulVariableDeclaration","src":"21288:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"21298:6:33","type":"","value":"0x0140"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"21292:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21324:3:33"},{"name":"_4","nodeType":"YulIdentifier","src":"21329:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21320:3:33"},"nodeType":"YulFunctionCall","src":"21320:12:33"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21344:5:33"},{"name":"_4","nodeType":"YulIdentifier","src":"21351:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21340:3:33"},"nodeType":"YulFunctionCall","src":"21340:14:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21334:5:33"},"nodeType":"YulFunctionCall","src":"21334:21:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21313:6:33"},"nodeType":"YulFunctionCall","src":"21313:43:33"},"nodeType":"YulExpressionStatement","src":"21313:43:33"},{"nodeType":"YulAssignment","src":"21365:13:33","value":{"name":"tail_4","nodeType":"YulIdentifier","src":"21372:6:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21365:3:33"}]}]},"name":"abi_encode_struct_CredentialSubject","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20001:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20008:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20016:3:33","type":""}],"src":"19956:1428:33"},{"body":{"nodeType":"YulBlock","src":"21456:298:33","statements":[{"nodeType":"YulVariableDeclaration","src":"21466:32:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21492:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21486:5:33"},"nodeType":"YulFunctionCall","src":"21486:12:33"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21470:12:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21514:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"21519:4:33","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21507:6:33"},"nodeType":"YulFunctionCall","src":"21507:17:33"},"nodeType":"YulExpressionStatement","src":"21507:17:33"},{"nodeType":"YulVariableDeclaration","src":"21533:59:33","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21563:12:33"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21581:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"21586:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21577:3:33"},"nodeType":"YulFunctionCall","src":"21577:14:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21545:17:33"},"nodeType":"YulFunctionCall","src":"21545:47:33"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"21537:4:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21601:45:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21633:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"21640:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21629:3:33"},"nodeType":"YulFunctionCall","src":"21629:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21623:5:33"},"nodeType":"YulFunctionCall","src":"21623:23:33"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"21605:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21666:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"21671:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21662:3:33"},"nodeType":"YulFunctionCall","src":"21662:14:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21682:4:33"},{"name":"pos","nodeType":"YulIdentifier","src":"21688:3:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21678:3:33"},"nodeType":"YulFunctionCall","src":"21678:14:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21655:6:33"},"nodeType":"YulFunctionCall","src":"21655:38:33"},"nodeType":"YulExpressionStatement","src":"21655:38:33"},{"nodeType":"YulAssignment","src":"21702:46:33","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"21727:14:33"},{"name":"tail","nodeType":"YulIdentifier","src":"21743:4:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21709:17:33"},"nodeType":"YulFunctionCall","src":"21709:39:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21702:3:33"}]}]},"name":"abi_encode_struct_CredentialSchema","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21433:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21440:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21448:3:33","type":""}],"src":"21389:365:33"},{"body":{"nodeType":"YulBlock","src":"21964:1627:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21981:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"21992:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21974:6:33"},"nodeType":"YulFunctionCall","src":"21974:25:33"},"nodeType":"YulExpressionStatement","src":"21974:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22019:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22030:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22015:3:33"},"nodeType":"YulFunctionCall","src":"22015:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"22035:2:33","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22008:6:33"},"nodeType":"YulFunctionCall","src":"22008:30:33"},"nodeType":"YulExpressionStatement","src":"22008:30:33"},{"nodeType":"YulVariableDeclaration","src":"22047:33:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22073:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22067:5:33"},"nodeType":"YulFunctionCall","src":"22067:13:33"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22051:12:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22089:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"22099:6:33","type":"","value":"0x0100"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22093:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22125:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22136:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22121:3:33"},"nodeType":"YulFunctionCall","src":"22121:18:33"},{"name":"_1","nodeType":"YulIdentifier","src":"22141:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22114:6:33"},"nodeType":"YulFunctionCall","src":"22114:30:33"},"nodeType":"YulExpressionStatement","src":"22114:30:33"},{"nodeType":"YulVariableDeclaration","src":"22153:66:33","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22185:12:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22203:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22214:3:33","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22199:3:33"},"nodeType":"YulFunctionCall","src":"22199:19:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"22167:17:33"},"nodeType":"YulFunctionCall","src":"22167:52:33"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"22157:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22228:44:33","value":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22260:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"22268:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22256:3:33"},"nodeType":"YulFunctionCall","src":"22256:15:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22250:5:33"},"nodeType":"YulFunctionCall","src":"22250:22:33"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"22232:14:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22281:17:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22295:2:33","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22291:3:33"},"nodeType":"YulFunctionCall","src":"22291:7:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"22285:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22318:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22329:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22314:3:33"},"nodeType":"YulFunctionCall","src":"22314:18:33"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"22342:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"22350:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22338:3:33"},"nodeType":"YulFunctionCall","src":"22338:22:33"},{"name":"_2","nodeType":"YulIdentifier","src":"22362:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22334:3:33"},"nodeType":"YulFunctionCall","src":"22334:31:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22307:6:33"},"nodeType":"YulFunctionCall","src":"22307:59:33"},"nodeType":"YulExpressionStatement","src":"22307:59:33"},{"nodeType":"YulVariableDeclaration","src":"22375:55:33","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"22407:14:33"},{"name":"tail_1","nodeType":"YulIdentifier","src":"22423:6:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"22389:17:33"},"nodeType":"YulFunctionCall","src":"22389:41:33"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"22379:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22439:44:33","value":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22471:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"22479:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22467:3:33"},"nodeType":"YulFunctionCall","src":"22467:15:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22461:5:33"},"nodeType":"YulFunctionCall","src":"22461:22:33"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"22443:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22503:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22514:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22499:3:33"},"nodeType":"YulFunctionCall","src":"22499:19:33"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"22528:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"22536:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22524:3:33"},"nodeType":"YulFunctionCall","src":"22524:22:33"},{"name":"_2","nodeType":"YulIdentifier","src":"22548:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22520:3:33"},"nodeType":"YulFunctionCall","src":"22520:31:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22492:6:33"},"nodeType":"YulFunctionCall","src":"22492:60:33"},"nodeType":"YulExpressionStatement","src":"22492:60:33"},{"nodeType":"YulVariableDeclaration","src":"22561:55:33","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"22593:14:33"},{"name":"tail_2","nodeType":"YulIdentifier","src":"22609:6:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"22575:17:33"},"nodeType":"YulFunctionCall","src":"22575:41:33"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"22565:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22625:44:33","value":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22657:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"22665:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22653:3:33"},"nodeType":"YulFunctionCall","src":"22653:15:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22647:5:33"},"nodeType":"YulFunctionCall","src":"22647:22:33"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"22629:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22689:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22700:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22685:3:33"},"nodeType":"YulFunctionCall","src":"22685:19:33"},{"arguments":[{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"22714:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"22722:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22710:3:33"},"nodeType":"YulFunctionCall","src":"22710:22:33"},{"name":"_2","nodeType":"YulIdentifier","src":"22734:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22706:3:33"},"nodeType":"YulFunctionCall","src":"22706:31:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22678:6:33"},"nodeType":"YulFunctionCall","src":"22678:60:33"},"nodeType":"YulExpressionStatement","src":"22678:60:33"},{"nodeType":"YulVariableDeclaration","src":"22747:62:33","value":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"22786:14:33"},{"name":"tail_3","nodeType":"YulIdentifier","src":"22802:6:33"}],"functionName":{"name":"abi_encode_struct_Issuer","nodeType":"YulIdentifier","src":"22761:24:33"},"nodeType":"YulFunctionCall","src":"22761:48:33"},"variables":[{"name":"tail_4","nodeType":"YulTypedName","src":"22751:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22818:45:33","value":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22850:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"22858:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22846:3:33"},"nodeType":"YulFunctionCall","src":"22846:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22840:5:33"},"nodeType":"YulFunctionCall","src":"22840:23:33"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"22822:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22883:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22894:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22879:3:33"},"nodeType":"YulFunctionCall","src":"22879:19:33"},{"arguments":[{"arguments":[{"name":"tail_4","nodeType":"YulIdentifier","src":"22908:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"22916:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22904:3:33"},"nodeType":"YulFunctionCall","src":"22904:22:33"},{"name":"_2","nodeType":"YulIdentifier","src":"22928:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22900:3:33"},"nodeType":"YulFunctionCall","src":"22900:31:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22872:6:33"},"nodeType":"YulFunctionCall","src":"22872:60:33"},"nodeType":"YulExpressionStatement","src":"22872:60:33"},{"nodeType":"YulVariableDeclaration","src":"22941:73:33","value":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"22991:14:33"},{"name":"tail_4","nodeType":"YulIdentifier","src":"23007:6:33"}],"functionName":{"name":"abi_encode_struct_CredentialSubject","nodeType":"YulIdentifier","src":"22955:35:33"},"nodeType":"YulFunctionCall","src":"22955:59:33"},"variables":[{"name":"tail_5","nodeType":"YulTypedName","src":"22945:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23023:45:33","value":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23055:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"23063:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23051:3:33"},"nodeType":"YulFunctionCall","src":"23051:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23045:5:33"},"nodeType":"YulFunctionCall","src":"23045:23:33"},"variables":[{"name":"memberValue0_5","nodeType":"YulTypedName","src":"23027:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23088:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23099:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23084:3:33"},"nodeType":"YulFunctionCall","src":"23084:19:33"},{"arguments":[{"arguments":[{"name":"tail_5","nodeType":"YulIdentifier","src":"23113:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"23121:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23109:3:33"},"nodeType":"YulFunctionCall","src":"23109:22:33"},{"name":"_2","nodeType":"YulIdentifier","src":"23133:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23105:3:33"},"nodeType":"YulFunctionCall","src":"23105:31:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23077:6:33"},"nodeType":"YulFunctionCall","src":"23077:60:33"},"nodeType":"YulExpressionStatement","src":"23077:60:33"},{"nodeType":"YulVariableDeclaration","src":"23146:72:33","value":{"arguments":[{"name":"memberValue0_5","nodeType":"YulIdentifier","src":"23195:14:33"},{"name":"tail_5","nodeType":"YulIdentifier","src":"23211:6:33"}],"functionName":{"name":"abi_encode_struct_CredentialSchema","nodeType":"YulIdentifier","src":"23160:34:33"},"nodeType":"YulFunctionCall","src":"23160:58:33"},"variables":[{"name":"tail_6","nodeType":"YulTypedName","src":"23150:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23227:45:33","value":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23259:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"23267:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23255:3:33"},"nodeType":"YulFunctionCall","src":"23255:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23249:5:33"},"nodeType":"YulFunctionCall","src":"23249:23:33"},"variables":[{"name":"memberValue0_6","nodeType":"YulTypedName","src":"23231:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23292:9:33"},{"name":"_1","nodeType":"YulIdentifier","src":"23303:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23288:3:33"},"nodeType":"YulFunctionCall","src":"23288:18:33"},{"arguments":[{"arguments":[{"name":"tail_6","nodeType":"YulIdentifier","src":"23316:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"23324:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23312:3:33"},"nodeType":"YulFunctionCall","src":"23312:22:33"},{"name":"_2","nodeType":"YulIdentifier","src":"23336:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23308:3:33"},"nodeType":"YulFunctionCall","src":"23308:31:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23281:6:33"},"nodeType":"YulFunctionCall","src":"23281:59:33"},"nodeType":"YulExpressionStatement","src":"23281:59:33"},{"nodeType":"YulVariableDeclaration","src":"23349:55:33","value":{"arguments":[{"name":"memberValue0_6","nodeType":"YulIdentifier","src":"23381:14:33"},{"name":"tail_6","nodeType":"YulIdentifier","src":"23397:6:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"23363:17:33"},"nodeType":"YulFunctionCall","src":"23363:41:33"},"variables":[{"name":"tail_7","nodeType":"YulTypedName","src":"23353:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23413:45:33","value":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23445:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"23453:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23441:3:33"},"nodeType":"YulFunctionCall","src":"23441:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23435:5:33"},"nodeType":"YulFunctionCall","src":"23435:23:33"},"variables":[{"name":"memberValue0_7","nodeType":"YulTypedName","src":"23417:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23478:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23489:3:33","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23474:3:33"},"nodeType":"YulFunctionCall","src":"23474:19:33"},{"arguments":[{"arguments":[{"name":"tail_7","nodeType":"YulIdentifier","src":"23503:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"23511:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23499:3:33"},"nodeType":"YulFunctionCall","src":"23499:22:33"},{"name":"_2","nodeType":"YulIdentifier","src":"23523:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23495:3:33"},"nodeType":"YulFunctionCall","src":"23495:31:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23467:6:33"},"nodeType":"YulFunctionCall","src":"23467:60:33"},"nodeType":"YulExpressionStatement","src":"23467:60:33"},{"nodeType":"YulAssignment","src":"23536:49:33","value":{"arguments":[{"name":"memberValue0_7","nodeType":"YulIdentifier","src":"23562:14:33"},{"name":"tail_7","nodeType":"YulIdentifier","src":"23578:6:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"23544:17:33"},"nodeType":"YulFunctionCall","src":"23544:41:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23536:4:33"}]}]},"name":"abi_encode_tuple_t_uint256_t_struct$_VerifiableCredential_$7312_memory_ptr__to_t_uint256_t_struct$_VerifiableCredential_$7312_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21925:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21936:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21944:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21955:4:33","type":""}],"src":"21759:1832:33"},{"body":{"nodeType":"YulBlock","src":"23628:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23645:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23652:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"23657:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23648:3:33"},"nodeType":"YulFunctionCall","src":"23648:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23638:6:33"},"nodeType":"YulFunctionCall","src":"23638:31:33"},"nodeType":"YulExpressionStatement","src":"23638:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23685:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23688:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23678:6:33"},"nodeType":"YulFunctionCall","src":"23678:15:33"},"nodeType":"YulExpressionStatement","src":"23678:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23709:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23712:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23702:6:33"},"nodeType":"YulFunctionCall","src":"23702:15:33"},"nodeType":"YulExpressionStatement","src":"23702:15:33"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"23596:127:33"},{"body":{"nodeType":"YulBlock","src":"23792:358:33","statements":[{"nodeType":"YulVariableDeclaration","src":"23802:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"23817:1:33","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"23806:7:33","type":""}]},{"nodeType":"YulAssignment","src":"23827:16:33","value":{"name":"power_1","nodeType":"YulIdentifier","src":"23836:7:33"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"23827:5:33"}]},{"nodeType":"YulAssignment","src":"23852:13:33","value":{"name":"_base","nodeType":"YulIdentifier","src":"23860:5:33"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"23852:4:33"}]},{"body":{"nodeType":"YulBlock","src":"23916:228:33","statements":[{"body":{"nodeType":"YulBlock","src":"23961:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23963:16:33"},"nodeType":"YulFunctionCall","src":"23963:18:33"},"nodeType":"YulExpressionStatement","src":"23963:18:33"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"23936:4:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23950:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23946:3:33"},"nodeType":"YulFunctionCall","src":"23946:6:33"},{"name":"base","nodeType":"YulIdentifier","src":"23954:4:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23942:3:33"},"nodeType":"YulFunctionCall","src":"23942:17:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23933:2:33"},"nodeType":"YulFunctionCall","src":"23933:27:33"},"nodeType":"YulIf","src":"23930:53:33"},{"body":{"nodeType":"YulBlock","src":"24022:29:33","statements":[{"nodeType":"YulAssignment","src":"24024:25:33","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"24037:5:33"},{"name":"base","nodeType":"YulIdentifier","src":"24044:4:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24033:3:33"},"nodeType":"YulFunctionCall","src":"24033:16:33"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"24024:5:33"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"24003:8:33"},{"name":"power_1","nodeType":"YulIdentifier","src":"24013:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23999:3:33"},"nodeType":"YulFunctionCall","src":"23999:22:33"},"nodeType":"YulIf","src":"23996:55:33"},{"nodeType":"YulAssignment","src":"24064:23:33","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"24076:4:33"},{"name":"base","nodeType":"YulIdentifier","src":"24082:4:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24072:3:33"},"nodeType":"YulFunctionCall","src":"24072:15:33"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"24064:4:33"}]},{"nodeType":"YulAssignment","src":"24100:34:33","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"24116:7:33"},{"name":"exponent","nodeType":"YulIdentifier","src":"24125:8:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"24112:3:33"},"nodeType":"YulFunctionCall","src":"24112:22:33"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"24100:8:33"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"23885:8:33"},{"name":"power_1","nodeType":"YulIdentifier","src":"23895:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23882:2:33"},"nodeType":"YulFunctionCall","src":"23882:21:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23904:3:33","statements":[]},"pre":{"nodeType":"YulBlock","src":"23878:3:33","statements":[]},"src":"23874:270:33"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"23756:5:33","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"23763:8:33","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"23776:5:33","type":""},{"name":"base","nodeType":"YulTypedName","src":"23783:4:33","type":""}],"src":"23728:422:33"},{"body":{"nodeType":"YulBlock","src":"24214:747:33","statements":[{"body":{"nodeType":"YulBlock","src":"24252:52:33","statements":[{"nodeType":"YulAssignment","src":"24266:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"24275:1:33","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"24266:5:33"}]},{"nodeType":"YulLeave","src":"24289:5:33"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"24234:8:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24227:6:33"},"nodeType":"YulFunctionCall","src":"24227:16:33"},"nodeType":"YulIf","src":"24224:80:33"},{"body":{"nodeType":"YulBlock","src":"24337:52:33","statements":[{"nodeType":"YulAssignment","src":"24351:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"24360:1:33","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"24351:5:33"}]},{"nodeType":"YulLeave","src":"24374:5:33"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"24323:4:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24316:6:33"},"nodeType":"YulFunctionCall","src":"24316:12:33"},"nodeType":"YulIf","src":"24313:76:33"},{"cases":[{"body":{"nodeType":"YulBlock","src":"24425:52:33","statements":[{"nodeType":"YulAssignment","src":"24439:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"24448:1:33","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"24439:5:33"}]},{"nodeType":"YulLeave","src":"24462:5:33"}]},"nodeType":"YulCase","src":"24418:59:33","value":{"kind":"number","nodeType":"YulLiteral","src":"24423:1:33","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"24493:123:33","statements":[{"body":{"nodeType":"YulBlock","src":"24528:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24530:16:33"},"nodeType":"YulFunctionCall","src":"24530:18:33"},"nodeType":"YulExpressionStatement","src":"24530:18:33"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"24513:8:33"},{"kind":"number","nodeType":"YulLiteral","src":"24523:3:33","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24510:2:33"},"nodeType":"YulFunctionCall","src":"24510:17:33"},"nodeType":"YulIf","src":"24507:43:33"},{"nodeType":"YulAssignment","src":"24563:25:33","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"24576:8:33"},{"kind":"number","nodeType":"YulLiteral","src":"24586:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24572:3:33"},"nodeType":"YulFunctionCall","src":"24572:16:33"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"24563:5:33"}]},{"nodeType":"YulLeave","src":"24601:5:33"}]},"nodeType":"YulCase","src":"24486:130:33","value":{"kind":"number","nodeType":"YulLiteral","src":"24491:1:33","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"24405:4:33"},"nodeType":"YulSwitch","src":"24398:218:33"},{"body":{"nodeType":"YulBlock","src":"24714:70:33","statements":[{"nodeType":"YulAssignment","src":"24728:28:33","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"24741:4:33"},{"name":"exponent","nodeType":"YulIdentifier","src":"24747:8:33"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"24737:3:33"},"nodeType":"YulFunctionCall","src":"24737:19:33"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"24728:5:33"}]},{"nodeType":"YulLeave","src":"24769:5:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"24638:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"24644:2:33","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24635:2:33"},"nodeType":"YulFunctionCall","src":"24635:12:33"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"24652:8:33"},{"kind":"number","nodeType":"YulLiteral","src":"24662:2:33","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24649:2:33"},"nodeType":"YulFunctionCall","src":"24649:16:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24631:3:33"},"nodeType":"YulFunctionCall","src":"24631:35:33"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"24675:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"24681:3:33","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24672:2:33"},"nodeType":"YulFunctionCall","src":"24672:13:33"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"24690:8:33"},{"kind":"number","nodeType":"YulLiteral","src":"24700:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24687:2:33"},"nodeType":"YulFunctionCall","src":"24687:16:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24668:3:33"},"nodeType":"YulFunctionCall","src":"24668:36:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"24628:2:33"},"nodeType":"YulFunctionCall","src":"24628:77:33"},"nodeType":"YulIf","src":"24625:159:33"},{"nodeType":"YulVariableDeclaration","src":"24793:57:33","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"24835:4:33"},{"name":"exponent","nodeType":"YulIdentifier","src":"24841:8:33"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"24816:18:33"},"nodeType":"YulFunctionCall","src":"24816:34:33"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"24797:7:33","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"24806:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"24895:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24897:16:33"},"nodeType":"YulFunctionCall","src":"24897:18:33"},"nodeType":"YulExpressionStatement","src":"24897:18:33"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"24865:7:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24882:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24878:3:33"},"nodeType":"YulFunctionCall","src":"24878:6:33"},{"name":"base_1","nodeType":"YulIdentifier","src":"24886:6:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24874:3:33"},"nodeType":"YulFunctionCall","src":"24874:19:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24862:2:33"},"nodeType":"YulFunctionCall","src":"24862:32:33"},"nodeType":"YulIf","src":"24859:58:33"},{"nodeType":"YulAssignment","src":"24926:29:33","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"24939:7:33"},{"name":"base_1","nodeType":"YulIdentifier","src":"24948:6:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24935:3:33"},"nodeType":"YulFunctionCall","src":"24935:20:33"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"24926:5:33"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"24185:4:33","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"24191:8:33","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"24204:5:33","type":""}],"src":"24155:806:33"},{"body":{"nodeType":"YulBlock","src":"25034:72:33","statements":[{"nodeType":"YulAssignment","src":"25044:56:33","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"25074:4:33"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"25084:8:33"},{"kind":"number","nodeType":"YulLiteral","src":"25094:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25080:3:33"},"nodeType":"YulFunctionCall","src":"25080:19:33"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"25053:20:33"},"nodeType":"YulFunctionCall","src":"25053:47:33"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"25044:5:33"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"25005:4:33","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"25011:8:33","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"25024:5:33","type":""}],"src":"24966:140:33"},{"body":{"nodeType":"YulBlock","src":"25163:116:33","statements":[{"body":{"nodeType":"YulBlock","src":"25222:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25224:16:33"},"nodeType":"YulFunctionCall","src":"25224:18:33"},"nodeType":"YulExpressionStatement","src":"25224:18:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25194:1:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25187:6:33"},"nodeType":"YulFunctionCall","src":"25187:9:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25180:6:33"},"nodeType":"YulFunctionCall","src":"25180:17:33"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25202:1:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25213:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25209:3:33"},"nodeType":"YulFunctionCall","src":"25209:6:33"},{"name":"x","nodeType":"YulIdentifier","src":"25217:1:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25205:3:33"},"nodeType":"YulFunctionCall","src":"25205:14:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25199:2:33"},"nodeType":"YulFunctionCall","src":"25199:21:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25176:3:33"},"nodeType":"YulFunctionCall","src":"25176:45:33"},"nodeType":"YulIf","src":"25173:71:33"},{"nodeType":"YulAssignment","src":"25253:20:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25268:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"25271:1:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25264:3:33"},"nodeType":"YulFunctionCall","src":"25264:9:33"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"25253:7:33"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25142:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"25145:1:33","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"25151:7:33","type":""}],"src":"25111:168:33"},{"body":{"nodeType":"YulBlock","src":"25401:102:33","statements":[{"nodeType":"YulAssignment","src":"25411:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25423:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25434:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25419:3:33"},"nodeType":"YulFunctionCall","src":"25419:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25411:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25453:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25468:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25484:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"25489:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25480:3:33"},"nodeType":"YulFunctionCall","src":"25480:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"25493:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25476:3:33"},"nodeType":"YulFunctionCall","src":"25476:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25464:3:33"},"nodeType":"YulFunctionCall","src":"25464:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25446:6:33"},"nodeType":"YulFunctionCall","src":"25446:51:33"},"nodeType":"YulExpressionStatement","src":"25446:51:33"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25370:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25381:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25392:4:33","type":""}],"src":"25284:219:33"},{"body":{"nodeType":"YulBlock","src":"25682:237:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25699:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25710:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25692:6:33"},"nodeType":"YulFunctionCall","src":"25692:21:33"},"nodeType":"YulExpressionStatement","src":"25692:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25733:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25744:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25729:3:33"},"nodeType":"YulFunctionCall","src":"25729:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"25749:2:33","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25722:6:33"},"nodeType":"YulFunctionCall","src":"25722:30:33"},"nodeType":"YulExpressionStatement","src":"25722:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25772:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25783:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25768:3:33"},"nodeType":"YulFunctionCall","src":"25768:18:33"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"25788:34:33","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25761:6:33"},"nodeType":"YulFunctionCall","src":"25761:62:33"},"nodeType":"YulExpressionStatement","src":"25761:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25843:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25854:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25839:3:33"},"nodeType":"YulFunctionCall","src":"25839:18:33"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"25859:17:33","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25832:6:33"},"nodeType":"YulFunctionCall","src":"25832:45:33"},"nodeType":"YulExpressionStatement","src":"25832:45:33"},{"nodeType":"YulAssignment","src":"25886:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25898:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25909:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25894:3:33"},"nodeType":"YulFunctionCall","src":"25894:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25886:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25659:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25673:4:33","type":""}],"src":"25508:411:33"},{"body":{"nodeType":"YulBlock","src":"26098:234:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26115:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26126:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26108:6:33"},"nodeType":"YulFunctionCall","src":"26108:21:33"},"nodeType":"YulExpressionStatement","src":"26108:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26149:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26160:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26145:3:33"},"nodeType":"YulFunctionCall","src":"26145:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"26165:2:33","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26138:6:33"},"nodeType":"YulFunctionCall","src":"26138:30:33"},"nodeType":"YulExpressionStatement","src":"26138:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26188:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26199:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26184:3:33"},"nodeType":"YulFunctionCall","src":"26184:18:33"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"26204:34:33","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26177:6:33"},"nodeType":"YulFunctionCall","src":"26177:62:33"},"nodeType":"YulExpressionStatement","src":"26177:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26259:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26270:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26255:3:33"},"nodeType":"YulFunctionCall","src":"26255:18:33"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"26275:14:33","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26248:6:33"},"nodeType":"YulFunctionCall","src":"26248:42:33"},"nodeType":"YulExpressionStatement","src":"26248:42:33"},{"nodeType":"YulAssignment","src":"26299:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26311:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26322:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26307:3:33"},"nodeType":"YulFunctionCall","src":"26307:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26299:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26075:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26089:4:33","type":""}],"src":"25924:408:33"},{"body":{"nodeType":"YulBlock","src":"26511:234:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26528:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26539:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26521:6:33"},"nodeType":"YulFunctionCall","src":"26521:21:33"},"nodeType":"YulExpressionStatement","src":"26521:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26562:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26573:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26558:3:33"},"nodeType":"YulFunctionCall","src":"26558:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"26578:2:33","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26551:6:33"},"nodeType":"YulFunctionCall","src":"26551:30:33"},"nodeType":"YulExpressionStatement","src":"26551:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26601:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26612:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26597:3:33"},"nodeType":"YulFunctionCall","src":"26597:18:33"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"26617:34:33","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26590:6:33"},"nodeType":"YulFunctionCall","src":"26590:62:33"},"nodeType":"YulExpressionStatement","src":"26590:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26672:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26683:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26668:3:33"},"nodeType":"YulFunctionCall","src":"26668:18:33"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"26688:14:33","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26661:6:33"},"nodeType":"YulFunctionCall","src":"26661:42:33"},"nodeType":"YulExpressionStatement","src":"26661:42:33"},{"nodeType":"YulAssignment","src":"26712:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26724:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26735:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26720:3:33"},"nodeType":"YulFunctionCall","src":"26720:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26712:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26488:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26502:4:33","type":""}],"src":"26337:408:33"},{"body":{"nodeType":"YulBlock","src":"26798:80:33","statements":[{"body":{"nodeType":"YulBlock","src":"26825:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26827:16:33"},"nodeType":"YulFunctionCall","src":"26827:18:33"},"nodeType":"YulExpressionStatement","src":"26827:18:33"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26814:1:33"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26821:1:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"26817:3:33"},"nodeType":"YulFunctionCall","src":"26817:6:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26811:2:33"},"nodeType":"YulFunctionCall","src":"26811:13:33"},"nodeType":"YulIf","src":"26808:39:33"},{"nodeType":"YulAssignment","src":"26856:16:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26867:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"26870:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26863:3:33"},"nodeType":"YulFunctionCall","src":"26863:9:33"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"26856:3:33"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26781:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"26784:1:33","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"26790:3:33","type":""}],"src":"26750:128:33"},{"body":{"nodeType":"YulBlock","src":"27057:246:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27074:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27085:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27067:6:33"},"nodeType":"YulFunctionCall","src":"27067:21:33"},"nodeType":"YulExpressionStatement","src":"27067:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27108:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27119:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27104:3:33"},"nodeType":"YulFunctionCall","src":"27104:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"27124:2:33","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27097:6:33"},"nodeType":"YulFunctionCall","src":"27097:30:33"},"nodeType":"YulExpressionStatement","src":"27097:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27147:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27158:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27143:3:33"},"nodeType":"YulFunctionCall","src":"27143:18:33"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"27163:34:33","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27136:6:33"},"nodeType":"YulFunctionCall","src":"27136:62:33"},"nodeType":"YulExpressionStatement","src":"27136:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27218:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27229:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27214:3:33"},"nodeType":"YulFunctionCall","src":"27214:18:33"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"27234:26:33","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27207:6:33"},"nodeType":"YulFunctionCall","src":"27207:54:33"},"nodeType":"YulExpressionStatement","src":"27207:54:33"},{"nodeType":"YulAssignment","src":"27270:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27282:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27293:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27278:3:33"},"nodeType":"YulFunctionCall","src":"27278:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27270:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27034:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27048:4:33","type":""}],"src":"26883:420:33"},{"body":{"nodeType":"YulBlock","src":"27482:244:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27499:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27510:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27492:6:33"},"nodeType":"YulFunctionCall","src":"27492:21:33"},"nodeType":"YulExpressionStatement","src":"27492:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27533:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27544:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27529:3:33"},"nodeType":"YulFunctionCall","src":"27529:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"27549:2:33","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27522:6:33"},"nodeType":"YulFunctionCall","src":"27522:30:33"},"nodeType":"YulExpressionStatement","src":"27522:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27572:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27583:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27568:3:33"},"nodeType":"YulFunctionCall","src":"27568:18:33"},{"hexValue":"4b5242546f6b656e3a2073656e646572206d7573742062652074686520637265","kind":"string","nodeType":"YulLiteral","src":"27588:34:33","type":"","value":"KRBToken: sender must be the cre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27561:6:33"},"nodeType":"YulFunctionCall","src":"27561:62:33"},"nodeType":"YulExpressionStatement","src":"27561:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27643:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27654:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27639:3:33"},"nodeType":"YulFunctionCall","src":"27639:18:33"},{"hexValue":"64656e7469616c5375626a6563742061646472657373","kind":"string","nodeType":"YulLiteral","src":"27659:24:33","type":"","value":"dentialSubject address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27632:6:33"},"nodeType":"YulFunctionCall","src":"27632:52:33"},"nodeType":"YulExpressionStatement","src":"27632:52:33"},{"nodeType":"YulAssignment","src":"27693:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27705:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27716:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27701:3:33"},"nodeType":"YulFunctionCall","src":"27701:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27693:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_991995f99bb432f025de88f8f62466096976af05cf274093f61a137b02eab584__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27459:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27473:4:33","type":""}],"src":"27308:418:33"},{"body":{"nodeType":"YulBlock","src":"27905:179:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27922:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27933:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27915:6:33"},"nodeType":"YulFunctionCall","src":"27915:21:33"},"nodeType":"YulExpressionStatement","src":"27915:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27956:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27967:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27952:3:33"},"nodeType":"YulFunctionCall","src":"27952:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"27972:2:33","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27945:6:33"},"nodeType":"YulFunctionCall","src":"27945:30:33"},"nodeType":"YulExpressionStatement","src":"27945:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27995:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28006:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27991:3:33"},"nodeType":"YulFunctionCall","src":"27991:18:33"},{"hexValue":"4b5242546f6b656e3a207374617465206973206e6f7420497373756564","kind":"string","nodeType":"YulLiteral","src":"28011:31:33","type":"","value":"KRBToken: state is not Issued"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27984:6:33"},"nodeType":"YulFunctionCall","src":"27984:59:33"},"nodeType":"YulExpressionStatement","src":"27984:59:33"},{"nodeType":"YulAssignment","src":"28052:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28064:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28075:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28060:3:33"},"nodeType":"YulFunctionCall","src":"28060:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28052:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_59915efbd9b9ea0883ab9a80b80cf8e069efd5c55ae58df7a4d817ffeb895d99__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27882:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27896:4:33","type":""}],"src":"27731:353:33"},{"body":{"nodeType":"YulBlock","src":"28238:142:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28255:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"28266:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28248:6:33"},"nodeType":"YulFunctionCall","src":"28248:25:33"},"nodeType":"YulExpressionStatement","src":"28248:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28293:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28304:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28289:3:33"},"nodeType":"YulFunctionCall","src":"28289:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"28309:2:33","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28282:6:33"},"nodeType":"YulFunctionCall","src":"28282:30:33"},"nodeType":"YulExpressionStatement","src":"28282:30:33"},{"nodeType":"YulAssignment","src":"28321:53:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28347:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28359:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28370:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28355:3:33"},"nodeType":"YulFunctionCall","src":"28355:18:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"28329:17:33"},"nodeType":"YulFunctionCall","src":"28329:45:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28321:4:33"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28199:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28210:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28218:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28229:4:33","type":""}],"src":"28089:291:33"},{"body":{"nodeType":"YulBlock","src":"28559:180:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28576:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28587:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28569:6:33"},"nodeType":"YulFunctionCall","src":"28569:21:33"},"nodeType":"YulExpressionStatement","src":"28569:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28610:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28621:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28606:3:33"},"nodeType":"YulFunctionCall","src":"28606:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"28626:2:33","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28599:6:33"},"nodeType":"YulFunctionCall","src":"28599:30:33"},"nodeType":"YulExpressionStatement","src":"28599:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28649:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28660:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28645:3:33"},"nodeType":"YulFunctionCall","src":"28645:18:33"},{"hexValue":"4b5242546f6b656e3a206261642070657263656e746167652076616c7565","kind":"string","nodeType":"YulLiteral","src":"28665:32:33","type":"","value":"KRBToken: bad percentage value"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28638:6:33"},"nodeType":"YulFunctionCall","src":"28638:60:33"},"nodeType":"YulExpressionStatement","src":"28638:60:33"},{"nodeType":"YulAssignment","src":"28707:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28719:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28730:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28715:3:33"},"nodeType":"YulFunctionCall","src":"28715:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28707:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_9c9622ad52091e2b95a9f53802ec9bc638a7514fa414a842365027a9f4b3d0f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28536:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28550:4:33","type":""}],"src":"28385:354:33"},{"body":{"nodeType":"YulBlock","src":"28918:253:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28935:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28946:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28928:6:33"},"nodeType":"YulFunctionCall","src":"28928:21:33"},"nodeType":"YulExpressionStatement","src":"28928:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28969:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28980:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28965:3:33"},"nodeType":"YulFunctionCall","src":"28965:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"28985:2:33","type":"","value":"63"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28958:6:33"},"nodeType":"YulFunctionCall","src":"28958:30:33"},"nodeType":"YulExpressionStatement","src":"28958:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29008:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29019:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29004:3:33"},"nodeType":"YulFunctionCall","src":"29004:18:33"},{"hexValue":"4b5242546f6b656e3a206e65774d61785072696365206d757374206265206772","kind":"string","nodeType":"YulLiteral","src":"29024:34:33","type":"","value":"KRBToken: newMaxPrice must be gr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28997:6:33"},"nodeType":"YulFunctionCall","src":"28997:62:33"},"nodeType":"YulExpressionStatement","src":"28997:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29079:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29090:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29075:3:33"},"nodeType":"YulFunctionCall","src":"29075:18:33"},{"hexValue":"6561746572206f7220657175616c207468616e206e65774d696e5072696365","kind":"string","nodeType":"YulLiteral","src":"29095:33:33","type":"","value":"eater or equal than newMinPrice"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29068:6:33"},"nodeType":"YulFunctionCall","src":"29068:61:33"},"nodeType":"YulExpressionStatement","src":"29068:61:33"},{"nodeType":"YulAssignment","src":"29138:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29150:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29161:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29146:3:33"},"nodeType":"YulFunctionCall","src":"29146:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29138:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_edbe082f9bfd44b24100253331b8b5648999939251a9df0a754ae195eec06fdf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28895:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28909:4:33","type":""}],"src":"28744:427:33"},{"body":{"nodeType":"YulBlock","src":"29350:253:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29367:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29378:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29360:6:33"},"nodeType":"YulFunctionCall","src":"29360:21:33"},"nodeType":"YulExpressionStatement","src":"29360:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29401:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29412:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29397:3:33"},"nodeType":"YulFunctionCall","src":"29397:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"29417:2:33","type":"","value":"63"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29390:6:33"},"nodeType":"YulFunctionCall","src":"29390:30:33"},"nodeType":"YulExpressionStatement","src":"29390:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29440:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29451:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29436:3:33"},"nodeType":"YulFunctionCall","src":"29436:18:33"},{"hexValue":"4b5242546f6b656e3a206e65774d61785374616b65206d757374206265206772","kind":"string","nodeType":"YulLiteral","src":"29456:34:33","type":"","value":"KRBToken: newMaxStake must be gr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29429:6:33"},"nodeType":"YulFunctionCall","src":"29429:62:33"},"nodeType":"YulExpressionStatement","src":"29429:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29511:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29522:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29507:3:33"},"nodeType":"YulFunctionCall","src":"29507:18:33"},{"hexValue":"6561746572206f7220657175616c207468616e206e65774d696e5374616b65","kind":"string","nodeType":"YulLiteral","src":"29527:33:33","type":"","value":"eater or equal than newMinStake"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29500:6:33"},"nodeType":"YulFunctionCall","src":"29500:61:33"},"nodeType":"YulExpressionStatement","src":"29500:61:33"},{"nodeType":"YulAssignment","src":"29570:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29582:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29593:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29578:3:33"},"nodeType":"YulFunctionCall","src":"29578:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29570:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_83110a80c054bcc7e4c0b30d1981dbd14d0634878b0d0ea47333f50396778953__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29327:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29341:4:33","type":""}],"src":"29176:427:33"},{"body":{"nodeType":"YulBlock","src":"29782:227:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29799:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29810:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29792:6:33"},"nodeType":"YulFunctionCall","src":"29792:21:33"},"nodeType":"YulExpressionStatement","src":"29792:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29833:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29844:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29829:3:33"},"nodeType":"YulFunctionCall","src":"29829:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"29849:2:33","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29822:6:33"},"nodeType":"YulFunctionCall","src":"29822:30:33"},"nodeType":"YulExpressionStatement","src":"29822:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29872:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29883:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29868:3:33"},"nodeType":"YulFunctionCall","src":"29868:18:33"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"29888:34:33","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29861:6:33"},"nodeType":"YulFunctionCall","src":"29861:62:33"},"nodeType":"YulExpressionStatement","src":"29861:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29943:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29954:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29939:3:33"},"nodeType":"YulFunctionCall","src":"29939:18:33"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"29959:7:33","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29932:6:33"},"nodeType":"YulFunctionCall","src":"29932:35:33"},"nodeType":"YulExpressionStatement","src":"29932:35:33"},{"nodeType":"YulAssignment","src":"29976:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29988:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"29999:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29984:3:33"},"nodeType":"YulFunctionCall","src":"29984:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29976:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29759:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29773:4:33","type":""}],"src":"29608:401:33"},{"body":{"nodeType":"YulBlock","src":"30188:236:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30205:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30216:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30198:6:33"},"nodeType":"YulFunctionCall","src":"30198:21:33"},"nodeType":"YulExpressionStatement","src":"30198:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30239:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30250:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30235:3:33"},"nodeType":"YulFunctionCall","src":"30235:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"30255:2:33","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30228:6:33"},"nodeType":"YulFunctionCall","src":"30228:30:33"},"nodeType":"YulExpressionStatement","src":"30228:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30278:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30289:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30274:3:33"},"nodeType":"YulFunctionCall","src":"30274:18:33"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"30294:34:33","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30267:6:33"},"nodeType":"YulFunctionCall","src":"30267:62:33"},"nodeType":"YulExpressionStatement","src":"30267:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30349:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30360:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30345:3:33"},"nodeType":"YulFunctionCall","src":"30345:18:33"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"30365:16:33","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30338:6:33"},"nodeType":"YulFunctionCall","src":"30338:44:33"},"nodeType":"YulExpressionStatement","src":"30338:44:33"},{"nodeType":"YulAssignment","src":"30391:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30403:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30414:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30399:3:33"},"nodeType":"YulFunctionCall","src":"30399:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30391:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30165:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30179:4:33","type":""}],"src":"30014:410:33"},{"body":{"nodeType":"YulBlock","src":"30536:87:33","statements":[{"nodeType":"YulAssignment","src":"30546:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30558:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30569:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30554:3:33"},"nodeType":"YulFunctionCall","src":"30554:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30546:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30588:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30603:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"30611:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30599:3:33"},"nodeType":"YulFunctionCall","src":"30599:17:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30581:6:33"},"nodeType":"YulFunctionCall","src":"30581:36:33"},"nodeType":"YulExpressionStatement","src":"30581:36:33"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30505:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30516:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30527:4:33","type":""}],"src":"30429:194:33"},{"body":{"nodeType":"YulBlock","src":"30802:228:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30819:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30830:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30812:6:33"},"nodeType":"YulFunctionCall","src":"30812:21:33"},"nodeType":"YulExpressionStatement","src":"30812:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30853:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30864:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30849:3:33"},"nodeType":"YulFunctionCall","src":"30849:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"30869:2:33","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30842:6:33"},"nodeType":"YulFunctionCall","src":"30842:30:33"},"nodeType":"YulExpressionStatement","src":"30842:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30892:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30903:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30888:3:33"},"nodeType":"YulFunctionCall","src":"30888:18:33"},{"hexValue":"4b5242546f6b656e3a20696e76616c6964207369676e61747572652061646472","kind":"string","nodeType":"YulLiteral","src":"30908:34:33","type":"","value":"KRBToken: invalid signature addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30881:6:33"},"nodeType":"YulFunctionCall","src":"30881:62:33"},"nodeType":"YulExpressionStatement","src":"30881:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30963:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"30974:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30959:3:33"},"nodeType":"YulFunctionCall","src":"30959:18:33"},{"hexValue":"657373283029","kind":"string","nodeType":"YulLiteral","src":"30979:8:33","type":"","value":"ess(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30952:6:33"},"nodeType":"YulFunctionCall","src":"30952:36:33"},"nodeType":"YulExpressionStatement","src":"30952:36:33"},{"nodeType":"YulAssignment","src":"30997:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31009:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31020:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31005:3:33"},"nodeType":"YulFunctionCall","src":"31005:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30997:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_ea2f19a4ac42eec14f65d7d4dcad7015f4efe84177cc6011a1dccdc6b71a0b46__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30779:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30793:4:33","type":""}],"src":"30628:402:33"},{"body":{"nodeType":"YulBlock","src":"31209:246:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31226:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31237:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31219:6:33"},"nodeType":"YulFunctionCall","src":"31219:21:33"},"nodeType":"YulExpressionStatement","src":"31219:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31260:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31271:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31256:3:33"},"nodeType":"YulFunctionCall","src":"31256:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"31276:2:33","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31249:6:33"},"nodeType":"YulFunctionCall","src":"31249:30:33"},"nodeType":"YulExpressionStatement","src":"31249:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31299:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31310:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31295:3:33"},"nodeType":"YulFunctionCall","src":"31295:18:33"},{"hexValue":"4b5242546f6b656e3a207265636f766572656420616464726573732064696666","kind":"string","nodeType":"YulLiteral","src":"31315:34:33","type":"","value":"KRBToken: recovered address diff"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31288:6:33"},"nodeType":"YulFunctionCall","src":"31288:62:33"},"nodeType":"YulExpressionStatement","src":"31288:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31370:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31381:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31366:3:33"},"nodeType":"YulFunctionCall","src":"31366:18:33"},{"hexValue":"6572732066726f6d206578706563746564207369676e6572","kind":"string","nodeType":"YulLiteral","src":"31386:26:33","type":"","value":"ers from expected signer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31359:6:33"},"nodeType":"YulFunctionCall","src":"31359:54:33"},"nodeType":"YulExpressionStatement","src":"31359:54:33"},{"nodeType":"YulAssignment","src":"31422:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31434:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31445:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31430:3:33"},"nodeType":"YulFunctionCall","src":"31430:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31422:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_7e1977cacd35f2d9e9099ad9af0b7986aef7a028a39d80f79d502a11af996b22__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31186:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31200:4:33","type":""}],"src":"31035:420:33"},{"body":{"nodeType":"YulBlock","src":"31634:233:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31651:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31662:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31644:6:33"},"nodeType":"YulFunctionCall","src":"31644:21:33"},"nodeType":"YulExpressionStatement","src":"31644:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31685:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31696:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31681:3:33"},"nodeType":"YulFunctionCall","src":"31681:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"31701:2:33","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31674:6:33"},"nodeType":"YulFunctionCall","src":"31674:30:33"},"nodeType":"YulExpressionStatement","src":"31674:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31724:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31735:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31720:3:33"},"nodeType":"YulFunctionCall","src":"31720:18:33"},{"hexValue":"4b5242546f6b656e3a2073656e646572206d7573742062652074686520697373","kind":"string","nodeType":"YulLiteral","src":"31740:34:33","type":"","value":"KRBToken: sender must be the iss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31713:6:33"},"nodeType":"YulFunctionCall","src":"31713:62:33"},"nodeType":"YulExpressionStatement","src":"31713:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31795:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31806:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31791:3:33"},"nodeType":"YulFunctionCall","src":"31791:18:33"},{"hexValue":"7565722061646472657373","kind":"string","nodeType":"YulLiteral","src":"31811:13:33","type":"","value":"uer address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31784:6:33"},"nodeType":"YulFunctionCall","src":"31784:41:33"},"nodeType":"YulExpressionStatement","src":"31784:41:33"},{"nodeType":"YulAssignment","src":"31834:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31846:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"31857:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31842:3:33"},"nodeType":"YulFunctionCall","src":"31842:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31834:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_1882f1b1fc242a9895b5ba6cf731f897c919c3aa02c49eabd839b5af5f912a9e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31611:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31625:4:33","type":""}],"src":"31460:407:33"},{"body":{"nodeType":"YulBlock","src":"32046:246:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32063:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32074:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32056:6:33"},"nodeType":"YulFunctionCall","src":"32056:21:33"},"nodeType":"YulExpressionStatement","src":"32056:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32097:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32108:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32093:3:33"},"nodeType":"YulFunctionCall","src":"32093:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"32113:2:33","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32086:6:33"},"nodeType":"YulFunctionCall","src":"32086:30:33"},"nodeType":"YulExpressionStatement","src":"32086:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32136:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32147:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32132:3:33"},"nodeType":"YulFunctionCall","src":"32132:18:33"},{"hexValue":"4b5242546f6b656e3a206d73672e76616c7565206d7573742062652067726561","kind":"string","nodeType":"YulLiteral","src":"32152:34:33","type":"","value":"KRBToken: msg.value must be grea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32125:6:33"},"nodeType":"YulFunctionCall","src":"32125:62:33"},"nodeType":"YulExpressionStatement","src":"32125:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32207:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32218:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32203:3:33"},"nodeType":"YulFunctionCall","src":"32203:18:33"},{"hexValue":"746572207468616e206d696e5072696365546f4973737565","kind":"string","nodeType":"YulLiteral","src":"32223:26:33","type":"","value":"ter than minPriceToIssue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32196:6:33"},"nodeType":"YulFunctionCall","src":"32196:54:33"},"nodeType":"YulExpressionStatement","src":"32196:54:33"},{"nodeType":"YulAssignment","src":"32259:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32271:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32282:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32267:3:33"},"nodeType":"YulFunctionCall","src":"32267:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32259:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_19fbd3859058090876c7379a139a68075260c19b49b652a8115d9a2284a56bb2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32023:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32037:4:33","type":""}],"src":"31872:420:33"},{"body":{"nodeType":"YulBlock","src":"32471:243:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32488:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32499:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32481:6:33"},"nodeType":"YulFunctionCall","src":"32481:21:33"},"nodeType":"YulExpressionStatement","src":"32481:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32522:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32533:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32518:3:33"},"nodeType":"YulFunctionCall","src":"32518:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"32538:2:33","type":"","value":"53"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32511:6:33"},"nodeType":"YulFunctionCall","src":"32511:30:33"},"nodeType":"YulExpressionStatement","src":"32511:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32561:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32572:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32557:3:33"},"nodeType":"YulFunctionCall","src":"32557:18:33"},{"hexValue":"4b5242546f6b656e3a206d73672e76616c7565206d757374206265206c657373","kind":"string","nodeType":"YulLiteral","src":"32577:34:33","type":"","value":"KRBToken: msg.value must be less"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32550:6:33"},"nodeType":"YulFunctionCall","src":"32550:62:33"},"nodeType":"YulExpressionStatement","src":"32550:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32632:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32643:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32628:3:33"},"nodeType":"YulFunctionCall","src":"32628:18:33"},{"hexValue":"207468616e206d61785072696365546f4973737565","kind":"string","nodeType":"YulLiteral","src":"32648:23:33","type":"","value":" than maxPriceToIssue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32621:6:33"},"nodeType":"YulFunctionCall","src":"32621:51:33"},"nodeType":"YulExpressionStatement","src":"32621:51:33"},{"nodeType":"YulAssignment","src":"32681:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32693:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32704:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32689:3:33"},"nodeType":"YulFunctionCall","src":"32689:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32681:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_80adf7fdd8ed453748d6e9747b1b1855d9e9219e68346041dc4ac43505e97331__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32448:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32462:4:33","type":""}],"src":"32297:417:33"},{"body":{"nodeType":"YulBlock","src":"32893:248:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32910:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32921:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32903:6:33"},"nodeType":"YulFunctionCall","src":"32903:21:33"},"nodeType":"YulExpressionStatement","src":"32903:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32944:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32955:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32940:3:33"},"nodeType":"YulFunctionCall","src":"32940:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"32960:2:33","type":"","value":"58"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32933:6:33"},"nodeType":"YulFunctionCall","src":"32933:30:33"},"nodeType":"YulExpressionStatement","src":"32933:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32983:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"32994:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32979:3:33"},"nodeType":"YulFunctionCall","src":"32979:18:33"},{"hexValue":"4b5242546f6b656e3a206d73672e76616c756520646f6573206e6f74206d6174","kind":"string","nodeType":"YulLiteral","src":"32999:34:33","type":"","value":"KRBToken: msg.value does not mat"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32972:6:33"},"nodeType":"YulFunctionCall","src":"32972:62:33"},"nodeType":"YulExpressionStatement","src":"32972:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33054:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33065:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33050:3:33"},"nodeType":"YulFunctionCall","src":"33050:18:33"},{"hexValue":"63682063726564656e7469616c5375626a6563742e7072696365","kind":"string","nodeType":"YulLiteral","src":"33070:28:33","type":"","value":"ch credentialSubject.price"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33043:6:33"},"nodeType":"YulFunctionCall","src":"33043:56:33"},"nodeType":"YulExpressionStatement","src":"33043:56:33"},{"nodeType":"YulAssignment","src":"33108:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33120:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33131:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33116:3:33"},"nodeType":"YulFunctionCall","src":"33116:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33108:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_008d3f233664fb495b27bd80e2a167c986f5e4d1a83de1124a0fbd174d10a58b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32870:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32884:4:33","type":""}],"src":"32719:422:33"},{"body":{"nodeType":"YulBlock","src":"33320:246:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33337:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33348:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33330:6:33"},"nodeType":"YulFunctionCall","src":"33330:21:33"},"nodeType":"YulExpressionStatement","src":"33330:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33371:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33382:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33367:3:33"},"nodeType":"YulFunctionCall","src":"33367:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"33387:2:33","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33360:6:33"},"nodeType":"YulFunctionCall","src":"33360:30:33"},"nodeType":"YulExpressionStatement","src":"33360:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33410:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33421:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33406:3:33"},"nodeType":"YulFunctionCall","src":"33406:18:33"},{"hexValue":"4b5242546f6b656e3a2056657269666961626c652043726564656e7469616c20","kind":"string","nodeType":"YulLiteral","src":"33426:34:33","type":"","value":"KRBToken: Verifiable Credential "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33399:6:33"},"nodeType":"YulFunctionCall","src":"33399:62:33"},"nodeType":"YulExpressionStatement","src":"33399:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33481:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33492:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33477:3:33"},"nodeType":"YulFunctionCall","src":"33477:18:33"},{"hexValue":"6861736820616c7265616479206265656e20697373756564","kind":"string","nodeType":"YulLiteral","src":"33497:26:33","type":"","value":"hash already been issued"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33470:6:33"},"nodeType":"YulFunctionCall","src":"33470:54:33"},"nodeType":"YulExpressionStatement","src":"33470:54:33"},{"nodeType":"YulAssignment","src":"33533:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33545:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33556:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33541:3:33"},"nodeType":"YulFunctionCall","src":"33541:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33533:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_11adc1742b89d376db148ee1423253ca8ce5bccf18c29152e79d450916181b73__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33297:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33311:4:33","type":""}],"src":"33146:420:33"},{"body":{"nodeType":"YulBlock","src":"33745:235:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33762:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33773:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33755:6:33"},"nodeType":"YulFunctionCall","src":"33755:21:33"},"nodeType":"YulExpressionStatement","src":"33755:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33796:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33807:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33792:3:33"},"nodeType":"YulFunctionCall","src":"33792:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"33812:2:33","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33785:6:33"},"nodeType":"YulFunctionCall","src":"33785:30:33"},"nodeType":"YulExpressionStatement","src":"33785:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33835:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33846:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33831:3:33"},"nodeType":"YulFunctionCall","src":"33831:18:33"},{"hexValue":"4b5242546f6b656e3a2069737375657220646f6573206e6f7420686176652065","kind":"string","nodeType":"YulLiteral","src":"33851:34:33","type":"","value":"KRBToken: issuer does not have e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33824:6:33"},"nodeType":"YulFunctionCall","src":"33824:62:33"},"nodeType":"YulExpressionStatement","src":"33824:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33906:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33917:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33902:3:33"},"nodeType":"YulFunctionCall","src":"33902:18:33"},{"hexValue":"6e6f7567682062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"33922:15:33","type":"","value":"nough balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33895:6:33"},"nodeType":"YulFunctionCall","src":"33895:43:33"},"nodeType":"YulExpressionStatement","src":"33895:43:33"},{"nodeType":"YulAssignment","src":"33947:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33959:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"33970:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33955:3:33"},"nodeType":"YulFunctionCall","src":"33955:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33947:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_7c09dfbc593af863f0f68d921742e69677dba2b17f7d0fef75c5f7d53e2a63fc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33722:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33736:4:33","type":""}],"src":"33571:409:33"},{"body":{"nodeType":"YulBlock","src":"34159:297:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34176:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34187:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34169:6:33"},"nodeType":"YulFunctionCall","src":"34169:21:33"},"nodeType":"YulExpressionStatement","src":"34169:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34210:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34221:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34206:3:33"},"nodeType":"YulFunctionCall","src":"34206:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"34226:2:33","type":"","value":"67"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34199:6:33"},"nodeType":"YulFunctionCall","src":"34199:30:33"},"nodeType":"YulExpressionStatement","src":"34199:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34249:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34260:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34245:3:33"},"nodeType":"YulFunctionCall","src":"34245:18:33"},{"hexValue":"4b5242546f6b656e3a207374616b65206d757374206265206265747765656e20","kind":"string","nodeType":"YulLiteral","src":"34265:34:33","type":"","value":"KRBToken: stake must be between "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34238:6:33"},"nodeType":"YulFunctionCall","src":"34238:62:33"},"nodeType":"YulExpressionStatement","src":"34238:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34320:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34331:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34316:3:33"},"nodeType":"YulFunctionCall","src":"34316:18:33"},{"hexValue":"6d696e5374616b65546f497373756520616e64206d61785374616b65546f4973","kind":"string","nodeType":"YulLiteral","src":"34336:34:33","type":"","value":"minStakeToIssue and maxStakeToIs"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34309:6:33"},"nodeType":"YulFunctionCall","src":"34309:62:33"},"nodeType":"YulExpressionStatement","src":"34309:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34391:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34402:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34387:3:33"},"nodeType":"YulFunctionCall","src":"34387:19:33"},{"hexValue":"737565","kind":"string","nodeType":"YulLiteral","src":"34408:5:33","type":"","value":"sue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34380:6:33"},"nodeType":"YulFunctionCall","src":"34380:34:33"},"nodeType":"YulExpressionStatement","src":"34380:34:33"},{"nodeType":"YulAssignment","src":"34423:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34435:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34446:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34431:3:33"},"nodeType":"YulFunctionCall","src":"34431:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34423:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_61c878cc2073e2c17eaedc304e8e908cfabe225be81b30fcebd2592845affef1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34136:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34150:4:33","type":""}],"src":"33985:471:33"},{"body":{"nodeType":"YulBlock","src":"34542:103:33","statements":[{"body":{"nodeType":"YulBlock","src":"34588:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34597:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34600:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34590:6:33"},"nodeType":"YulFunctionCall","src":"34590:12:33"},"nodeType":"YulExpressionStatement","src":"34590:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"34563:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"34572:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34559:3:33"},"nodeType":"YulFunctionCall","src":"34559:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"34584:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"34555:3:33"},"nodeType":"YulFunctionCall","src":"34555:32:33"},"nodeType":"YulIf","src":"34552:52:33"},{"nodeType":"YulAssignment","src":"34613:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34629:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34623:5:33"},"nodeType":"YulFunctionCall","src":"34623:16:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34613:6:33"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34508:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"34519:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"34531:6:33","type":""}],"src":"34461:184:33"},{"body":{"nodeType":"YulBlock","src":"34824:226:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34841:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34852:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34834:6:33"},"nodeType":"YulFunctionCall","src":"34834:21:33"},"nodeType":"YulExpressionStatement","src":"34834:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34875:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34886:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34871:3:33"},"nodeType":"YulFunctionCall","src":"34871:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"34891:2:33","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34864:6:33"},"nodeType":"YulFunctionCall","src":"34864:30:33"},"nodeType":"YulExpressionStatement","src":"34864:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34914:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34925:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34910:3:33"},"nodeType":"YulFunctionCall","src":"34910:18:33"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"34930:34:33","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34903:6:33"},"nodeType":"YulFunctionCall","src":"34903:62:33"},"nodeType":"YulExpressionStatement","src":"34903:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34985:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"34996:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34981:3:33"},"nodeType":"YulFunctionCall","src":"34981:18:33"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"35001:6:33","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34974:6:33"},"nodeType":"YulFunctionCall","src":"34974:34:33"},"nodeType":"YulExpressionStatement","src":"34974:34:33"},{"nodeType":"YulAssignment","src":"35017:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35029:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35040:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35025:3:33"},"nodeType":"YulFunctionCall","src":"35025:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35017:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34801:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34815:4:33","type":""}],"src":"34650:400:33"},{"body":{"nodeType":"YulBlock","src":"35229:224:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35246:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35257:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35239:6:33"},"nodeType":"YulFunctionCall","src":"35239:21:33"},"nodeType":"YulExpressionStatement","src":"35239:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35280:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35291:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35276:3:33"},"nodeType":"YulFunctionCall","src":"35276:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"35296:2:33","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35269:6:33"},"nodeType":"YulFunctionCall","src":"35269:30:33"},"nodeType":"YulExpressionStatement","src":"35269:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35319:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35330:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35315:3:33"},"nodeType":"YulFunctionCall","src":"35315:18:33"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"35335:34:33","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35308:6:33"},"nodeType":"YulFunctionCall","src":"35308:62:33"},"nodeType":"YulExpressionStatement","src":"35308:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35390:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35401:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35386:3:33"},"nodeType":"YulFunctionCall","src":"35386:18:33"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"35406:4:33","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35379:6:33"},"nodeType":"YulFunctionCall","src":"35379:32:33"},"nodeType":"YulExpressionStatement","src":"35379:32:33"},{"nodeType":"YulAssignment","src":"35420:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35432:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35443:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35428:3:33"},"nodeType":"YulFunctionCall","src":"35428:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35420:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35206:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35220:4:33","type":""}],"src":"35055:398:33"},{"body":{"nodeType":"YulBlock","src":"35632:179:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35649:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35660:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35642:6:33"},"nodeType":"YulFunctionCall","src":"35642:21:33"},"nodeType":"YulExpressionStatement","src":"35642:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35683:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35694:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35679:3:33"},"nodeType":"YulFunctionCall","src":"35679:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"35699:2:33","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35672:6:33"},"nodeType":"YulFunctionCall","src":"35672:30:33"},"nodeType":"YulExpressionStatement","src":"35672:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35722:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35733:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35718:3:33"},"nodeType":"YulFunctionCall","src":"35718:18:33"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"35738:31:33","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35711:6:33"},"nodeType":"YulFunctionCall","src":"35711:59:33"},"nodeType":"YulExpressionStatement","src":"35711:59:33"},{"nodeType":"YulAssignment","src":"35779:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35791:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"35802:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35787:3:33"},"nodeType":"YulFunctionCall","src":"35787:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35779:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35609:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35623:4:33","type":""}],"src":"35458:353:33"},{"body":{"nodeType":"YulBlock","src":"35990:227:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36007:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36018:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36000:6:33"},"nodeType":"YulFunctionCall","src":"36000:21:33"},"nodeType":"YulExpressionStatement","src":"36000:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36041:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36052:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36037:3:33"},"nodeType":"YulFunctionCall","src":"36037:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"36057:2:33","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36030:6:33"},"nodeType":"YulFunctionCall","src":"36030:30:33"},"nodeType":"YulExpressionStatement","src":"36030:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36080:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36091:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36076:3:33"},"nodeType":"YulFunctionCall","src":"36076:18:33"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"36096:34:33","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36069:6:33"},"nodeType":"YulFunctionCall","src":"36069:62:33"},"nodeType":"YulExpressionStatement","src":"36069:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36151:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36162:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36147:3:33"},"nodeType":"YulFunctionCall","src":"36147:18:33"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"36167:7:33","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36140:6:33"},"nodeType":"YulFunctionCall","src":"36140:35:33"},"nodeType":"YulExpressionStatement","src":"36140:35:33"},{"nodeType":"YulAssignment","src":"36184:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36196:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36207:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36192:3:33"},"nodeType":"YulFunctionCall","src":"36192:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36184:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35967:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35981:4:33","type":""}],"src":"35816:401:33"},{"body":{"nodeType":"YulBlock","src":"36396:225:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36413:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36424:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36406:6:33"},"nodeType":"YulFunctionCall","src":"36406:21:33"},"nodeType":"YulExpressionStatement","src":"36406:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36447:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36458:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36443:3:33"},"nodeType":"YulFunctionCall","src":"36443:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"36463:2:33","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36436:6:33"},"nodeType":"YulFunctionCall","src":"36436:30:33"},"nodeType":"YulExpressionStatement","src":"36436:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36486:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36497:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36482:3:33"},"nodeType":"YulFunctionCall","src":"36482:18:33"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"36502:34:33","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36475:6:33"},"nodeType":"YulFunctionCall","src":"36475:62:33"},"nodeType":"YulExpressionStatement","src":"36475:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36557:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36568:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36553:3:33"},"nodeType":"YulFunctionCall","src":"36553:18:33"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"36573:5:33","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36546:6:33"},"nodeType":"YulFunctionCall","src":"36546:33:33"},"nodeType":"YulExpressionStatement","src":"36546:33:33"},{"nodeType":"YulAssignment","src":"36588:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36600:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36611:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36596:3:33"},"nodeType":"YulFunctionCall","src":"36596:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36588:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36373:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36387:4:33","type":""}],"src":"36222:399:33"},{"body":{"nodeType":"YulBlock","src":"36800:228:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36817:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36828:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36810:6:33"},"nodeType":"YulFunctionCall","src":"36810:21:33"},"nodeType":"YulExpressionStatement","src":"36810:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36851:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36862:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36847:3:33"},"nodeType":"YulFunctionCall","src":"36847:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"36867:2:33","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36840:6:33"},"nodeType":"YulFunctionCall","src":"36840:30:33"},"nodeType":"YulExpressionStatement","src":"36840:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36890:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36901:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36886:3:33"},"nodeType":"YulFunctionCall","src":"36886:18:33"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"36906:34:33","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36879:6:33"},"nodeType":"YulFunctionCall","src":"36879:62:33"},"nodeType":"YulExpressionStatement","src":"36879:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36961:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"36972:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36957:3:33"},"nodeType":"YulFunctionCall","src":"36957:18:33"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"36977:8:33","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36950:6:33"},"nodeType":"YulFunctionCall","src":"36950:36:33"},"nodeType":"YulExpressionStatement","src":"36950:36:33"},{"nodeType":"YulAssignment","src":"36995:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37007:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37018:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37003:3:33"},"nodeType":"YulFunctionCall","src":"37003:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36995:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36777:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36791:4:33","type":""}],"src":"36626:402:33"},{"body":{"nodeType":"YulBlock","src":"37207:181:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37224:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37235:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37217:6:33"},"nodeType":"YulFunctionCall","src":"37217:21:33"},"nodeType":"YulExpressionStatement","src":"37217:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37258:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37269:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37254:3:33"},"nodeType":"YulFunctionCall","src":"37254:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"37274:2:33","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37247:6:33"},"nodeType":"YulFunctionCall","src":"37247:30:33"},"nodeType":"YulExpressionStatement","src":"37247:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37297:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37308:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37293:3:33"},"nodeType":"YulFunctionCall","src":"37293:18:33"},{"hexValue":"4b5242546f6b656e3a206d757374206861766520676f7665726e20726f6c65","kind":"string","nodeType":"YulLiteral","src":"37313:33:33","type":"","value":"KRBToken: must have govern role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37286:6:33"},"nodeType":"YulFunctionCall","src":"37286:61:33"},"nodeType":"YulExpressionStatement","src":"37286:61:33"},{"nodeType":"YulAssignment","src":"37356:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37368:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37379:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37364:3:33"},"nodeType":"YulFunctionCall","src":"37364:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37356:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_ca4c381f2cae1bcc5b366609fb5b26a5f2d331bb0bb261d709964b6edd5b203e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37184:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37198:4:33","type":""}],"src":"37033:355:33"},{"body":{"nodeType":"YulBlock","src":"37567:178:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37584:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37595:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37577:6:33"},"nodeType":"YulFunctionCall","src":"37577:21:33"},"nodeType":"YulExpressionStatement","src":"37577:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37618:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37629:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37614:3:33"},"nodeType":"YulFunctionCall","src":"37614:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"37634:2:33","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37607:6:33"},"nodeType":"YulFunctionCall","src":"37607:30:33"},"nodeType":"YulExpressionStatement","src":"37607:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37657:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37668:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37653:3:33"},"nodeType":"YulFunctionCall","src":"37653:18:33"},{"hexValue":"4b5242546f6b656e3a20626164206973737565722061646472657373","kind":"string","nodeType":"YulLiteral","src":"37673:30:33","type":"","value":"KRBToken: bad issuer address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37646:6:33"},"nodeType":"YulFunctionCall","src":"37646:58:33"},"nodeType":"YulExpressionStatement","src":"37646:58:33"},{"nodeType":"YulAssignment","src":"37713:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37725:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37736:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37721:3:33"},"nodeType":"YulFunctionCall","src":"37721:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37713:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d97f95a245ba79f42a9065910fcf779e5b39b905459cc7e72c471a31d853943__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37544:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37558:4:33","type":""}],"src":"37393:352:33"},{"body":{"nodeType":"YulBlock","src":"37924:229:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37941:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37952:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37934:6:33"},"nodeType":"YulFunctionCall","src":"37934:21:33"},"nodeType":"YulExpressionStatement","src":"37934:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37975:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"37986:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37971:3:33"},"nodeType":"YulFunctionCall","src":"37971:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"37991:2:33","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37964:6:33"},"nodeType":"YulFunctionCall","src":"37964:30:33"},"nodeType":"YulExpressionStatement","src":"37964:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38014:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38025:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38010:3:33"},"nodeType":"YulFunctionCall","src":"38010:18:33"},{"hexValue":"4b5242546f6b656e3a206261642063726564656e7469616c5375626a65637420","kind":"string","nodeType":"YulLiteral","src":"38030:34:33","type":"","value":"KRBToken: bad credentialSubject "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38003:6:33"},"nodeType":"YulFunctionCall","src":"38003:62:33"},"nodeType":"YulExpressionStatement","src":"38003:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38085:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38096:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38081:3:33"},"nodeType":"YulFunctionCall","src":"38081:18:33"},{"hexValue":"61646472657373","kind":"string","nodeType":"YulLiteral","src":"38101:9:33","type":"","value":"address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38074:6:33"},"nodeType":"YulFunctionCall","src":"38074:37:33"},"nodeType":"YulExpressionStatement","src":"38074:37:33"},{"nodeType":"YulAssignment","src":"38120:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38132:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38143:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38128:3:33"},"nodeType":"YulFunctionCall","src":"38128:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38120:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_332c2939fb313dc20fa48e12a4dc181352b759b37e44ec55d8d7e17b0f95cc4e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37901:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37915:4:33","type":""}],"src":"37750:403:33"},{"body":{"nodeType":"YulBlock","src":"38332:226:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38349:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38360:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38342:6:33"},"nodeType":"YulFunctionCall","src":"38342:21:33"},"nodeType":"YulExpressionStatement","src":"38342:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38383:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38394:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38379:3:33"},"nodeType":"YulFunctionCall","src":"38379:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"38399:2:33","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38372:6:33"},"nodeType":"YulFunctionCall","src":"38372:30:33"},"nodeType":"YulExpressionStatement","src":"38372:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38422:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38433:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38418:3:33"},"nodeType":"YulFunctionCall","src":"38418:18:33"},{"hexValue":"4b5242546f6b656e3a206261642074727573742070657263656e746167652076","kind":"string","nodeType":"YulLiteral","src":"38438:34:33","type":"","value":"KRBToken: bad trust percentage v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38411:6:33"},"nodeType":"YulFunctionCall","src":"38411:62:33"},"nodeType":"YulExpressionStatement","src":"38411:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38493:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38504:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38489:3:33"},"nodeType":"YulFunctionCall","src":"38489:18:33"},{"hexValue":"616c7565","kind":"string","nodeType":"YulLiteral","src":"38509:6:33","type":"","value":"alue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38482:6:33"},"nodeType":"YulFunctionCall","src":"38482:34:33"},"nodeType":"YulExpressionStatement","src":"38482:34:33"},{"nodeType":"YulAssignment","src":"38525:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38537:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38548:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38533:3:33"},"nodeType":"YulFunctionCall","src":"38533:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38525:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_9aa176bbd438000177acf769a48d80b095df0cb0035424d15e7d7154b35a89e6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38309:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38323:4:33","type":""}],"src":"38158:400:33"},{"body":{"nodeType":"YulBlock","src":"38737:243:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38754:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38765:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38747:6:33"},"nodeType":"YulFunctionCall","src":"38747:21:33"},"nodeType":"YulExpressionStatement","src":"38747:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38788:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38799:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38784:3:33"},"nodeType":"YulFunctionCall","src":"38784:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"38804:2:33","type":"","value":"53"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38777:6:33"},"nodeType":"YulFunctionCall","src":"38777:30:33"},"nodeType":"YulExpressionStatement","src":"38777:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38827:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38838:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38823:3:33"},"nodeType":"YulFunctionCall","src":"38823:18:33"},{"hexValue":"4b5242546f6b656e3a2069737375657220444944206973207468652073616d65","kind":"string","nodeType":"YulLiteral","src":"38843:34:33","type":"","value":"KRBToken: issuer DID is the same"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38816:6:33"},"nodeType":"YulFunctionCall","src":"38816:62:33"},"nodeType":"YulExpressionStatement","src":"38816:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38898:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38909:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38894:3:33"},"nodeType":"YulFunctionCall","src":"38894:18:33"},{"hexValue":"2061732063726564656e7469616c5375626a656374","kind":"string","nodeType":"YulLiteral","src":"38914:23:33","type":"","value":" as credentialSubject"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38887:6:33"},"nodeType":"YulFunctionCall","src":"38887:51:33"},"nodeType":"YulExpressionStatement","src":"38887:51:33"},{"nodeType":"YulAssignment","src":"38947:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38959:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"38970:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38955:3:33"},"nodeType":"YulFunctionCall","src":"38955:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38947:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_7275d7417746227075f624f85a543397112ae5996ca94abb88e8f8c1a78aafe5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38714:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38728:4:33","type":""}],"src":"38563:417:33"},{"body":{"nodeType":"YulBlock","src":"39159:247:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39176:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39187:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39169:6:33"},"nodeType":"YulFunctionCall","src":"39169:21:33"},"nodeType":"YulExpressionStatement","src":"39169:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39210:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39221:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39206:3:33"},"nodeType":"YulFunctionCall","src":"39206:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"39226:2:33","type":"","value":"57"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39199:6:33"},"nodeType":"YulFunctionCall","src":"39199:30:33"},"nodeType":"YulExpressionStatement","src":"39199:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39249:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39260:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39245:3:33"},"nodeType":"YulFunctionCall","src":"39245:18:33"},{"hexValue":"4b5242546f6b656e3a2069737375657220616464726573732069732074686520","kind":"string","nodeType":"YulLiteral","src":"39265:34:33","type":"","value":"KRBToken: issuer address is the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39238:6:33"},"nodeType":"YulFunctionCall","src":"39238:62:33"},"nodeType":"YulExpressionStatement","src":"39238:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39320:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39331:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39316:3:33"},"nodeType":"YulFunctionCall","src":"39316:18:33"},{"hexValue":"73616d652061732063726564656e7469616c5375626a656374","kind":"string","nodeType":"YulLiteral","src":"39336:27:33","type":"","value":"same as credentialSubject"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39309:6:33"},"nodeType":"YulFunctionCall","src":"39309:55:33"},"nodeType":"YulExpressionStatement","src":"39309:55:33"},{"nodeType":"YulAssignment","src":"39373:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39385:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39396:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39381:3:33"},"nodeType":"YulFunctionCall","src":"39381:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39373:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_c3c30a0cfcd14b95a736c6e8404a5219d4f4f37173a5b67492adc4f42d450088__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39136:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39150:4:33","type":""}],"src":"38985:421:33"},{"body":{"nodeType":"YulBlock","src":"39585:232:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39602:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39613:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39595:6:33"},"nodeType":"YulFunctionCall","src":"39595:21:33"},"nodeType":"YulExpressionStatement","src":"39595:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39636:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39647:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39632:3:33"},"nodeType":"YulFunctionCall","src":"39632:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"39652:2:33","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39625:6:33"},"nodeType":"YulFunctionCall","src":"39625:30:33"},"nodeType":"YulExpressionStatement","src":"39625:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39675:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39686:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39671:3:33"},"nodeType":"YulFunctionCall","src":"39671:18:33"},{"hexValue":"4b5242546f6b656e3a2056432069737375616e63654461746520697320696e20","kind":"string","nodeType":"YulLiteral","src":"39691:34:33","type":"","value":"KRBToken: VC issuanceDate is in "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39664:6:33"},"nodeType":"YulFunctionCall","src":"39664:62:33"},"nodeType":"YulExpressionStatement","src":"39664:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39746:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39757:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39742:3:33"},"nodeType":"YulFunctionCall","src":"39742:18:33"},{"hexValue":"74686520667574757265","kind":"string","nodeType":"YulLiteral","src":"39762:12:33","type":"","value":"the future"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39735:6:33"},"nodeType":"YulFunctionCall","src":"39735:40:33"},"nodeType":"YulExpressionStatement","src":"39735:40:33"},{"nodeType":"YulAssignment","src":"39784:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39796:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"39807:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39792:3:33"},"nodeType":"YulFunctionCall","src":"39792:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39784:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3e2e532f35077290d5b88b7db3097bb836039268a2ba2d6858c6508237a35cf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39562:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39576:4:33","type":""}],"src":"39411:406:33"},{"body":{"nodeType":"YulBlock","src":"39996:182:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40013:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40024:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40006:6:33"},"nodeType":"YulFunctionCall","src":"40006:21:33"},"nodeType":"YulExpressionStatement","src":"40006:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40047:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40058:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40043:3:33"},"nodeType":"YulFunctionCall","src":"40043:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"40063:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40036:6:33"},"nodeType":"YulFunctionCall","src":"40036:30:33"},"nodeType":"YulExpressionStatement","src":"40036:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40086:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40097:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40082:3:33"},"nodeType":"YulFunctionCall","src":"40082:18:33"},{"hexValue":"4b5242546f6b656e3a2056432068617320616c72656164792065787069726564","kind":"string","nodeType":"YulLiteral","src":"40102:34:33","type":"","value":"KRBToken: VC has already expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40075:6:33"},"nodeType":"YulFunctionCall","src":"40075:62:33"},"nodeType":"YulExpressionStatement","src":"40075:62:33"},{"nodeType":"YulAssignment","src":"40146:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40158:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40169:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40154:3:33"},"nodeType":"YulFunctionCall","src":"40154:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40146:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_3603672c3b08973ae817b0488ed6115eb7a95a5d250db50f67ba4f72e13d7a41__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39973:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39987:4:33","type":""}],"src":"39822:356:33"},{"body":{"nodeType":"YulBlock","src":"40357:232:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40374:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40385:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40367:6:33"},"nodeType":"YulFunctionCall","src":"40367:21:33"},"nodeType":"YulExpressionStatement","src":"40367:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40408:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40419:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40404:3:33"},"nodeType":"YulFunctionCall","src":"40404:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"40424:2:33","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40397:6:33"},"nodeType":"YulFunctionCall","src":"40397:30:33"},"nodeType":"YulExpressionStatement","src":"40397:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40447:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40458:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40443:3:33"},"nodeType":"YulFunctionCall","src":"40443:18:33"},{"hexValue":"4b5242546f6b656e3a206275726e207374616b652066726f6d20746865207a65","kind":"string","nodeType":"YulLiteral","src":"40463:34:33","type":"","value":"KRBToken: burn stake from the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40436:6:33"},"nodeType":"YulFunctionCall","src":"40436:62:33"},"nodeType":"YulExpressionStatement","src":"40436:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40518:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40529:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40514:3:33"},"nodeType":"YulFunctionCall","src":"40514:18:33"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"40534:12:33","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40507:6:33"},"nodeType":"YulFunctionCall","src":"40507:40:33"},"nodeType":"YulExpressionStatement","src":"40507:40:33"},{"nodeType":"YulAssignment","src":"40556:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40568:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40579:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40564:3:33"},"nodeType":"YulFunctionCall","src":"40564:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40556:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_34550b29c2a6cea2c45d9052485cd5d267739ac50461d2acec8e216f6ec8e019__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40334:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40348:4:33","type":""}],"src":"40183:406:33"},{"body":{"nodeType":"YulBlock","src":"40768:223:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40785:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40796:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40778:6:33"},"nodeType":"YulFunctionCall","src":"40778:21:33"},"nodeType":"YulExpressionStatement","src":"40778:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40819:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40830:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40815:3:33"},"nodeType":"YulFunctionCall","src":"40815:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"40835:2:33","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40808:6:33"},"nodeType":"YulFunctionCall","src":"40808:30:33"},"nodeType":"YulExpressionStatement","src":"40808:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40858:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40869:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40854:3:33"},"nodeType":"YulFunctionCall","src":"40854:18:33"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"40874:34:33","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40847:6:33"},"nodeType":"YulFunctionCall","src":"40847:62:33"},"nodeType":"YulExpressionStatement","src":"40847:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40929:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40940:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40925:3:33"},"nodeType":"YulFunctionCall","src":"40925:18:33"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"40945:3:33","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40918:6:33"},"nodeType":"YulFunctionCall","src":"40918:31:33"},"nodeType":"YulExpressionStatement","src":"40918:31:33"},{"nodeType":"YulAssignment","src":"40958:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40970:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"40981:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40966:3:33"},"nodeType":"YulFunctionCall","src":"40966:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40958:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40745:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40759:4:33","type":""}],"src":"40594:397:33"},{"body":{"nodeType":"YulBlock","src":"41170:224:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41187:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"41198:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41180:6:33"},"nodeType":"YulFunctionCall","src":"41180:21:33"},"nodeType":"YulExpressionStatement","src":"41180:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41221:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"41232:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41217:3:33"},"nodeType":"YulFunctionCall","src":"41217:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"41237:2:33","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41210:6:33"},"nodeType":"YulFunctionCall","src":"41210:30:33"},"nodeType":"YulExpressionStatement","src":"41210:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41260:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"41271:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41256:3:33"},"nodeType":"YulFunctionCall","src":"41256:18:33"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"41276:34:33","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41249:6:33"},"nodeType":"YulFunctionCall","src":"41249:62:33"},"nodeType":"YulExpressionStatement","src":"41249:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41331:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"41342:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41327:3:33"},"nodeType":"YulFunctionCall","src":"41327:18:33"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"41347:4:33","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41320:6:33"},"nodeType":"YulFunctionCall","src":"41320:32:33"},"nodeType":"YulExpressionStatement","src":"41320:32:33"},{"nodeType":"YulAssignment","src":"41361:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41373:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"41384:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41369:3:33"},"nodeType":"YulFunctionCall","src":"41369:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41361:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41147:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41161:4:33","type":""}],"src":"40996:398:33"},{"body":{"nodeType":"YulBlock","src":"41573:181:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41590:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"41601:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41583:6:33"},"nodeType":"YulFunctionCall","src":"41583:21:33"},"nodeType":"YulExpressionStatement","src":"41583:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41624:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"41635:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41620:3:33"},"nodeType":"YulFunctionCall","src":"41620:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"41640:2:33","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41613:6:33"},"nodeType":"YulFunctionCall","src":"41613:30:33"},"nodeType":"YulExpressionStatement","src":"41613:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41663:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"41674:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41659:3:33"},"nodeType":"YulFunctionCall","src":"41659:18:33"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"41679:33:33","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41652:6:33"},"nodeType":"YulFunctionCall","src":"41652:61:33"},"nodeType":"YulExpressionStatement","src":"41652:61:33"},{"nodeType":"YulAssignment","src":"41722:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41734:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"41745:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41730:3:33"},"nodeType":"YulFunctionCall","src":"41730:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41722:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41550:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41564:4:33","type":""}],"src":"41399:355:33"},{"body":{"nodeType":"YulBlock","src":"41840:103:33","statements":[{"body":{"nodeType":"YulBlock","src":"41886:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41895:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41898:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41888:6:33"},"nodeType":"YulFunctionCall","src":"41888:12:33"},"nodeType":"YulExpressionStatement","src":"41888:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"41861:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"41870:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41857:3:33"},"nodeType":"YulFunctionCall","src":"41857:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"41882:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"41853:3:33"},"nodeType":"YulFunctionCall","src":"41853:32:33"},"nodeType":"YulIf","src":"41850:52:33"},{"nodeType":"YulAssignment","src":"41911:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41927:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41921:5:33"},"nodeType":"YulFunctionCall","src":"41921:16:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"41911:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41806:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"41817:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"41829:6:33","type":""}],"src":"41759:184:33"},{"body":{"nodeType":"YulBlock","src":"42122:236:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42139:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42150:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42132:6:33"},"nodeType":"YulFunctionCall","src":"42132:21:33"},"nodeType":"YulExpressionStatement","src":"42132:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42173:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42184:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42169:3:33"},"nodeType":"YulFunctionCall","src":"42169:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"42189:2:33","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42162:6:33"},"nodeType":"YulFunctionCall","src":"42162:30:33"},"nodeType":"YulExpressionStatement","src":"42162:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42212:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42223:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42208:3:33"},"nodeType":"YulFunctionCall","src":"42208:18:33"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"42228:34:33","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42201:6:33"},"nodeType":"YulFunctionCall","src":"42201:62:33"},"nodeType":"YulExpressionStatement","src":"42201:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42283:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42294:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42279:3:33"},"nodeType":"YulFunctionCall","src":"42279:18:33"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"42299:16:33","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42272:6:33"},"nodeType":"YulFunctionCall","src":"42272:44:33"},"nodeType":"YulExpressionStatement","src":"42272:44:33"},{"nodeType":"YulAssignment","src":"42325:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42337:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42348:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42333:3:33"},"nodeType":"YulFunctionCall","src":"42333:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42325:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42099:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42113:4:33","type":""}],"src":"41948:410:33"},{"body":{"nodeType":"YulBlock","src":"42537:231:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42554:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42565:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42547:6:33"},"nodeType":"YulFunctionCall","src":"42547:21:33"},"nodeType":"YulExpressionStatement","src":"42547:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42588:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42599:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42584:3:33"},"nodeType":"YulFunctionCall","src":"42584:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"42604:2:33","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42577:6:33"},"nodeType":"YulFunctionCall","src":"42577:30:33"},"nodeType":"YulExpressionStatement","src":"42577:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42627:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42638:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42623:3:33"},"nodeType":"YulFunctionCall","src":"42623:18:33"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"42643:34:33","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42616:6:33"},"nodeType":"YulFunctionCall","src":"42616:62:33"},"nodeType":"YulExpressionStatement","src":"42616:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42698:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42709:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42694:3:33"},"nodeType":"YulFunctionCall","src":"42694:18:33"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"42714:11:33","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42687:6:33"},"nodeType":"YulFunctionCall","src":"42687:39:33"},"nodeType":"YulExpressionStatement","src":"42687:39:33"},{"nodeType":"YulAssignment","src":"42735:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42747:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42758:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42743:3:33"},"nodeType":"YulFunctionCall","src":"42743:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42735:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42514:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42528:4:33","type":""}],"src":"42363:405:33"},{"body":{"nodeType":"YulBlock","src":"42947:233:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42964:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"42975:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42957:6:33"},"nodeType":"YulFunctionCall","src":"42957:21:33"},"nodeType":"YulExpressionStatement","src":"42957:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42998:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"43009:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42994:3:33"},"nodeType":"YulFunctionCall","src":"42994:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"43014:2:33","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42987:6:33"},"nodeType":"YulFunctionCall","src":"42987:30:33"},"nodeType":"YulExpressionStatement","src":"42987:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43037:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"43048:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43033:3:33"},"nodeType":"YulFunctionCall","src":"43033:18:33"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"43053:34:33","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43026:6:33"},"nodeType":"YulFunctionCall","src":"43026:62:33"},"nodeType":"YulExpressionStatement","src":"43026:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43108:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"43119:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43104:3:33"},"nodeType":"YulFunctionCall","src":"43104:18:33"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"43124:13:33","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43097:6:33"},"nodeType":"YulFunctionCall","src":"43097:41:33"},"nodeType":"YulExpressionStatement","src":"43097:41:33"},{"nodeType":"YulAssignment","src":"43147:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43159:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"43170:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43155:3:33"},"nodeType":"YulFunctionCall","src":"43155:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43147:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42924:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42938:4:33","type":""}],"src":"42773:407:33"},{"body":{"nodeType":"YulBlock","src":"43359:181:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43376:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"43387:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43369:6:33"},"nodeType":"YulFunctionCall","src":"43369:21:33"},"nodeType":"YulExpressionStatement","src":"43369:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43410:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"43421:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43406:3:33"},"nodeType":"YulFunctionCall","src":"43406:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"43426:2:33","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43399:6:33"},"nodeType":"YulFunctionCall","src":"43399:30:33"},"nodeType":"YulExpressionStatement","src":"43399:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43449:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"43460:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43445:3:33"},"nodeType":"YulFunctionCall","src":"43445:18:33"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"43465:33:33","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43438:6:33"},"nodeType":"YulFunctionCall","src":"43438:61:33"},"nodeType":"YulExpressionStatement","src":"43438:61:33"},{"nodeType":"YulAssignment","src":"43508:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43520:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"43531:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43516:3:33"},"nodeType":"YulFunctionCall","src":"43516:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43508:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43336:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43350:4:33","type":""}],"src":"43185:355:33"},{"body":{"nodeType":"YulBlock","src":"43594:76:33","statements":[{"body":{"nodeType":"YulBlock","src":"43616:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"43618:16:33"},"nodeType":"YulFunctionCall","src":"43618:18:33"},"nodeType":"YulExpressionStatement","src":"43618:18:33"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43610:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"43613:1:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43607:2:33"},"nodeType":"YulFunctionCall","src":"43607:8:33"},"nodeType":"YulIf","src":"43604:34:33"},{"nodeType":"YulAssignment","src":"43647:17:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43659:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"43662:1:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43655:3:33"},"nodeType":"YulFunctionCall","src":"43655:9:33"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"43647:4:33"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43576:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"43579:1:33","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"43585:4:33","type":""}],"src":"43545:125:33"},{"body":{"nodeType":"YulBlock","src":"44000:426:33","statements":[{"nodeType":"YulAssignment","src":"44010:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44022:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44033:3:33","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44018:3:33"},"nodeType":"YulFunctionCall","src":"44018:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44010:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44053:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"44064:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44046:6:33"},"nodeType":"YulFunctionCall","src":"44046:25:33"},"nodeType":"YulExpressionStatement","src":"44046:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44091:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44102:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44087:3:33"},"nodeType":"YulFunctionCall","src":"44087:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"44107:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44080:6:33"},"nodeType":"YulFunctionCall","src":"44080:34:33"},"nodeType":"YulExpressionStatement","src":"44080:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44134:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44145:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44130:3:33"},"nodeType":"YulFunctionCall","src":"44130:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"44150:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44123:6:33"},"nodeType":"YulFunctionCall","src":"44123:34:33"},"nodeType":"YulExpressionStatement","src":"44123:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44177:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44188:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44173:3:33"},"nodeType":"YulFunctionCall","src":"44173:18:33"},{"name":"value3","nodeType":"YulIdentifier","src":"44193:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44166:6:33"},"nodeType":"YulFunctionCall","src":"44166:34:33"},"nodeType":"YulExpressionStatement","src":"44166:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44220:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44231:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44216:3:33"},"nodeType":"YulFunctionCall","src":"44216:19:33"},{"name":"value4","nodeType":"YulIdentifier","src":"44237:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44209:6:33"},"nodeType":"YulFunctionCall","src":"44209:35:33"},"nodeType":"YulExpressionStatement","src":"44209:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44264:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44275:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44260:3:33"},"nodeType":"YulFunctionCall","src":"44260:19:33"},{"name":"value5","nodeType":"YulIdentifier","src":"44281:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44253:6:33"},"nodeType":"YulFunctionCall","src":"44253:35:33"},"nodeType":"YulExpressionStatement","src":"44253:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44308:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44319:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44304:3:33"},"nodeType":"YulFunctionCall","src":"44304:19:33"},{"name":"value6","nodeType":"YulIdentifier","src":"44325:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44297:6:33"},"nodeType":"YulFunctionCall","src":"44297:35:33"},"nodeType":"YulExpressionStatement","src":"44297:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44352:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44363:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44348:3:33"},"nodeType":"YulFunctionCall","src":"44348:19:33"},{"name":"value7","nodeType":"YulIdentifier","src":"44369:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44341:6:33"},"nodeType":"YulFunctionCall","src":"44341:35:33"},"nodeType":"YulExpressionStatement","src":"44341:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44396:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44407:3:33","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44392:3:33"},"nodeType":"YulFunctionCall","src":"44392:19:33"},{"name":"value8","nodeType":"YulIdentifier","src":"44413:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44385:6:33"},"nodeType":"YulFunctionCall","src":"44385:35:33"},"nodeType":"YulExpressionStatement","src":"44385:35:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43905:9:33","type":""},{"name":"value8","nodeType":"YulTypedName","src":"43916:6:33","type":""},{"name":"value7","nodeType":"YulTypedName","src":"43924:6:33","type":""},{"name":"value6","nodeType":"YulTypedName","src":"43932:6:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"43940:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"43948:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"43956:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"43964:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43972:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43980:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43991:4:33","type":""}],"src":"43675:751:33"},{"body":{"nodeType":"YulBlock","src":"44477:171:33","statements":[{"body":{"nodeType":"YulBlock","src":"44508:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44529:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44536:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"44541:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"44532:3:33"},"nodeType":"YulFunctionCall","src":"44532:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44522:6:33"},"nodeType":"YulFunctionCall","src":"44522:31:33"},"nodeType":"YulExpressionStatement","src":"44522:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44573:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44576:4:33","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44566:6:33"},"nodeType":"YulFunctionCall","src":"44566:15:33"},"nodeType":"YulExpressionStatement","src":"44566:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44601:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44604:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44594:6:33"},"nodeType":"YulFunctionCall","src":"44594:15:33"},"nodeType":"YulExpressionStatement","src":"44594:15:33"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"44497:1:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44490:6:33"},"nodeType":"YulFunctionCall","src":"44490:9:33"},"nodeType":"YulIf","src":"44487:132:33"},{"nodeType":"YulAssignment","src":"44628:14:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44637:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"44640:1:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"44633:3:33"},"nodeType":"YulFunctionCall","src":"44633:9:33"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"44628:1:33"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"44462:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"44465:1:33","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"44471:1:33","type":""}],"src":"44431:217:33"},{"body":{"nodeType":"YulBlock","src":"44827:235:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44844:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44855:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44837:6:33"},"nodeType":"YulFunctionCall","src":"44837:21:33"},"nodeType":"YulExpressionStatement","src":"44837:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44878:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44889:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44874:3:33"},"nodeType":"YulFunctionCall","src":"44874:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"44894:2:33","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44867:6:33"},"nodeType":"YulFunctionCall","src":"44867:30:33"},"nodeType":"YulExpressionStatement","src":"44867:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44917:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44928:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44913:3:33"},"nodeType":"YulFunctionCall","src":"44913:18:33"},{"hexValue":"4b5242546f6b656e3a2073656e64657220646f6573206e6f7420686176652065","kind":"string","nodeType":"YulLiteral","src":"44933:34:33","type":"","value":"KRBToken: sender does not have e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44906:6:33"},"nodeType":"YulFunctionCall","src":"44906:62:33"},"nodeType":"YulExpressionStatement","src":"44906:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44988:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"44999:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44984:3:33"},"nodeType":"YulFunctionCall","src":"44984:18:33"},{"hexValue":"6e6f7567682062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"45004:15:33","type":"","value":"nough balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44977:6:33"},"nodeType":"YulFunctionCall","src":"44977:43:33"},"nodeType":"YulExpressionStatement","src":"44977:43:33"},{"nodeType":"YulAssignment","src":"45029:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45041:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"45052:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45037:3:33"},"nodeType":"YulFunctionCall","src":"45037:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45029:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_6ab6f67ab3e5c9d3e3ad1ce6e59c6145b1dca09929899c966d2f1683f7246d26__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44804:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44818:4:33","type":""}],"src":"44653:409:33"},{"body":{"nodeType":"YulBlock","src":"45241:238:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45258:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"45269:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45251:6:33"},"nodeType":"YulFunctionCall","src":"45251:21:33"},"nodeType":"YulExpressionStatement","src":"45251:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45292:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"45303:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45288:3:33"},"nodeType":"YulFunctionCall","src":"45288:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"45308:2:33","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45281:6:33"},"nodeType":"YulFunctionCall","src":"45281:30:33"},"nodeType":"YulExpressionStatement","src":"45281:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45331:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"45342:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45327:3:33"},"nodeType":"YulFunctionCall","src":"45327:18:33"},{"hexValue":"4b5242546f6b656e3a20726563697069656e7420646f6573206e6f7420686176","kind":"string","nodeType":"YulLiteral","src":"45347:34:33","type":"","value":"KRBToken: recipient does not hav"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45320:6:33"},"nodeType":"YulFunctionCall","src":"45320:62:33"},"nodeType":"YulExpressionStatement","src":"45320:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45402:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"45413:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45398:3:33"},"nodeType":"YulFunctionCall","src":"45398:18:33"},{"hexValue":"6520656e6f7567682062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"45418:18:33","type":"","value":"e enough balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45391:6:33"},"nodeType":"YulFunctionCall","src":"45391:46:33"},"nodeType":"YulExpressionStatement","src":"45391:46:33"},{"nodeType":"YulAssignment","src":"45446:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45458:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"45469:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45454:3:33"},"nodeType":"YulFunctionCall","src":"45454:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45446:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_91ee1d72c262cf54d2263e53ca95d17b8447785204e2fcf5c35c3b85dce47ce6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45218:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45232:4:33","type":""}],"src":"45067:412:33"},{"body":{"nodeType":"YulBlock","src":"45873:397:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45890:3:33"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"45895:25:33","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45883:6:33"},"nodeType":"YulFunctionCall","src":"45883:38:33"},"nodeType":"YulExpressionStatement","src":"45883:38:33"},{"nodeType":"YulVariableDeclaration","src":"45930:27:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45950:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"45944:5:33"},"nodeType":"YulFunctionCall","src":"45944:13:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"45934:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45992:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"46000:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45988:3:33"},"nodeType":"YulFunctionCall","src":"45988:17:33"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46011:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"46016:2:33","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46007:3:33"},"nodeType":"YulFunctionCall","src":"46007:12:33"},{"name":"length","nodeType":"YulIdentifier","src":"46021:6:33"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"45966:21:33"},"nodeType":"YulFunctionCall","src":"45966:62:33"},"nodeType":"YulExpressionStatement","src":"45966:62:33"},{"nodeType":"YulVariableDeclaration","src":"46037:26:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46051:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"46056:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46047:3:33"},"nodeType":"YulFunctionCall","src":"46047:16:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"46041:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"46083:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"46087:2:33","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46079:3:33"},"nodeType":"YulFunctionCall","src":"46079:11:33"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"46092:19:33","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46072:6:33"},"nodeType":"YulFunctionCall","src":"46072:40:33"},"nodeType":"YulExpressionStatement","src":"46072:40:33"},{"nodeType":"YulVariableDeclaration","src":"46121:29:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46143:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"46137:5:33"},"nodeType":"YulFunctionCall","src":"46137:13:33"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"46125:8:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46185:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"46193:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46181:3:33"},"nodeType":"YulFunctionCall","src":"46181:17:33"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"46204:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"46208:2:33","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46200:3:33"},"nodeType":"YulFunctionCall","src":"46200:11:33"},{"name":"length_1","nodeType":"YulIdentifier","src":"46213:8:33"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"46159:21:33"},"nodeType":"YulFunctionCall","src":"46159:63:33"},"nodeType":"YulExpressionStatement","src":"46159:63:33"},{"nodeType":"YulAssignment","src":"46231:33:33","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"46246:2:33"},{"name":"length_1","nodeType":"YulIdentifier","src":"46250:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46242:3:33"},"nodeType":"YulFunctionCall","src":"46242:17:33"},{"kind":"number","nodeType":"YulLiteral","src":"46261:2:33","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46238:3:33"},"nodeType":"YulFunctionCall","src":"46238:26:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46231:3:33"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45841:3:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45846:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45854:6:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45865:3:33","type":""}],"src":"45484:786:33"},{"body":{"nodeType":"YulBlock","src":"46488:276:33","statements":[{"nodeType":"YulAssignment","src":"46498:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46510:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"46521:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46506:3:33"},"nodeType":"YulFunctionCall","src":"46506:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46498:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46541:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"46552:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46534:6:33"},"nodeType":"YulFunctionCall","src":"46534:25:33"},"nodeType":"YulExpressionStatement","src":"46534:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46579:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"46590:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46575:3:33"},"nodeType":"YulFunctionCall","src":"46575:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"46595:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46568:6:33"},"nodeType":"YulFunctionCall","src":"46568:34:33"},"nodeType":"YulExpressionStatement","src":"46568:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46622:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"46633:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46618:3:33"},"nodeType":"YulFunctionCall","src":"46618:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"46638:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46611:6:33"},"nodeType":"YulFunctionCall","src":"46611:34:33"},"nodeType":"YulExpressionStatement","src":"46611:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46665:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"46676:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46661:3:33"},"nodeType":"YulFunctionCall","src":"46661:18:33"},{"name":"value3","nodeType":"YulIdentifier","src":"46681:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46654:6:33"},"nodeType":"YulFunctionCall","src":"46654:34:33"},"nodeType":"YulExpressionStatement","src":"46654:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46708:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"46719:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46704:3:33"},"nodeType":"YulFunctionCall","src":"46704:19:33"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"46729:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46745:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"46750:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"46741:3:33"},"nodeType":"YulFunctionCall","src":"46741:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"46754:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46737:3:33"},"nodeType":"YulFunctionCall","src":"46737:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"46725:3:33"},"nodeType":"YulFunctionCall","src":"46725:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46697:6:33"},"nodeType":"YulFunctionCall","src":"46697:61:33"},"nodeType":"YulExpressionStatement","src":"46697:61:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46425:9:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"46436:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"46444:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"46452:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46460:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46468:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46479:4:33","type":""}],"src":"46275:489:33"},{"body":{"nodeType":"YulBlock","src":"46943:235:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46960:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"46971:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46953:6:33"},"nodeType":"YulFunctionCall","src":"46953:21:33"},"nodeType":"YulExpressionStatement","src":"46953:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46994:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47005:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46990:3:33"},"nodeType":"YulFunctionCall","src":"46990:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"47010:2:33","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46983:6:33"},"nodeType":"YulFunctionCall","src":"46983:30:33"},"nodeType":"YulExpressionStatement","src":"46983:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47033:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47044:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47029:3:33"},"nodeType":"YulFunctionCall","src":"47029:18:33"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"47049:34:33","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47022:6:33"},"nodeType":"YulFunctionCall","src":"47022:62:33"},"nodeType":"YulExpressionStatement","src":"47022:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47104:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47115:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47100:3:33"},"nodeType":"YulFunctionCall","src":"47100:18:33"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"47120:15:33","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47093:6:33"},"nodeType":"YulFunctionCall","src":"47093:43:33"},"nodeType":"YulExpressionStatement","src":"47093:43:33"},{"nodeType":"YulAssignment","src":"47145:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47157:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47168:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47153:3:33"},"nodeType":"YulFunctionCall","src":"47153:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47145:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46920:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46934:4:33","type":""}],"src":"46769:409:33"},{"body":{"nodeType":"YulBlock","src":"47357:170:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47374:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47385:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47367:6:33"},"nodeType":"YulFunctionCall","src":"47367:21:33"},"nodeType":"YulExpressionStatement","src":"47367:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47408:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47419:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47404:3:33"},"nodeType":"YulFunctionCall","src":"47404:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"47424:2:33","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47397:6:33"},"nodeType":"YulFunctionCall","src":"47397:30:33"},"nodeType":"YulExpressionStatement","src":"47397:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47447:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47458:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47443:3:33"},"nodeType":"YulFunctionCall","src":"47443:18:33"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"47463:22:33","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47436:6:33"},"nodeType":"YulFunctionCall","src":"47436:50:33"},"nodeType":"YulExpressionStatement","src":"47436:50:33"},{"nodeType":"YulAssignment","src":"47495:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47507:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47518:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47503:3:33"},"nodeType":"YulFunctionCall","src":"47503:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47495:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47334:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47348:4:33","type":""}],"src":"47183:344:33"},{"body":{"nodeType":"YulBlock","src":"47706:166:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47723:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47734:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47716:6:33"},"nodeType":"YulFunctionCall","src":"47716:21:33"},"nodeType":"YulExpressionStatement","src":"47716:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47757:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47768:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47753:3:33"},"nodeType":"YulFunctionCall","src":"47753:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"47773:2:33","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47746:6:33"},"nodeType":"YulFunctionCall","src":"47746:30:33"},"nodeType":"YulExpressionStatement","src":"47746:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47796:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47807:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47792:3:33"},"nodeType":"YulFunctionCall","src":"47792:18:33"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"47812:18:33","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47785:6:33"},"nodeType":"YulFunctionCall","src":"47785:46:33"},"nodeType":"YulExpressionStatement","src":"47785:46:33"},{"nodeType":"YulAssignment","src":"47840:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47852:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"47863:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47848:3:33"},"nodeType":"YulFunctionCall","src":"47848:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47840:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47683:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47697:4:33","type":""}],"src":"47532:340:33"},{"body":{"nodeType":"YulBlock","src":"47909:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47926:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47933:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"47938:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"47929:3:33"},"nodeType":"YulFunctionCall","src":"47929:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47919:6:33"},"nodeType":"YulFunctionCall","src":"47919:31:33"},"nodeType":"YulExpressionStatement","src":"47919:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47966:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"47969:4:33","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47959:6:33"},"nodeType":"YulFunctionCall","src":"47959:15:33"},"nodeType":"YulExpressionStatement","src":"47959:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47990:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47993:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47983:6:33"},"nodeType":"YulFunctionCall","src":"47983:15:33"},"nodeType":"YulExpressionStatement","src":"47983:15:33"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"47877:127:33"},{"body":{"nodeType":"YulBlock","src":"48257:144:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48274:3:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48283:3:33","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"48288:4:33","type":"","value":"6401"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"48279:3:33"},"nodeType":"YulFunctionCall","src":"48279:14:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48267:6:33"},"nodeType":"YulFunctionCall","src":"48267:27:33"},"nodeType":"YulExpressionStatement","src":"48267:27:33"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48314:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"48319:1:33","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48310:3:33"},"nodeType":"YulFunctionCall","src":"48310:11:33"},{"name":"value0","nodeType":"YulIdentifier","src":"48323:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48303:6:33"},"nodeType":"YulFunctionCall","src":"48303:27:33"},"nodeType":"YulExpressionStatement","src":"48303:27:33"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48350:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"48355:2:33","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48346:3:33"},"nodeType":"YulFunctionCall","src":"48346:12:33"},{"name":"value1","nodeType":"YulIdentifier","src":"48360:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48339:6:33"},"nodeType":"YulFunctionCall","src":"48339:28:33"},"nodeType":"YulExpressionStatement","src":"48339:28:33"},{"nodeType":"YulAssignment","src":"48376:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48387:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"48392:2:33","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48383:3:33"},"nodeType":"YulFunctionCall","src":"48383:12:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48376:3:33"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48225:3:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"48230:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"48238:6:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48249:3:33","type":""}],"src":"48009:392:33"},{"body":{"nodeType":"YulBlock","src":"48580:174:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48597:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"48608:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48590:6:33"},"nodeType":"YulFunctionCall","src":"48590:21:33"},"nodeType":"YulExpressionStatement","src":"48590:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48631:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"48642:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48627:3:33"},"nodeType":"YulFunctionCall","src":"48627:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"48647:2:33","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48620:6:33"},"nodeType":"YulFunctionCall","src":"48620:30:33"},"nodeType":"YulExpressionStatement","src":"48620:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48670:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"48681:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48666:3:33"},"nodeType":"YulFunctionCall","src":"48666:18:33"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"48686:26:33","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48659:6:33"},"nodeType":"YulFunctionCall","src":"48659:54:33"},"nodeType":"YulExpressionStatement","src":"48659:54:33"},{"nodeType":"YulAssignment","src":"48722:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48734:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"48745:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48730:3:33"},"nodeType":"YulFunctionCall","src":"48730:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48722:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48557:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48571:4:33","type":""}],"src":"48406:348:33"},{"body":{"nodeType":"YulBlock","src":"48933:181:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48950:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"48961:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48943:6:33"},"nodeType":"YulFunctionCall","src":"48943:21:33"},"nodeType":"YulExpressionStatement","src":"48943:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48984:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"48995:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48980:3:33"},"nodeType":"YulFunctionCall","src":"48980:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"49000:2:33","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48973:6:33"},"nodeType":"YulFunctionCall","src":"48973:30:33"},"nodeType":"YulExpressionStatement","src":"48973:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49023:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49034:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49019:3:33"},"nodeType":"YulFunctionCall","src":"49019:18:33"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"49039:33:33","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49012:6:33"},"nodeType":"YulFunctionCall","src":"49012:61:33"},"nodeType":"YulExpressionStatement","src":"49012:61:33"},{"nodeType":"YulAssignment","src":"49082:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49094:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49105:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49090:3:33"},"nodeType":"YulFunctionCall","src":"49090:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49082:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48910:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48924:4:33","type":""}],"src":"48759:355:33"},{"body":{"nodeType":"YulBlock","src":"49293:224:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49310:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49321:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49303:6:33"},"nodeType":"YulFunctionCall","src":"49303:21:33"},"nodeType":"YulExpressionStatement","src":"49303:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49344:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49355:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49340:3:33"},"nodeType":"YulFunctionCall","src":"49340:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"49360:2:33","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49333:6:33"},"nodeType":"YulFunctionCall","src":"49333:30:33"},"nodeType":"YulExpressionStatement","src":"49333:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49383:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49394:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49379:3:33"},"nodeType":"YulFunctionCall","src":"49379:18:33"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"49399:34:33","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49372:6:33"},"nodeType":"YulFunctionCall","src":"49372:62:33"},"nodeType":"YulExpressionStatement","src":"49372:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49454:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49465:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49450:3:33"},"nodeType":"YulFunctionCall","src":"49450:18:33"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"49470:4:33","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49443:6:33"},"nodeType":"YulFunctionCall","src":"49443:32:33"},"nodeType":"YulExpressionStatement","src":"49443:32:33"},{"nodeType":"YulAssignment","src":"49484:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49496:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49507:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49492:3:33"},"nodeType":"YulFunctionCall","src":"49492:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49484:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49270:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49284:4:33","type":""}],"src":"49119:398:33"},{"body":{"nodeType":"YulBlock","src":"49679:188:33","statements":[{"nodeType":"YulAssignment","src":"49689:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49701:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49712:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49697:3:33"},"nodeType":"YulFunctionCall","src":"49697:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49689:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49731:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"49742:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49724:6:33"},"nodeType":"YulFunctionCall","src":"49724:25:33"},"nodeType":"YulExpressionStatement","src":"49724:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49769:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49780:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49765:3:33"},"nodeType":"YulFunctionCall","src":"49765:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"49785:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49758:6:33"},"nodeType":"YulFunctionCall","src":"49758:34:33"},"nodeType":"YulExpressionStatement","src":"49758:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49812:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"49823:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49808:3:33"},"nodeType":"YulFunctionCall","src":"49808:18:33"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"49832:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49848:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"49853:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"49844:3:33"},"nodeType":"YulFunctionCall","src":"49844:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"49857:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49840:3:33"},"nodeType":"YulFunctionCall","src":"49840:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"49828:3:33"},"nodeType":"YulFunctionCall","src":"49828:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49801:6:33"},"nodeType":"YulFunctionCall","src":"49801:60:33"},"nodeType":"YulExpressionStatement","src":"49801:60:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49632:9:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"49643:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"49651:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"49659:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49670:4:33","type":""}],"src":"49522:345:33"},{"body":{"nodeType":"YulBlock","src":"50279:597:33","statements":[{"nodeType":"YulAssignment","src":"50289:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50301:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50312:3:33","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50297:3:33"},"nodeType":"YulFunctionCall","src":"50297:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50289:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50332:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"50343:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50325:6:33"},"nodeType":"YulFunctionCall","src":"50325:25:33"},"nodeType":"YulExpressionStatement","src":"50325:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50370:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50381:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50366:3:33"},"nodeType":"YulFunctionCall","src":"50366:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"50386:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50359:6:33"},"nodeType":"YulFunctionCall","src":"50359:34:33"},"nodeType":"YulExpressionStatement","src":"50359:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50413:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50424:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50409:3:33"},"nodeType":"YulFunctionCall","src":"50409:18:33"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"50433:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50449:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"50454:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"50445:3:33"},"nodeType":"YulFunctionCall","src":"50445:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"50458:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50441:3:33"},"nodeType":"YulFunctionCall","src":"50441:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"50429:3:33"},"nodeType":"YulFunctionCall","src":"50429:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50402:6:33"},"nodeType":"YulFunctionCall","src":"50402:60:33"},"nodeType":"YulExpressionStatement","src":"50402:60:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50482:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50493:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50478:3:33"},"nodeType":"YulFunctionCall","src":"50478:18:33"},{"name":"value3","nodeType":"YulIdentifier","src":"50498:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50471:6:33"},"nodeType":"YulFunctionCall","src":"50471:34:33"},"nodeType":"YulExpressionStatement","src":"50471:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50525:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50536:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50521:3:33"},"nodeType":"YulFunctionCall","src":"50521:19:33"},{"name":"value4","nodeType":"YulIdentifier","src":"50542:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50514:6:33"},"nodeType":"YulFunctionCall","src":"50514:35:33"},"nodeType":"YulExpressionStatement","src":"50514:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50569:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50580:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50565:3:33"},"nodeType":"YulFunctionCall","src":"50565:19:33"},{"name":"value5","nodeType":"YulIdentifier","src":"50586:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50558:6:33"},"nodeType":"YulFunctionCall","src":"50558:35:33"},"nodeType":"YulExpressionStatement","src":"50558:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50613:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50624:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50609:3:33"},"nodeType":"YulFunctionCall","src":"50609:19:33"},{"name":"value6","nodeType":"YulIdentifier","src":"50630:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50602:6:33"},"nodeType":"YulFunctionCall","src":"50602:35:33"},"nodeType":"YulExpressionStatement","src":"50602:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50657:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50668:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50653:3:33"},"nodeType":"YulFunctionCall","src":"50653:19:33"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"50678:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"50686:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"50674:3:33"},"nodeType":"YulFunctionCall","src":"50674:17:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50646:6:33"},"nodeType":"YulFunctionCall","src":"50646:46:33"},"nodeType":"YulExpressionStatement","src":"50646:46:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50712:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50723:3:33","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50708:3:33"},"nodeType":"YulFunctionCall","src":"50708:19:33"},{"name":"value8","nodeType":"YulIdentifier","src":"50729:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50701:6:33"},"nodeType":"YulFunctionCall","src":"50701:35:33"},"nodeType":"YulExpressionStatement","src":"50701:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50756:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50767:3:33","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50752:3:33"},"nodeType":"YulFunctionCall","src":"50752:19:33"},{"name":"value9","nodeType":"YulIdentifier","src":"50773:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50745:6:33"},"nodeType":"YulFunctionCall","src":"50745:35:33"},"nodeType":"YulExpressionStatement","src":"50745:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50800:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50811:3:33","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50796:3:33"},"nodeType":"YulFunctionCall","src":"50796:19:33"},{"name":"value10","nodeType":"YulIdentifier","src":"50817:7:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50789:6:33"},"nodeType":"YulFunctionCall","src":"50789:36:33"},"nodeType":"YulExpressionStatement","src":"50789:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50845:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"50856:3:33","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50841:3:33"},"nodeType":"YulFunctionCall","src":"50841:19:33"},{"name":"value11","nodeType":"YulIdentifier","src":"50862:7:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50834:6:33"},"nodeType":"YulFunctionCall","src":"50834:36:33"},"nodeType":"YulExpressionStatement","src":"50834:36:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_address_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_bytes32_t_address_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50158:9:33","type":""},{"name":"value11","nodeType":"YulTypedName","src":"50169:7:33","type":""},{"name":"value10","nodeType":"YulTypedName","src":"50178:7:33","type":""},{"name":"value9","nodeType":"YulTypedName","src":"50187:6:33","type":""},{"name":"value8","nodeType":"YulTypedName","src":"50195:6:33","type":""},{"name":"value7","nodeType":"YulTypedName","src":"50203:6:33","type":""},{"name":"value6","nodeType":"YulTypedName","src":"50211:6:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"50219:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"50227:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"50235:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"50243:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"50251:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"50259:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50270:4:33","type":""}],"src":"49872:1004:33"},{"body":{"nodeType":"YulBlock","src":"51038:162:33","statements":[{"nodeType":"YulAssignment","src":"51048:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51060:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51071:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51056:3:33"},"nodeType":"YulFunctionCall","src":"51056:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51048:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51090:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"51101:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51083:6:33"},"nodeType":"YulFunctionCall","src":"51083:25:33"},"nodeType":"YulExpressionStatement","src":"51083:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51128:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51139:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51124:3:33"},"nodeType":"YulFunctionCall","src":"51124:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"51144:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51117:6:33"},"nodeType":"YulFunctionCall","src":"51117:34:33"},"nodeType":"YulExpressionStatement","src":"51117:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51171:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51182:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51167:3:33"},"nodeType":"YulFunctionCall","src":"51167:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"51187:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51160:6:33"},"nodeType":"YulFunctionCall","src":"51160:34:33"},"nodeType":"YulExpressionStatement","src":"51160:34:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50991:9:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"51002:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"51010:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"51018:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51029:4:33","type":""}],"src":"50881:319:33"},{"body":{"nodeType":"YulBlock","src":"51379:232:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51396:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51407:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51389:6:33"},"nodeType":"YulFunctionCall","src":"51389:21:33"},"nodeType":"YulExpressionStatement","src":"51389:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51430:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51441:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51426:3:33"},"nodeType":"YulFunctionCall","src":"51426:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"51446:2:33","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51419:6:33"},"nodeType":"YulFunctionCall","src":"51419:30:33"},"nodeType":"YulExpressionStatement","src":"51419:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51469:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51480:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51465:3:33"},"nodeType":"YulFunctionCall","src":"51465:18:33"},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768","kind":"string","nodeType":"YulLiteral","src":"51485:34:33","type":"","value":"ERC20Pausable: token transfer wh"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51458:6:33"},"nodeType":"YulFunctionCall","src":"51458:62:33"},"nodeType":"YulExpressionStatement","src":"51458:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51540:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51551:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51536:3:33"},"nodeType":"YulFunctionCall","src":"51536:18:33"},{"hexValue":"696c6520706175736564","kind":"string","nodeType":"YulLiteral","src":"51556:12:33","type":"","value":"ile paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51529:6:33"},"nodeType":"YulFunctionCall","src":"51529:40:33"},"nodeType":"YulExpressionStatement","src":"51529:40:33"},{"nodeType":"YulAssignment","src":"51578:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51590:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51601:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51586:3:33"},"nodeType":"YulFunctionCall","src":"51586:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51578:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51356:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51370:4:33","type":""}],"src":"51205:406:33"},{"body":{"nodeType":"YulBlock","src":"51663:89:33","statements":[{"body":{"nodeType":"YulBlock","src":"51690:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"51692:16:33"},"nodeType":"YulFunctionCall","src":"51692:18:33"},"nodeType":"YulExpressionStatement","src":"51692:18:33"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"51683:5:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"51676:6:33"},"nodeType":"YulFunctionCall","src":"51676:13:33"},"nodeType":"YulIf","src":"51673:39:33"},{"nodeType":"YulAssignment","src":"51721:25:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"51732:5:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"51743:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"51739:3:33"},"nodeType":"YulFunctionCall","src":"51739:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51728:3:33"},"nodeType":"YulFunctionCall","src":"51728:18:33"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"51721:3:33"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"51645:5:33","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"51655:3:33","type":""}],"src":"51616:136:33"},{"body":{"nodeType":"YulBlock","src":"51931:182:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51948:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51959:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51941:6:33"},"nodeType":"YulFunctionCall","src":"51941:21:33"},"nodeType":"YulExpressionStatement","src":"51941:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51982:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"51993:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51978:3:33"},"nodeType":"YulFunctionCall","src":"51978:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"51998:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51971:6:33"},"nodeType":"YulFunctionCall","src":"51971:30:33"},"nodeType":"YulExpressionStatement","src":"51971:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52021:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"52032:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52017:3:33"},"nodeType":"YulFunctionCall","src":"52017:18:33"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"52037:34:33","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52010:6:33"},"nodeType":"YulFunctionCall","src":"52010:62:33"},"nodeType":"YulExpressionStatement","src":"52010:62:33"},{"nodeType":"YulAssignment","src":"52081:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52093:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"52104:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52089:3:33"},"nodeType":"YulFunctionCall","src":"52089:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52081:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51908:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51922:4:33","type":""}],"src":"51757:356:33"},{"body":{"nodeType":"YulBlock","src":"52150:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52167:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52174:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"52179:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"52170:3:33"},"nodeType":"YulFunctionCall","src":"52170:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52160:6:33"},"nodeType":"YulFunctionCall","src":"52160:31:33"},"nodeType":"YulExpressionStatement","src":"52160:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52207:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"52210:4:33","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52200:6:33"},"nodeType":"YulFunctionCall","src":"52200:15:33"},"nodeType":"YulExpressionStatement","src":"52200:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52231:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"52234:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"52224:6:33"},"nodeType":"YulFunctionCall","src":"52224:15:33"},"nodeType":"YulExpressionStatement","src":"52224:15:33"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"52118:127:33"},{"body":{"nodeType":"YulBlock","src":"52424:228:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52441:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"52452:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52434:6:33"},"nodeType":"YulFunctionCall","src":"52434:21:33"},"nodeType":"YulExpressionStatement","src":"52434:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52475:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"52486:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52471:3:33"},"nodeType":"YulFunctionCall","src":"52471:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"52491:2:33","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52464:6:33"},"nodeType":"YulFunctionCall","src":"52464:30:33"},"nodeType":"YulExpressionStatement","src":"52464:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52514:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"52525:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52510:3:33"},"nodeType":"YulFunctionCall","src":"52510:18:33"},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f","kind":"string","nodeType":"YulLiteral","src":"52530:34:33","type":"","value":"Address: delegate call to non-co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52503:6:33"},"nodeType":"YulFunctionCall","src":"52503:62:33"},"nodeType":"YulExpressionStatement","src":"52503:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52585:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"52596:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52581:3:33"},"nodeType":"YulFunctionCall","src":"52581:18:33"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"52601:8:33","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52574:6:33"},"nodeType":"YulFunctionCall","src":"52574:36:33"},"nodeType":"YulExpressionStatement","src":"52574:36:33"},{"nodeType":"YulAssignment","src":"52619:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52631:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"52642:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52627:3:33"},"nodeType":"YulFunctionCall","src":"52627:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52619:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52401:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52415:4:33","type":""}],"src":"52250:402:33"},{"body":{"nodeType":"YulBlock","src":"52794:137:33","statements":[{"nodeType":"YulVariableDeclaration","src":"52804:27:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"52824:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"52818:5:33"},"nodeType":"YulFunctionCall","src":"52818:13:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"52808:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"52866:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"52874:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52862:3:33"},"nodeType":"YulFunctionCall","src":"52862:17:33"},{"name":"pos","nodeType":"YulIdentifier","src":"52881:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"52886:6:33"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"52840:21:33"},"nodeType":"YulFunctionCall","src":"52840:53:33"},"nodeType":"YulExpressionStatement","src":"52840:53:33"},{"nodeType":"YulAssignment","src":"52902:23:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52913:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"52918:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52909:3:33"},"nodeType":"YulFunctionCall","src":"52909:16:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52902:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52770:3:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"52775:6:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52786:3:33","type":""}],"src":"52657:274:33"},{"body":{"nodeType":"YulBlock","src":"53117:217:33","statements":[{"nodeType":"YulAssignment","src":"53127:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53139:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"53150:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53135:3:33"},"nodeType":"YulFunctionCall","src":"53135:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53127:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53170:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"53181:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53163:6:33"},"nodeType":"YulFunctionCall","src":"53163:25:33"},"nodeType":"YulExpressionStatement","src":"53163:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53208:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"53219:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53204:3:33"},"nodeType":"YulFunctionCall","src":"53204:18:33"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"53228:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"53236:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"53224:3:33"},"nodeType":"YulFunctionCall","src":"53224:17:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53197:6:33"},"nodeType":"YulFunctionCall","src":"53197:45:33"},"nodeType":"YulExpressionStatement","src":"53197:45:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53262:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"53273:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53258:3:33"},"nodeType":"YulFunctionCall","src":"53258:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"53278:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53251:6:33"},"nodeType":"YulFunctionCall","src":"53251:34:33"},"nodeType":"YulExpressionStatement","src":"53251:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53305:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"53316:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53301:3:33"},"nodeType":"YulFunctionCall","src":"53301:18:33"},{"name":"value3","nodeType":"YulIdentifier","src":"53321:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53294:6:33"},"nodeType":"YulFunctionCall","src":"53294:34:33"},"nodeType":"YulExpressionStatement","src":"53294:34:33"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53062:9:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"53073:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"53081:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"53089:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"53097:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53108:4:33","type":""}],"src":"52936:398:33"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_6608() -> memPtr\n    {\n        memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n    }\n    function allocate_memory_6609() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0160)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0100)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_struct_Issuer(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        value := allocate_memory_6608()\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        mstore(value, abi_decode_string(add(headStart, offset), end))\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        mstore(add(value, 32), value_1)\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_struct_CredentialSubject(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x0160) { revert(0, 0) }\n        value := allocate_memory_6609()\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        mstore(value, abi_decode_string(add(headStart, offset), end))\n        mstore(add(value, 32), abi_decode_address(add(headStart, 32)))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_string(add(headStart, offset_1), end))\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_string(add(headStart, offset_2), end))\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_string(add(headStart, offset_3), end))\n        let offset_4 := calldataload(add(headStart, 160))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 160), abi_decode_string(add(headStart, offset_4), end))\n        mstore(add(value, 192), abi_decode_uint8(add(headStart, 192)))\n        mstore(add(value, 224), calldataload(add(headStart, 224)))\n        let _2 := 256\n        mstore(add(value, _2), calldataload(add(headStart, _2)))\n        let _3 := 288\n        mstore(add(value, _3), calldataload(add(headStart, _3)))\n        let _4 := 320\n        mstore(add(value, _4), calldataload(add(headStart, _4)))\n    }\n    function abi_decode_struct_CredentialSchema(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        value := allocate_memory_6608()\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        mstore(value, abi_decode_string(add(headStart, offset), end))\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string(add(headStart, offset_1), end))\n    }\n    function abi_decode_struct_VerifiableCredential(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x0100) { revert(0, 0) }\n        value := allocate_memory()\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        mstore(value, abi_decode_string(add(headStart, offset), end))\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string(add(headStart, offset_1), end))\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_string(add(headStart, offset_2), end))\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_struct_Issuer(add(headStart, offset_3), end))\n        let offset_4 := calldataload(add(headStart, 128))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_struct_CredentialSubject(add(headStart, offset_4), end))\n        let offset_5 := calldataload(add(headStart, 160))\n        if gt(offset_5, _1) { revert(0, 0) }\n        mstore(add(value, 160), abi_decode_struct_CredentialSchema(add(headStart, offset_5), end))\n        let offset_6 := calldataload(add(headStart, 192))\n        if gt(offset_6, _1) { revert(0, 0) }\n        mstore(add(value, 192), abi_decode_string(add(headStart, offset_6), end))\n        let offset_7 := calldataload(add(headStart, 224))\n        if gt(offset_7, _1) { revert(0, 0) }\n        mstore(add(value, 224), abi_decode_string(add(headStart, offset_7), end))\n    }\n    function abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptrt_struct$_VerifiableCredential_$7312_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_struct_VerifiableCredential(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_struct_VerifiableCredential(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_Status_$5661_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        if iszero(lt(value0, 6))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_struct_VerifiableCredential(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_struct_VerifiableCredential(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n        let value := calldataload(add(headStart, 256))\n        validator_revert_address(value)\n        value8 := value\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_struct$_VerifiableCredential_$7312_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_struct_VerifiableCredential(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_65e8e0569f667d83ff560a291a95fc03ec0722346b0fbfc084e161f7c9261e72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), 0x5b2256657269666961626c6543726564656e7469616c222c2244697370757465)\n        mstore(add(headStart, 96), shl(160, 0x43726564656e7469616c225d))\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ac3e225f52da57937dca4729ff7a9b2aef9f1e1bb77e4624f55be8081627dee6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"KRBToken: dispute claim type mus\")\n        mstore(add(headStart, 96), \"t be DisputeCredential\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6940c565f3d71bd3368fee296cb1e459b0065bdd2e5335e6830f498d1bc2458b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"KRBToken: issuer must be the Gov\")\n        mstore(add(headStart, 96), \"ern address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a6e9e56cdc54e2c4c3fa43770fa86f5b2554ff1e5fa1184beda9231a57c0dc0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"KRBToken: disputeVC credentialSu\")\n        mstore(add(headStart, 96), \"bject id differes from VC id\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68bf8498d45c2faa8674ac2e5b474e7bcc0195dc28826c452a373a323748a8ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"KRBToken: VC state already dispu\")\n        mstore(add(headStart, 96), \"ted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_struct_Issuer(value, pos) -> end\n    {\n        let memberValue0 := mload(value)\n        mstore(pos, 0x40)\n        let tail := abi_encode_string(memberValue0, add(pos, 0x40))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), sub(shl(160, 1), 1)))\n        end := tail\n    }\n    function abi_encode_struct_CredentialSubject(value, pos) -> end\n    {\n        let _1 := 0x0160\n        let memberValue0 := mload(value)\n        mstore(pos, _1)\n        let tail := abi_encode_string(memberValue0, add(pos, _1))\n        let memberValue0_1 := mload(add(value, 0x20))\n        abi_encode_address(memberValue0_1, add(pos, 0x20))\n        let memberValue0_2 := mload(add(value, 0x40))\n        mstore(add(pos, 0x40), sub(tail, pos))\n        let tail_1 := abi_encode_string(memberValue0_2, tail)\n        let memberValue0_3 := mload(add(value, 0x60))\n        mstore(add(pos, 0x60), sub(tail_1, pos))\n        let tail_2 := abi_encode_string(memberValue0_3, tail_1)\n        let memberValue0_4 := mload(add(value, 0x80))\n        mstore(add(pos, 0x80), sub(tail_2, pos))\n        let tail_3 := abi_encode_string(memberValue0_4, tail_2)\n        let memberValue0_5 := mload(add(value, 0xa0))\n        mstore(add(pos, 0xa0), sub(tail_3, pos))\n        let tail_4 := abi_encode_string(memberValue0_5, tail_3)\n        let memberValue0_6 := mload(add(value, 0xc0))\n        abi_encode_uint8(memberValue0_6, add(pos, 0xc0))\n        mstore(add(pos, 0xe0), mload(add(value, 0xe0)))\n        let _2 := 0x0100\n        mstore(add(pos, _2), mload(add(value, _2)))\n        let _3 := 0x0120\n        mstore(add(pos, _3), mload(add(value, _3)))\n        let _4 := 0x0140\n        mstore(add(pos, _4), mload(add(value, _4)))\n        end := tail_4\n    }\n    function abi_encode_struct_CredentialSchema(value, pos) -> end\n    {\n        let memberValue0 := mload(value)\n        mstore(pos, 0x40)\n        let tail := abi_encode_string(memberValue0, add(pos, 0x40))\n        let memberValue0_1 := mload(add(value, 0x20))\n        mstore(add(pos, 0x20), sub(tail, pos))\n        end := abi_encode_string(memberValue0_1, tail)\n    }\n    function abi_encode_tuple_t_uint256_t_struct$_VerifiableCredential_$7312_memory_ptr__to_t_uint256_t_struct$_VerifiableCredential_$7312_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        let memberValue0 := mload(value1)\n        let _1 := 0x0100\n        mstore(add(headStart, 64), _1)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 320))\n        let memberValue0_1 := mload(add(value1, 32))\n        let _2 := not(63)\n        mstore(add(headStart, 96), add(sub(tail_1, headStart), _2))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        let memberValue0_2 := mload(add(value1, 64))\n        mstore(add(headStart, 128), add(sub(tail_2, headStart), _2))\n        let tail_3 := abi_encode_string(memberValue0_2, tail_2)\n        let memberValue0_3 := mload(add(value1, 96))\n        mstore(add(headStart, 160), add(sub(tail_3, headStart), _2))\n        let tail_4 := abi_encode_struct_Issuer(memberValue0_3, tail_3)\n        let memberValue0_4 := mload(add(value1, 128))\n        mstore(add(headStart, 192), add(sub(tail_4, headStart), _2))\n        let tail_5 := abi_encode_struct_CredentialSubject(memberValue0_4, tail_4)\n        let memberValue0_5 := mload(add(value1, 160))\n        mstore(add(headStart, 224), add(sub(tail_5, headStart), _2))\n        let tail_6 := abi_encode_struct_CredentialSchema(memberValue0_5, tail_5)\n        let memberValue0_6 := mload(add(value1, 192))\n        mstore(add(headStart, _1), add(sub(tail_6, headStart), _2))\n        let tail_7 := abi_encode_string(memberValue0_6, tail_6)\n        let memberValue0_7 := mload(add(value1, 224))\n        mstore(add(headStart, 288), add(sub(tail_7, headStart), _2))\n        tail := abi_encode_string(memberValue0_7, tail_7)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_991995f99bb432f025de88f8f62466096976af05cf274093f61a137b02eab584__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"KRBToken: sender must be the cre\")\n        mstore(add(headStart, 96), \"dentialSubject address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_59915efbd9b9ea0883ab9a80b80cf8e069efd5c55ae58df7a4d817ffeb895d99__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"KRBToken: state is not Issued\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_9c9622ad52091e2b95a9f53802ec9bc638a7514fa414a842365027a9f4b3d0f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"KRBToken: bad percentage value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_edbe082f9bfd44b24100253331b8b5648999939251a9df0a754ae195eec06fdf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"KRBToken: newMaxPrice must be gr\")\n        mstore(add(headStart, 96), \"eater or equal than newMinPrice\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_83110a80c054bcc7e4c0b30d1981dbd14d0634878b0d0ea47333f50396778953__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"KRBToken: newMaxStake must be gr\")\n        mstore(add(headStart, 96), \"eater or equal than newMinStake\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_ea2f19a4ac42eec14f65d7d4dcad7015f4efe84177cc6011a1dccdc6b71a0b46__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"KRBToken: invalid signature addr\")\n        mstore(add(headStart, 96), \"ess(0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7e1977cacd35f2d9e9099ad9af0b7986aef7a028a39d80f79d502a11af996b22__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"KRBToken: recovered address diff\")\n        mstore(add(headStart, 96), \"ers from expected signer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1882f1b1fc242a9895b5ba6cf731f897c919c3aa02c49eabd839b5af5f912a9e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"KRBToken: sender must be the iss\")\n        mstore(add(headStart, 96), \"uer address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_19fbd3859058090876c7379a139a68075260c19b49b652a8115d9a2284a56bb2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"KRBToken: msg.value must be grea\")\n        mstore(add(headStart, 96), \"ter than minPriceToIssue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_80adf7fdd8ed453748d6e9747b1b1855d9e9219e68346041dc4ac43505e97331__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"KRBToken: msg.value must be less\")\n        mstore(add(headStart, 96), \" than maxPriceToIssue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_008d3f233664fb495b27bd80e2a167c986f5e4d1a83de1124a0fbd174d10a58b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"KRBToken: msg.value does not mat\")\n        mstore(add(headStart, 96), \"ch credentialSubject.price\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_11adc1742b89d376db148ee1423253ca8ce5bccf18c29152e79d450916181b73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"KRBToken: Verifiable Credential \")\n        mstore(add(headStart, 96), \"hash already been issued\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7c09dfbc593af863f0f68d921742e69677dba2b17f7d0fef75c5f7d53e2a63fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"KRBToken: issuer does not have e\")\n        mstore(add(headStart, 96), \"nough balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_61c878cc2073e2c17eaedc304e8e908cfabe225be81b30fcebd2592845affef1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"KRBToken: stake must be between \")\n        mstore(add(headStart, 96), \"minStakeToIssue and maxStakeToIs\")\n        mstore(add(headStart, 128), \"sue\")\n        tail := add(headStart, 160)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ca4c381f2cae1bcc5b366609fb5b26a5f2d331bb0bb261d709964b6edd5b203e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"KRBToken: must have govern role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d97f95a245ba79f42a9065910fcf779e5b39b905459cc7e72c471a31d853943__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"KRBToken: bad issuer address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_332c2939fb313dc20fa48e12a4dc181352b759b37e44ec55d8d7e17b0f95cc4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"KRBToken: bad credentialSubject \")\n        mstore(add(headStart, 96), \"address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9aa176bbd438000177acf769a48d80b095df0cb0035424d15e7d7154b35a89e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"KRBToken: bad trust percentage v\")\n        mstore(add(headStart, 96), \"alue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7275d7417746227075f624f85a543397112ae5996ca94abb88e8f8c1a78aafe5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"KRBToken: issuer DID is the same\")\n        mstore(add(headStart, 96), \" as credentialSubject\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c3c30a0cfcd14b95a736c6e8404a5219d4f4f37173a5b67492adc4f42d450088__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"KRBToken: issuer address is the \")\n        mstore(add(headStart, 96), \"same as credentialSubject\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d3e2e532f35077290d5b88b7db3097bb836039268a2ba2d6858c6508237a35cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"KRBToken: VC issuanceDate is in \")\n        mstore(add(headStart, 96), \"the future\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3603672c3b08973ae817b0488ed6115eb7a95a5d250db50f67ba4f72e13d7a41__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"KRBToken: VC has already expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_34550b29c2a6cea2c45d9052485cd5d267739ac50461d2acec8e216f6ec8e019__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"KRBToken: burn stake from the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_bytes32__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_6ab6f67ab3e5c9d3e3ad1ce6e59c6145b1dca09929899c966d2f1683f7246d26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"KRBToken: sender does not have e\")\n        mstore(add(headStart, 96), \"nough balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_91ee1d72c262cf54d2263e53ca95d17b8447785204e2fcf5c35c3b85dce47ce6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"KRBToken: recipient does not hav\")\n        mstore(add(headStart, 96), \"e enough balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_address_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_bytes32_t_address_t_bytes32_t_bytes32_t_bytes32_t_bytes32_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 384)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), and(value7, 0xff))\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1299":[{"length":32,"start":4331},{"length":32,"start":4395},{"length":32,"start":4629},{"length":32,"start":4693},{"length":32,"start":4813}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2CC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DA0A877 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xAF4E720D GT PUSH2 0xD2 JUMPI DUP1 PUSH4 0xAF4E720D EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0xB25DD4FC EQ PUSH2 0x866 JUMPI DUP1 PUSH4 0xBCD68993 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xC0D506D6 EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x8C6 JUMPI DUP1 PUSH4 0xCA2A8CFC EQ PUSH2 0x8E6 JUMPI DUP1 PUSH4 0xCE556F9D EQ PUSH2 0x906 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x926 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xDE5785D5 EQ PUSH2 0x966 JUMPI DUP1 PUSH4 0xDE9D2B1C EQ PUSH2 0x97D JUMPI DUP1 PUSH4 0xDEC9CAFE EQ PUSH2 0x994 JUMPI DUP1 PUSH4 0xE2982C21 EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xE5A2B28E EQ PUSH2 0x9C7 JUMPI DUP1 PUSH4 0xEE2B1B4D EQ PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0x888BB7B5 EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x8993A3E5 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x717 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0x9C70287C EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0xA6487C53 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xA775AABD EQ PUSH2 0x7F8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x80F JUMPI DUP1 PUSH4 0xAD3B1B47 EQ PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0x231 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x38B7F446 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x42623360 EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x5893253C EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0x716F4D90 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x7A0D798 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x7A77292 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x2A401E81 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x31B3EB94 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x47C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x460C JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x468E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x295 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x290 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCB SLOAD PUSH2 0x33F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x46F2 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4733 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BB0 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C13 JUMP JUMPDEST PUSH2 0xFB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x1043 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C13 JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0x10E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x11A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x11D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x52E CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x11E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x4733 JUMP JUMPDEST PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x429 PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C60 JUMP JUMPDEST PUSH2 0x120A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x12C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH2 0x5ED CALLDATASIZE PUSH1 0x4 PUSH2 0x4733 JUMP JUMPDEST PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP3 SWAP2 SWAP1 PUSH2 0x4CBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x2F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x64F CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x66F CALLDATASIZE PUSH1 0x4 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x68F CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x1532 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E SLOAD PUSH2 0x6B5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x4D40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x154E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x6F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D54 JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x712 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D90 JUMP JUMPDEST PUSH2 0x1624 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH2 0x732 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E04 JUMP JUMPDEST PUSH2 0x1798 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x752 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C13 JUMP JUMPDEST PUSH2 0x17B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x17DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x787 CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x17EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x296 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x7D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x17FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x7F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E26 JUMP JUMPDEST PUSH2 0x188D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x293 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x82A CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x19AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x291 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x881 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EAD JUMP JUMPDEST PUSH2 0x1A0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x8A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D54 JUMP JUMPDEST PUSH2 0x1B0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x8C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D54 JUMP JUMPDEST PUSH2 0x1B17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x8E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4733 JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x901 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x1CF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x921 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x1DD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x941 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C13 JUMP JUMPDEST PUSH2 0x1F2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x961 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EFB JUMP JUMPDEST PUSH2 0x1F50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x297 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x294 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x9A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x1F7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x9C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C43 JUMP JUMPDEST PUSH2 0x24FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x28F SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x292 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA1A JUMPI POP PUSH2 0xA1A DUP3 PUSH2 0x2572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCC DUP1 SLOAD PUSH2 0xA2F SWAP1 PUSH2 0x4F29 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x4F29 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xABD PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0x25C9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xADF PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xAEC DUP6 DUP3 DUP6 PUSH2 0x26ED JUMP JUMPDEST PUSH2 0xAF7 DUP6 DUP6 DUP6 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0E PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB64 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x5B2256657269666961626C6543726564656E7469616C222C2244697370757465 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x43726564656E7469616C225D PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206469737075746520636C61696D2074797065206D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D08189948111A5CDC1D5D1950DC9959195B9D1A585B PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1E PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A20697373756572206D7573742062652074686520476F76 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726E2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x80 DUP6 ADD MLOAD MLOAD SWAP1 SWAP3 PUSH2 0xCDA SWAP3 ADD PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206469737075746556432063726564656E7469616C5375 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x626A6563742069642064696666657265732066726F6D20564320696400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0xD6C DUP3 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD77 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD9E JUMPI PUSH2 0xD9E PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO JUMPDEST PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A20564320737461746520616C7265616479206469737075 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 DUP5 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR DUP2 SSTORE PUSH1 0x1 ADD DUP4 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x7A5B7DE3BC82F24E3A2EC84FDD3D22A2611ADFF3DF42E2917470DC204F0EB0A4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xB4323E298F3A82D5CF939B5E4ED408526ED5F8EBE42169C54EC2B667A85E1BC9 SWAP1 PUSH2 0xEDC SWAP1 DUP4 SWAP1 DUP8 SWAP1 PUSH2 0x50A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0xEF2 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0xF05 SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH2 0xF19 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF30 DUP3 DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0xF44 DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0xF56 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF64 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF90 DUP3 DUP10 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA4 DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2E96 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFCE DUP2 PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0xFD8 DUP4 DUP4 PUSH2 0x2F62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x229 SLOAD PUSH1 0x40 MLOAD PUSH4 0x51CFF8D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x51CFF8D9 SWAP1 PUSH2 0x100E SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x103C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104D PUSH2 0x2F84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x105A PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x3001 JUMP JUMPDEST POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x1129 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x52CD JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x115B PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x118A DUP2 PUSH2 0x303F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11A6 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x3047 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11B4 PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0x11C6 DUP6 DUP10 PUSH2 0x1F50 JUMP JUMPDEST PUSH2 0x11D0 SWAP2 SWAP1 PUSH2 0x5365 JUMP JUMPDEST PUSH2 0x25C9 JUMP JUMPDEST PUSH2 0x11DD PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x11E5 PUSH2 0x31B2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11EF PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x11A6 PUSH2 0x1204 PUSH2 0x25A7 JUMP JUMPDEST DUP3 PUSH2 0x2D68 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x52CD JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1285 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x12B4 DUP3 PUSH2 0x303F JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH1 0x1 PUSH2 0x3047 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x135B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CF9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x28E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST DUP1 PUSH2 0x13E5 JUMPI POP PUSH2 0x13C8 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x537D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140C DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1434 JUMPI PUSH2 0x1434 PUSH2 0x4CA5 JUMP JUMPDEST EQ PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x53D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x9033E030B285E24D878A56C0809910A4FBC2C14BC876C3060BFDEFC4F21EA68C SWAP1 PUSH2 0x149A SWAP1 DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x540A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x14B0 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14DC DUP3 DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0x14F0 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x1502 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x1514 DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0x1526 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1544 DUP3 PUSH2 0x153E PUSH2 0x25A7 JUMP JUMPDEST DUP4 PUSH2 0x26ED JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0x1556 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x11E5 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x156A DUP4 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x140 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x1614 JUMPI PUSH1 0x0 PUSH2 0x158B PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x159E SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH2 0x15B2 DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x15C4 DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2E96 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 OR SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0xF80DBAEA4785589E52984CA36A31DE106ADC77759539A5C7D92883BF49692FE9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP PUSH1 0x80 ADD MLOAD PUSH2 0x140 ADD MLOAD TIMESTAMP GT SWAP1 JUMP JUMPDEST PUSH2 0x162C PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x28F DUP10 SWAP1 SSTORE PUSH2 0x290 DUP9 SWAP1 SSTORE PUSH2 0x291 DUP8 SWAP1 SSTORE PUSH2 0x296 DUP7 SWAP1 SSTORE DUP5 DUP5 LT ISZERO PUSH2 0x16BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206E65774D61785072696365206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6561746572206F7220657175616C207468616E206E65774D696E507269636500 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x292 DUP6 SWAP1 SSTORE PUSH2 0x293 DUP5 SWAP1 SSTORE DUP3 DUP3 LT ISZERO PUSH2 0x173C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206E65774D61785374616B65206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6561746572206F7220657175616C207468616E206E65774D696E5374616B6500 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x294 DUP4 SWAP1 SSTORE PUSH2 0x295 DUP3 SWAP1 SSTORE PUSH2 0x28E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF2E795D4A33AE9A0D3282888375B8AE781EA4DE1CBF101AC96150AA95CCFF0B4 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xAFD SWAP1 DUP4 PUSH2 0x3244 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCD DUP1 SLOAD PUSH2 0xA2F SWAP1 PUSH2 0x4F29 JUMP JUMPDEST PUSH2 0x17F2 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1807 PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1815 DUP3 DUP7 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x1882 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x25C9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x18AD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x18CE JUMPI POP PUSH2 0x18BC ADDRESS PUSH2 0x3250 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x18CE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1954 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x195F DUP5 DUP5 DUP5 PUSH2 0x325F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19B6 PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0x2761 JUMP JUMPDEST PUSH2 0x19CB PUSH2 0x32ED JUMP JUMPDEST PUSH2 0x19D3 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x297 SLOAD DUP2 GT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x297 SLOAD PUSH2 0x19F1 SWAP1 DUP3 PUSH2 0x3349 JUMP JUMPDEST PUSH2 0x297 SSTORE PUSH2 0x19FF DUP3 DUP3 PUSH2 0x3355 JUMP JUMPDEST PUSH2 0x10DC PUSH1 0x1 PUSH2 0x25C SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A15 DUP4 PUSH2 0x33C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A23 DUP3 DUP5 PUSH2 0x3414 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A20696E76616C6964207369676E61747572652061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x657373283029 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x103C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A207265636F766572656420616464726573732064696666 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x32B93990333937B69032BC3832B1BA32B21039B4B3B732B9 PUSH1 0x41 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP3 PUSH2 0x3438 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1B24 DUP4 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1B4F JUMPI PUSH2 0x1B4F PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1B78 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x4E6F6E65 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1B8C JUMPI PUSH2 0x1B8C PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1BB7 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x125CDCDD5959 PUSH1 0xD2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1BCB JUMPI PUSH2 0x1BCB PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1BF8 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x111A5CDC1D5D1959 PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1C0C JUMPI PUSH2 0x1C0C PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1C38 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x14995D9BDAD959 PUSH1 0xCA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1C4C JUMPI PUSH2 0x1C4C PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1C7A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x14DD5CDC195B991959 PUSH1 0xBA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1C8E JUMPI PUSH2 0x1C8E PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x1CBA JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x115E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x22B93937B9 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xA1A SWAP1 PUSH2 0x352C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFF PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5423 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D42 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1D6A JUMPI PUSH2 0x1D6A PUSH2 0x4CA5 JUMP JUMPDEST EQ PUSH2 0x1D87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x53D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE MLOAD PUSH32 0x9E41D39F5FBE80F71BC2F0A44E937A0EE3DFF62DD07F191A8A461A339891A03 SWAP1 PUSH2 0x149A SWAP1 DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x540A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDD PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5423 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E20 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1E48 JUMPI PUSH2 0x1E48 PUSH2 0x4CA5 JUMP JUMPDEST EQ PUSH2 0x1E65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x53D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE MLOAD PUSH32 0x78A24D70A605E5984BDF7233D4F5E3F53C63BDA44F9CAA9803B2CCABAE033643 SWAP1 PUSH2 0x1EB1 SWAP1 DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x540A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x1EC7 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x1EDA SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EF3 DUP3 DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F07 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x1F19 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x1526 DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1F46 DUP2 PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0xFD8 DUP4 DUP4 PUSH2 0x3001 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F97 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST DUP1 PUSH2 0x1FC2 JUMPI POP PUSH2 0x1FA5 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1FDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x537D JUMP JUMPDEST PUSH2 0x292 SLOAD CALLVALUE LT ISZERO PUSH2 0x2052 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206D73672E76616C7565206D7573742062652067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x746572207468616E206D696E5072696365546F4973737565 PUSH1 0x40 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x293 SLOAD CALLVALUE GT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206D73672E76616C7565206D757374206265206C657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x207468616E206D61785072696365546F4973737565 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST CALLVALUE DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x100 ADD MLOAD EQ PUSH2 0x213E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206D73672E76616C756520646F6573206E6F74206D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x63682063726564656E7469616C5375626A6563742E7072696365 PUSH1 0x30 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2149 DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH2 0x2166 DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x2160 DUP7 PUSH2 0x3438 JUMP JUMPDEST DUP6 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x216F DUP5 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x298 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2193 JUMPI PUSH2 0x2193 PUSH2 0x4CA5 JUMP JUMPDEST EQ PUSH2 0x2201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2056657269666961626C652043726564656E7469616C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1A185CDA08185B1C9958591E481899595B881A5CDCDD5959 PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x291 SLOAD PUSH2 0x2216 DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x1383 JUMP JUMPDEST LT ISZERO PUSH2 0x227A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2069737375657220646F6573206E6F7420686176652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6E6F7567682062616C616E6365 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2288 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x229B SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST SWAP1 POP PUSH2 0x294 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x22B3 JUMPI POP PUSH2 0x295 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x2331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A207374616B65206D757374206265206265747765656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D696E5374616B65546F497373756520616E64206D61785374616B65546F4973 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x737565 PUSH1 0xE8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x2343 DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2371 SWAP1 DUP3 PUSH2 0x3536 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 MLOAD DUP3 ADD MLOAD SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP4 AND SWAP3 PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP5 DUP2 MSTORE PUSH2 0x298 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2417 JUMPI PUSH2 0x2417 PUSH2 0x4CA5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH32 0xB4323E298F3A82D5CF939B5E4ED408526ED5F8EBE42169C54EC2B667A85E1BC9 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x245A SWAP3 SWAP2 SWAP1 PUSH2 0x50A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x2479 DUP3 DUP8 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2D59 JUMP JUMPDEST SWAP1 POP PUSH2 0x248D DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x249F DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x2E96 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C1 PUSH2 0x24BA DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x296 SLOAD PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x24E0 SWAP1 PUSH2 0x24DB CALLVALUE DUP5 PUSH2 0x3349 JUMP JUMPDEST PUSH2 0x3355 JUMP JUMPDEST PUSH2 0x297 SLOAD PUSH2 0x24EE SWAP1 DUP3 PUSH2 0x3536 JUMP JUMPDEST PUSH2 0x297 SSTORE POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x229 SLOAD PUSH1 0x40 MLOAD PUSH4 0x71D4ED8D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE3A9DB1A SWAP1 PUSH2 0x2531 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x254E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x546E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA1A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B2 CALLER PUSH2 0x136E JUMP JUMPDEST ISZERO PUSH2 0x25C4 JUMPI POP PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x262B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x268C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F9 DUP5 DUP5 PUSH2 0x1F50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x19A5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2754 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x19A5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x27C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x2832 DUP4 DUP4 DUP4 PUSH2 0x355A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x28AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D40 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x28F8 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0x291F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206D757374206861766520676F7665726E20726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2062616420697373756572206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206261642063726564656E7469616C5375626A65637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2A4D SWAP2 SWAP1 PUSH1 0x20 ADD PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x60 DUP5 ADD MLOAD MLOAD SWAP1 SWAP3 PUSH2 0x2A78 SWAP3 ADD PUSH2 0x468E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x2AFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2069737375657220444944206973207468652073616D65 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x8185CC818DC9959195B9D1A585B14DD589A9958DD PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2069737375657220616464726573732069732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH25 0x1CD85B5948185CC818DC9959195B9D1A585B14DD589A9958DD PUSH1 0x3A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0x120 ADD MLOAD TIMESTAMP GT PUSH2 0x2BF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2056432069737375616E63654461746520697320696E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x74686520667574757265 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0x140 ADD MLOAD TIMESTAMP LT PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2056432068617320616C72656164792065787069726564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2CBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A206275726E207374616B652066726F6D20746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x10DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x299 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2CFE SWAP1 DUP3 PUSH2 0x3349 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x299 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 SWAP1 PUSH2 0x2D4D SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD PUSH2 0x24BA DUP5 DUP5 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2DC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x2DD4 DUP3 PUSH1 0x0 DUP4 PUSH2 0x355A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2E48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0xCB DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D40 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2EEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x2EF8 PUSH1 0x0 DUP4 DUP4 PUSH2 0x355A JUMP JUMPDEST DUP1 PUSH1 0xCB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2F0A SWAP2 SWAP1 PUSH2 0x5365 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D40 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x11A6 DUP2 PUSH2 0x2F5D PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x36D4 JUMP JUMPDEST PUSH2 0x2F6C DUP3 DUP3 PUSH2 0x372D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xFD8 SWAP1 DUP3 PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104D PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x2FB4 PUSH2 0x191 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x192 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x300B DUP3 DUP3 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xFD8 SWAP1 DUP3 PUSH2 0x384E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CF9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x11A6 PUSH2 0x2905 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x307A JUMPI PUSH2 0xFD8 DUP4 PUSH2 0x3863 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x30D4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x30D1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x546E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3137 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CF9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x31A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST POP PUSH2 0xFD8 DUP4 DUP4 DUP4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x31BA PUSH2 0x3922 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x31EE PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31FB SWAP2 SWAP1 PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x320D PUSH2 0x396C JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x31EE PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP4 DUP4 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3286 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH2 0x328E PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x3296 PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x329E PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x32A6 PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x32B0 DUP4 DUP4 PUSH2 0x3A04 JUMP JUMPDEST PUSH2 0x32B8 PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x32C0 PUSH2 0x3A52 JUMP JUMPDEST PUSH2 0x32C8 PUSH2 0x39DD JUMP JUMPDEST PUSH2 0x32D2 DUP4 DUP3 PUSH2 0x3A86 JUMP JUMPDEST PUSH2 0x32DA PUSH2 0x3AC9 JUMP JUMPDEST PUSH2 0x32E2 PUSH2 0x3B84 JUMP JUMPDEST PUSH2 0xFD8 DUP4 DUP4 DUP4 PUSH2 0x3BAB JUMP JUMPDEST PUSH1 0x2 PUSH2 0x25C SLOAD EQ ISZERO PUSH2 0x3341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x2 PUSH2 0x25C SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 DUP5 PUSH2 0x54D2 JUMP JUMPDEST PUSH2 0x229 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF340FA01 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF340FA01 SWAP1 DUP4 SWAP1 PUSH2 0x3388 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x25C SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1A PUSH2 0x33D3 PUSH2 0x2F84 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3423 DUP6 DUP6 PUSH2 0x3CA5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x3430 DUP2 PUSH2 0x3CEB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x63C4847AA3662952B34B8F76F3ABC371C24535EE34FCE5B3DF34D029DB924D4E PUSH1 0x0 SHL DUP3 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x20 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH1 0x40 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x348F DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x3E34 JUMP JUMPDEST PUSH2 0x349C DUP8 PUSH1 0x80 ADD MLOAD PUSH2 0x3E8D JUMP JUMPDEST PUSH2 0x34A9 DUP9 PUSH1 0xA0 ADD MLOAD PUSH2 0x3F86 JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0xE0 DUP12 ADD MLOAD DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x350F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 ADD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 DUP5 PUSH2 0x5365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 DUP5 PUSH2 0x52AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 DUP5 PUSH2 0x54E9 JUMP JUMPDEST PUSH2 0x3565 DUP4 DUP4 DUP4 PUSH2 0x3FDC JUMP JUMPDEST PUSH2 0x357F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST DUP1 PUSH2 0x3591 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x35A3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST DUP1 PUSH2 0x35B9 JUMPI POP PUSH2 0x28F SLOAD PUSH2 0x35B6 DUP5 PUSH2 0x1383 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x361B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2073656E64657220646F6573206E6F7420686176652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6E6F7567682062616C616E6365 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x3635 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x752 PUSH2 0x25A7 JUMP JUMPDEST DUP1 PUSH2 0x3647 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x3659 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST DUP1 PUSH2 0x366F JUMPI POP PUSH2 0x290 SLOAD PUSH2 0x366C DUP4 PUSH2 0x1383 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A20726563697069656E7420646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6520656E6F7567682062616C616E6365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x36DE DUP3 DUP3 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x10DC JUMPI PUSH2 0x36EB DUP2 PUSH2 0x4043 JUMP JUMPDEST PUSH2 0x36F6 DUP4 PUSH1 0x20 PUSH2 0x4055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3707 SWAP3 SWAP2 SWAP1 PUSH2 0x550B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0xC0D SWAP2 PUSH1 0x4 ADD PUSH2 0x468E JUMP JUMPDEST PUSH2 0x3737 DUP3 DUP3 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x10DC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x3770 PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x41F0 JUMP JUMPDEST PUSH2 0x37D3 DUP3 DUP3 PUSH2 0x17B0 JUMP JUMPDEST ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x380A PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x423F JUMP JUMPDEST PUSH2 0x386C DUP2 PUSH2 0x3250 JUMP JUMPDEST PUSH2 0x38CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CF9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3906 DUP4 PUSH2 0x4332 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x3913 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xFD8 JUMPI PUSH2 0x19A5 DUP4 DUP4 PUSH2 0x4372 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x39CA JUMPI PUSH2 0x39CA PUSH2 0x557A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3A2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x3A3E SWAP1 PUSH1 0xCC SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x4566 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0xFD8 SWAP1 PUSH1 0xCD SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x4566 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3A79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3AAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP2 MLOAD SWAP2 SWAP1 SWAP3 ADD KECCAK256 PUSH2 0x191 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x192 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3AF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AFC SWAP1 PUSH2 0x45EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x3B18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x229 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x204A7F07 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x8129FC1C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x33BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3BD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x5487 JUMP JUMPDEST PUSH2 0x3BE4 PUSH1 0x0 PUSH2 0x3BDF PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x4464 JUMP JUMPDEST PUSH2 0x3BFE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CD9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3BDF PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x3C0A PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C15 SWAP1 PUSH1 0x64 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x28F SSTORE PUSH2 0x3C25 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C30 SWAP1 PUSH1 0x64 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x290 SSTORE PUSH1 0xA PUSH2 0x296 SSTORE PUSH1 0x12 PUSH2 0x3C47 SWAP1 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C52 SWAP1 PUSH1 0x64 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x291 SSTORE PUSH1 0x0 PUSH2 0x292 SSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x293 SSTORE PUSH2 0x3C76 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C81 SWAP1 PUSH1 0x1 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x294 SSTORE PUSH2 0x3C91 PUSH1 0x12 PUSH1 0xA PUSH2 0x529F JUMP JUMPDEST PUSH2 0x3C9C SWAP1 PUSH1 0xA PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x295 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 EQ ISZERO PUSH2 0x3CDC JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x3CD0 DUP8 DUP3 DUP6 DUP6 PUSH2 0x446E JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x3CE4 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3CFF JUMPI PUSH2 0x3CFF PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x3D08 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3D1C JUMPI PUSH2 0x3D1C PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x3D65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x45434453413A20696E76616C6964207369676E6174757265 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3D79 JUMPI PUSH2 0x3D79 PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x3DC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3DDB JUMPI PUSH2 0x3DDB PUSH2 0x4CA5 JUMP JUMPDEST EQ ISZERO PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP4 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xABB691E6E52CEB1FF8B3DF91DC14323057E88EFA3252486ED994FD62706CDFAA SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH2 0x350F JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4B87DB6C5998F503AC6519B5A7D74EFCF2A230368DEEAF54DD8BF078DA459FF7 PUSH1 0x0 SHL DUP3 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x60 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x80 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0xA0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x350F SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD SWAP11 SWAP1 SWAP11 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 SWAP1 SWAP9 AND PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP10 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xFF AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0x180 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP4 ADD MLOAD DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0x1A58B7C56676B62343F37F4F3603A07AE6DD78BEA300689BCEFEF0F9498C6CC9 SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH2 0x350F JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA1A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x4064 DUP4 PUSH1 0x2 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x406F SWAP1 PUSH1 0x2 PUSH2 0x5365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4086 JUMPI PUSH2 0x4086 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40B0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x40CB JUMPI PUSH2 0x40CB PUSH2 0x557A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x40FA JUMPI PUSH2 0x40FA PUSH2 0x557A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x411E DUP5 PUSH1 0x2 PUSH2 0x52AE JUMP JUMPDEST PUSH2 0x4129 SWAP1 PUSH1 0x1 PUSH2 0x5365 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x41A1 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x415D JUMPI PUSH2 0x415D PUSH2 0x557A JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4173 JUMPI PUSH2 0x4173 PUSH2 0x557A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x419A DUP2 PUSH2 0x5590 JUMP JUMPDEST SWAP1 POP PUSH2 0x412C JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4237 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xA1A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x4328 JUMPI PUSH1 0x0 PUSH2 0x4263 PUSH1 0x1 DUP4 PUSH2 0x54D2 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x4277 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x54D2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x42DC JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4297 JUMPI PUSH2 0x4297 PUSH2 0x557A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x42BA JUMPI PUSH2 0x42BA PUSH2 0x557A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x42ED JUMPI PUSH2 0x42ED PUSH2 0x55A7 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x433B DUP2 PUSH2 0x3863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x437D DUP4 PUSH2 0x3250 JUMP JUMPDEST PUSH2 0x43D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x43F3 SWAP2 SWAP1 PUSH2 0x55BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x442E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4433 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x445B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5D19 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x4528 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10DC DUP3 DUP3 PUSH2 0x2F62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 GT ISZERO PUSH2 0x449B JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x451F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4518 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x451F JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4537 JUMPI POP DUP2 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0xAFD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x454C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP2 SWAP1 PUSH2 0x468E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4572 SWAP1 PUSH2 0x4F29 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4594 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x45DA JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x45AD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x45DA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x45DA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x45DA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x45BF JUMP JUMPDEST POP PUSH2 0x45E6 SWAP3 SWAP2 POP PUSH2 0x45F7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x6FF DUP1 PUSH2 0x55DA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x45E6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x45F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x461E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4651 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4639 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x19A5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x467A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4636 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAFD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4662 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x46C1 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x46E4 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4712 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4722 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4784 JUMPI PUSH2 0x4784 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4784 JUMPI PUSH2 0x4784 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4784 JUMPI PUSH2 0x4784 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x47E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x47FB JUMPI PUSH2 0x47FB PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4823 JUMPI PUSH2 0x4823 PUSH2 0x474C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x483C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x486E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4876 PUSH2 0x4762 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x488E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x489A DUP5 DUP3 DUP6 ADD PUSH2 0x47D0 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH2 0x48AB DUP2 PUSH2 0x46A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x46C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E2 PUSH2 0x478A JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x48FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4907 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST DUP4 MSTORE PUSH2 0x4915 PUSH1 0x20 DUP6 ADD PUSH2 0x46B6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x492E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x493A DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x495F DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4984 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x499D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49AA DUP5 DUP3 DUP6 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x49BC PUSH1 0xC0 DUP4 ADD PUSH2 0x48B6 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP4 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x120 DUP1 DUP4 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x140 DUP1 DUP4 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A0F PUSH2 0x4762 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A34 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A57 DUP5 DUP3 DUP6 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A7E PUSH2 0x47AD JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4A97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AA3 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AC5 DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4ADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AEA DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B0F DUP6 DUP4 DUP7 ADD PUSH2 0x485C JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B34 DUP6 DUP4 DUP7 ADD PUSH2 0x48C7 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B59 DUP6 DUP4 DUP7 ADD PUSH2 0x49F5 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B7E DUP6 DUP4 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA4 DUP5 DUP3 DUP6 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BE6 DUP7 DUP4 DUP8 ADD PUSH2 0x4A63 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4BFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C09 DUP6 DUP3 DUP7 ADD PUSH2 0x4A63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C38 DUP2 PUSH2 0x46A1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAFD DUP2 PUSH2 0x46A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4C7E DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C09 DUP6 DUP3 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD PUSH1 0x6 DUP5 LT PUSH2 0x4CDD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 DUP2 MSTORE PUSH1 0x20 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4CFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D1D DUP7 DUP4 DUP8 ADD PUSH2 0x4A63 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4D33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C09 DUP6 DUP3 DUP7 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4D7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D88 DUP5 DUP3 DUP6 ADD PUSH2 0x4A63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4DAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x100 DUP11 ADD CALLDATALOAD PUSH2 0x4DF3 DUP2 PUSH2 0x46A1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4E17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4E52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E5E DUP8 DUP4 DUP9 ADD PUSH2 0x47D0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E80 DUP8 DUP4 DUP9 ADD PUSH2 0x47D0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EA3 DUP7 DUP3 DUP8 ADD PUSH2 0x47D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4EC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4ECD DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4EEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4EA3 DUP7 DUP3 DUP8 ADD PUSH2 0x47D0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4F19 DUP2 PUSH2 0x46A1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C38 DUP2 PUSH2 0x46A1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4F3D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4F5E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x40 DUP5 MSTORE PUSH2 0x4F79 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4662 JUMP JUMPDEST PUSH1 0x20 SWAP4 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x4FAC DUP3 DUP7 ADD DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4FC9 PUSH1 0x20 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x4FE1 DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x4FFB DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x5015 DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x502F DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x5046 PUSH1 0xC0 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x40 DUP5 MSTORE PUSH2 0x508F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x445B DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x100 DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x50CD PUSH2 0x140 DUP6 ADD DUP4 PUSH2 0x4662 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x3F NOT DUP1 DUP7 DUP6 SUB ADD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x50EB DUP5 DUP4 PUSH2 0x4662 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x5108 DUP5 DUP4 PUSH2 0x4662 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x5125 DUP5 DUP4 PUSH2 0x4F64 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x5142 DUP5 DUP4 PUSH2 0x4F96 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x515F DUP5 DUP4 PUSH2 0x507A JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD DUP4 DUP8 ADD MSTORE PUSH2 0x517B DUP5 DUP4 PUSH2 0x4662 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP8 ADD MLOAD SWAP3 POP DUP1 DUP7 DUP6 SUB ADD PUSH2 0x120 DUP8 ADD MSTORE POP POP PUSH2 0x519B DUP3 DUP3 PUSH2 0x4662 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x51F6 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x51DC JUMPI PUSH2 0x51DC PUSH2 0x51A5 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x51E9 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x51C0 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x520D JUMPI POP PUSH1 0x1 PUSH2 0xA1A JUMP JUMPDEST DUP2 PUSH2 0x521A JUMPI POP PUSH1 0x0 PUSH2 0xA1A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5230 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x523A JUMPI PUSH2 0x5256 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA1A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x524B JUMPI PUSH2 0x524B PUSH2 0x51A5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xA1A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5279 JUMPI POP DUP2 DUP2 EXP PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x5283 DUP4 DUP4 PUSH2 0x51BB JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x5297 JUMPI PUSH2 0x5297 PUSH2 0x51A5 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x51FE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x52C8 JUMPI PUSH2 0x52C8 PUSH2 0x51A5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5378 JUMPI PUSH2 0x5378 PUSH2 0x51A5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2073656E646572206D7573742062652074686520637265 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x64656E7469616C5375626A6563742061646472657373 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A207374617465206973206E6F7420497373756564000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4D88 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4662 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4B5242546F6B656E3A2073656E646572206D7573742062652074686520697373 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x7565722061646472657373 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x54E4 JUMPI PUSH2 0x54E4 PUSH2 0x51A5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5506 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x553D DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4636 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x556E DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x4636 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x559F JUMPI PUSH2 0x559F PUSH2 0x51A5 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x55CF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4636 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x1CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x85 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x15D PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE SWAP1 PUSH2 0x185 SWAP1 DUP3 PUSH2 0x438 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 PUSH2 0x553 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x200 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x21A JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2AD PUSH2 0x5A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x2F3 DUP2 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0x39E SWAP1 DUP5 SWAP1 PUSH2 0x638 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x279 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x1958DA5C1A595B9D081B585E481A185D99481C995D995C9D1959 PUSH1 0x32 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x279 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1DE CALLER PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x631 DUP2 PUSH2 0x5FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x659 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP3 PUSH18 0xA2CEA9ABDEB9F1AF907D388D181A93436D61 DUP15 SWAP8 0xC9 0xDD PUSH30 0x87F028602E6B64736F6C634300080C0033899BD46557473CB80307A9DABC 0x29 PUSH18 0x31CED39608330A2D29B2D52B660C03923E36 ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564DDF252AD1BE2C89B69C2B0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x8DBA34486FFD1532954841C9CE808718F1BA8C DUP7 0xA5 0xAD SMOD 0xC8 0x23 0x4D SWAP6 0xC2 0xB4 0xB7 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"1875:24436:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:223:0;;;;;;;;;;-1:-1:-1;962:223:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:33;;463:22;445:41;;433:2;418:18;962:223:0;;;;;;;;2496:98:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3049:30:31:-;;;;;;;;;;;;;;;;;;;1394:25:33;;;1382:2;1367:18;3049:30:31;1248:177:33;2492:34:31;;;;;;;;;;;;;;;;4773:197:13;;;;;;;;;;-1:-1:-1;4773:197:13;;;;;:::i;:::-;;:::i;3584:106::-;;;;;;;;;;-1:-1:-1;3671:12:13;;3584:106;;5532:286;;;;;;;;;;-1:-1:-1;5532:286:13;;;;;:::i;:::-;;:::i;4713:129:1:-;;;;;;;;;;-1:-1:-1;4713:129:1;;;;;:::i;:::-;4787:7;4813:12;;;:6;:12;;;;;:22;;;;4713:129;23565:2242:31;;;;;;;;;;-1:-1:-1;23565:2242:31;;;;;:::i;:::-;;:::i;5138:145:1:-;;;;;;;;;;-1:-1:-1;5138:145:1;;;;;:::i;:::-;;:::i;:::-;;3433:91:13;;;;;;;;;;-1:-1:-1;3433:91:13;;3515:2;10186:36:33;;10174:2;10159:18;3433:91:13;10044:184:33;2316:104:11;;;;;;;;;;-1:-1:-1;2316:104:11;;;;;:::i;:::-;;:::i;13570::31:-;;;;;;;;;;;;;:::i;6247:214:1:-;;;;;;;;;;-1:-1:-1;6247:214:1;;;;;:::i;:::-;;:::i;3322:197:9:-;;;;;;;;;;-1:-1:-1;3322:197:9;;;;;:::i;:::-;;:::i;2195:62:31:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2195:62:31;;6213:234:13;;;;;;;;;;-1:-1:-1;6213:234:13;;;;;:::i;:::-;;:::i;13009:72:31:-;;;;;;;;;;;;;:::i;11984:102::-;;;;;;;;;;-1:-1:-1;11984:102:31;;;;;:::i;:::-;;:::i;13270:101::-;;;;;;;;;;-1:-1:-1;13270:101:31;;;;;:::i;:::-;-1:-1:-1;;;;;13350:14:31;13324:7;13350:14;;;:6;:14;;;;;;;13270:101;848:89:15;;;;;;;;;;-1:-1:-1;848:89:15;;;;;:::i;:::-;;:::i;3768:222:9:-;;;;;;:::i;:::-;;:::i;3011:131::-;;;;;;;;;;;;;:::i;7293:171:31:-;;;;;;;;;;-1:-1:-1;7293:171:31;;;;;:::i;:::-;;:::i;3750:50::-;;;;;;;;;;-1:-1:-1;3750:50:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1858:84:10:-;;;;;;;;;;-1:-1:-1;1928:7:10;;;;1858:84;;3748:125:13;;;;;;;;;;-1:-1:-1;3748:125:13;;;;;:::i;:::-;;:::i;18945:1102:31:-;;;;;;;;;;-1:-1:-1;18945:1102:31;;;;;:::i;:::-;;:::i;1243:161:15:-;;;;;;;;;;-1:-1:-1;1243:161:15;;;;;:::i;:::-;;:::i;2303:31:31:-;;;;;;;;;;-1:-1:-1;2303:31:31;;;;-1:-1:-1;;;;;2303:31:31;;;;;;;;;;:::i;12731:68::-;;;;;;;;;;;;;:::i;22660:645::-;;;;;;;;;;-1:-1:-1;22660:645:31;;;;;:::i;:::-;;:::i;9118:1224::-;;;;;;;;;;-1:-1:-1;9118:1224:31;;;;;:::i;:::-;;:::i;1770:151:0:-;;;;;;;;;;-1:-1:-1;1770:151:0;;;;;:::i;:::-;;:::i;3208:145:1:-;;;;;;;;;;-1:-1:-1;3208:145:1;;;;;:::i;:::-;;:::i;2707:102:13:-;;;;;;;;;;;;;:::i;12379:146:31:-;;;;;;;;;;-1:-1:-1;12379:146:31;;;;;:::i;:::-;;:::i;3153:28::-;;;;;;;;;;;;;;;;2329:49:1;;;;;;;;;;-1:-1:-1;2329:49:1;2374:4;2329:49;;6934:427:13;;;;;;;;;;-1:-1:-1;6934:427:13;;;;;:::i;:::-;;:::i;4692:200:31:-;;;;;;;;;;-1:-1:-1;4692:200:31;;;;;:::i;:::-;;:::i;2829:30::-;;;;;;;;;;;;;;;;4069:189:13;;;;;;;;;;-1:-1:-1;4069:189:13;;;;;:::i;:::-;;:::i;25950:327:31:-;;;;;;;;;;-1:-1:-1;25950:327:31;;;;;:::i;:::-;;:::i;2607:32::-;;;;;;;;;;;;;;;;13849:659;;;;;;;;;;-1:-1:-1;13849:659:31;;;;;:::i;:::-;;:::i;14657:189::-;;;;;;;;;;-1:-1:-1;14657:189:31;;;;;:::i;:::-;;:::i;15086:572::-;;;;;;;;;;-1:-1:-1;15086:572:31;;;;;:::i;:::-;;:::i;2089:140:0:-;;;;;;;;;;-1:-1:-1;2089:140:0;;;;;:::i;:::-;;:::i;20278:1028:31:-;;;;;;;;;;-1:-1:-1;20278:1028:31;;;;;:::i;:::-;;:::i;21540:993::-;;;;;;;;;;-1:-1:-1;21540:993:31;;;;;:::i;:::-;;:::i;5563:147:1:-;;;;;;;;;;-1:-1:-1;5563:147:1;;;;;:::i;:::-;;:::i;4316:149:13:-;;;;;;;;;;-1:-1:-1;4316:149:13;;;;;:::i;:::-;;:::i;3255:39:31:-;;;;;;;;;;;;;;;;2939:30;;;;;;;;;;;;;;;;16144:2559;;;;;;:::i;:::-;;:::i;2538:110:11:-;;;;;;;;;;-1:-1:-1;2538:110:11;;;;;:::i;:::-;;:::i;2396:35:31:-;;;;;;;;;;;;;;;;2719:30;;;;;;;;;;;;;;;;962:223:0;1047:4;-1:-1:-1;;;;;;1070:68:0;;-1:-1:-1;;;1070:68:0;;:108;;;1142:36;1166:11;1142:23;:36::i;:::-;1063:115;962:223;-1:-1:-1;;962:223:0:o;2496:98:13:-;2550:13;2582:5;2575:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:98;:::o;4773:197::-;4856:4;4872:13;4888:12;:10;:12::i;:::-;4872:28;;4910:32;4919:5;4926:7;4935:6;4910:8;:32::i;:::-;-1:-1:-1;4959:4:13;;4773:197;-1:-1:-1;;;4773:197:13:o;5532:286::-;5659:4;5675:15;5693:12;:10;:12::i;:::-;5675:30;;5715:38;5731:4;5737:7;5746:6;5715:15;:38::i;:::-;5763:27;5773:4;5779:2;5783:6;5763:9;:27::i;:::-;5807:4;5800:11;;;5532:286;;;;;;:::o;23565:2242:31:-;23734:4;4654:14;:12;:14::i;:::-;23860:58:::1;;;;;;17464:2:33::0;17446:21;;;17503:2;17483:18;;;17476:30;17542:66;17537:2;17522:18;;17515:94;-1:-1:-1;;;17640:2:33;17625:18;;17618:64;17714:3;17699:19;;17262:462;23860:58:31::1;;;;;;;;;;;;;23829:107;;;;;;23792:9;:15;;;23781:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;23771:38;;;;;;:165;23750:266;;;::::0;-1:-1:-1;;;23750:266:31;;17931:2:33;23750:266:31::1;::::0;::::1;17913:21:33::0;17970:2;17950:18;;;17943:30;18009:34;17989:18;;;17982:62;-1:-1:-1;;;18060:18:33;;;18053:52;18122:19;;23750:266:31::1;;;;;;;;;24083:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;24047:48:31::1;:9;:16;;;:32;;;-1:-1:-1::0;;;;;24047:48:31::1;;24026:138;;;::::0;-1:-1:-1;;;24026:138:31;;18354:2:33;24026:138:31::1;::::0;::::1;18336:21:33::0;18393:2;18373:18;;;18366:30;18432:34;18412:18;;;18405:62;-1:-1:-1;;;18483:18:33;;;18476:41;18534:19;;24026:138:31::1;18152:407:33::0;24026:138:31::1;24289:2;:5;;;24278:17;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;24278:17:31;;::::1;::::0;;;;;;;24268:28;;24278:17:::1;24268:28:::0;;::::1;::::0;24216:27:::1;::::0;::::1;::::0;:30;24268:28;;24205:42:::1;::::0;::::1;;:::i;:::-;;;;;;;;;;;;;24195:53;;;;;;:101;24174:208;;;::::0;-1:-1:-1;;;24174:208:31;;18766:2:33;24174:208:31::1;::::0;::::1;18748:21:33::0;18805:2;18785:18;;;18778:30;18844:34;18824:18;;;18817:62;18915:30;18895:18;;;18888:58;18963:19;;24174:208:31::1;18564:424:33::0;24174:208:31::1;24393:32;24415:9;24393:21;:32::i;:::-;24436:12;24451:11;24459:2;24451:7;:11::i;:::-;24436:26:::0;-1:-1:-1;24529:11:31::1;24494:14:::0;;;;:8:::1;:14;::::0;;;;:31;::::1;;:46;::::0;::::1;;;;;;:::i;:::-;;;:116;;;;-1:-1:-1::0;24595:15:31::1;24560:14;::::0;;;:8:::1;:14;::::0;;;;:31;::::1;;:50;::::0;::::1;;;;;;:::i;:::-;;;24494:116;24473:198;;;::::0;-1:-1:-1;;;24473:198:31;;19195:2:33;24473:198:31::1;::::0;::::1;19177:21:33::0;19234:2;19214:18;;;19207:30;19273:34;19253:18;;;19246:62;-1:-1:-1;;;19324:18:33;;;19317:33;19367:19;;24473:198:31::1;18993:399:33::0;24473:198:31::1;24682:19;24704:18;24712:9;24704:7;:18::i;:::-;24732:14;::::0;;;:8:::1;:14;::::0;;;;;;;;:49;;-1:-1:-1;;24732:49:31::1;24766:15;24732:49;::::0;;;24791:25:::1;:39:::0;;;24845:27;;19571:25:33;;;19612:18;;;19605:34;;;24682:40:31;;-1:-1:-1;24845:27:31::1;::::0;19544:18:33;24845:27:31::1;;;;;;;24883:21;::::0;;;:8:::1;:21;::::0;;;;;;:54;;-1:-1:-1;;24883:54:31::1;24924:13;24883:54;::::0;;24952:30;::::1;::::0;::::1;::::0;24883:21;;24972:9;;24952:30:::1;:::i;:::-;;;;;;;;24993:14;25039;3515:2:13::0;25039::31::1;:14;:::i;:::-;25010:2;:20;;;:26;;;:43;;;;:::i;:::-;24993:60;;25097:45;25108:2;:9;;;:25;;;25135:6;25097:10;:45::i;:::-;25212:15;25230:90;25264:6;25284:2;:20;;;:26;;;25230:90;;:20;:90::i;:::-;25212:108;;25330:52;25336:2;:20;;;:36;;;25374:7;25330:5;:52::i;:::-;25392:41;25398:2;:9;;;:25;;;25425:7;25392:5;:41::i;:::-;25477:21;25549:14;3515:2:13::0;25549::31::1;:14;:::i;:::-;25501:9;:27;;;:33;;;:62;;;;:::i;:::-;25477:86;;25573:22;25598:104;25632:13;25659:9;:27;;;:33;;;25598:104;;:20;:104::i;:::-;25573:129;;25712:66;25718:9;:27;;;:43;;;25763:14;25712:5;:66::i;:::-;-1:-1:-1::0;25796:4:31::1;::::0;23565:2242;-1:-1:-1;;;;;;;;23565:2242:31:o;5138:145:1:-;4787:7;4813:12;;;:6;:12;;;;;:22;;;2807:16;2818:4;2807:10;:16::i;:::-;5251:25:::1;5262:4;5268:7;5251:10;:25::i;:::-;5138:145:::0;;;:::o;2316:104:11:-;2390:7;;:23;;-1:-1:-1;;;2390:23:11;;-1:-1:-1;;;;;2390:7:11;;;;:16;;:23;;2407:5;;2390:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:104;:::o;13570::31:-;13621:7;13647:20;:18;:20::i;:::-;13640:27;;13570:104;:::o;6247:214:1:-;6353:12;:10;:12::i;:::-;-1:-1:-1;;;;;6342:23:1;:7;-1:-1:-1;;;;;6342:23:1;;6334:83;;;;-1:-1:-1;;;6334:83:1;;25710:2:33;6334:83:1;;;25692:21:33;25749:2;25729:18;;;25722:30;25788:34;25768:18;;;25761:62;-1:-1:-1;;;25839:18:33;;;25832:45;25894:19;;6334:83:1;25508:411:33;6334:83:1;6428:26;6440:4;6446:7;6428:11;:26::i;:::-;6247:214;;:::o;3322:197:9:-;1894:4;-1:-1:-1;;;;;1903:6:9;1886:23;;;1878:80;;;;-1:-1:-1;;;1878:80:9;;;;;;;:::i;:::-;2000:6;-1:-1:-1;;;;;1976:30:9;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1976:30:9;;1968:87;;;;-1:-1:-1;;;1968:87:9;;;;;;;:::i;:::-;3405:36:::1;3423:17;3405;:36::i;:::-;3492:12;::::0;;3502:1:::1;3492:12:::0;;;::::1;::::0;::::1;::::0;;;3451:61:::1;::::0;3473:17;;3492:12;3451:21:::1;:61::i;:::-;3322:197:::0;:::o;6213:234:13:-;6301:4;6317:13;6333:12;:10;:12::i;:::-;6317:28;;6355:64;6364:5;6371:7;6408:10;6380:25;6390:5;6397:7;6380:9;:25::i;:::-;:38;;;;:::i;:::-;6355:8;:64::i;13009:72:31:-;4654:14;:12;:14::i;:::-;13064:10:::1;:8;:10::i;:::-;13009:72::o:0;11984:102::-;4654:14;:12;:14::i;:::-;12062:17:::1;12068:2;12072:6;12062:5;:17::i;848:89:15:-:0;903:27;909:12;:10;:12::i;:::-;923:6;903:5;:27::i;3768:222:9:-;1894:4;-1:-1:-1;;;;;1903:6:9;1886:23;;;1878:80;;;;-1:-1:-1;;;1878:80:9;;;;;;;:::i;:::-;2000:6;-1:-1:-1;;;;;1976:30:9;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1976:30:9;;1968:87;;;;-1:-1:-1;;;1968:87:9;;;;;;;:::i;:::-;3885:36:::1;3903:17;3885;:36::i;:::-;3931:52;3953:17;3972:4;3978;3931:21;:52::i;3011:131::-:0;3089:7;2329:4;-1:-1:-1;;;;;2338:6:9;2321:23;;2313:92;;;;-1:-1:-1;;;2313:92:9;;27085:2:33;2313:92:9;;;27067:21:33;27124:2;27104:18;;;27097:30;27163:34;27143:18;;;27136:62;-1:-1:-1;;;27214:18:33;;;27207:54;27278:19;;2313:92:9;26883:420:33;2313:92:9;-1:-1:-1;;;;;;;;;;;;3011:131:9;:::o;7293:171:31:-;7441:16;;-1:-1:-1;;;;;7428:29:31;;;7441:16;;7428:29;;7293:171::o;3748:125:13:-;-1:-1:-1;;;;;3848:18:13;3822:7;3848:18;;;:9;:18;;;;;;;3748:125::o;18945:1102:31:-;19066:4;19103:34;-1:-1:-1;;;;;;;;;;;19124:12:31;:10;:12::i;19103:34::-;:106;;;;19197:12;:10;:12::i;:::-;-1:-1:-1;;;;;19157:52:31;:2;:20;;;:36;;;-1:-1:-1;;;;;19157:52:31;;19103:106;19082:207;;;;-1:-1:-1;;;19082:207:31;;;;;;;:::i;:::-;19300:12;19315:11;19323:2;19315:7;:11::i;:::-;19300:26;-1:-1:-1;19393:13:31;19358:14;;;;:8;:14;;;;;:31;;;:48;;;;;;;;:::i;:::-;;19337:124;;;;-1:-1:-1;;;19337:124:31;;;;;;;:::i;:::-;19506:11;19472:14;;;:8;:14;;;;;;;:45;;-1:-1:-1;;19472:45:31;;;19532:21;;;;;19472:14;;19546:6;;19532:21;:::i;:::-;;;;;;;;19564:14;19610;3515:2:13;19610::31;:14;:::i;:::-;19581:2;:20;;;:26;;;:43;;;;:::i;:::-;19564:60;;19634:15;19652:90;19686:6;19706:2;:20;;;:26;;;19652:90;;:20;:90::i;:::-;19634:108;;19783:45;19794:2;:9;;;:25;;;19821:6;19783:10;:45::i;:::-;19838:40;19844:2;:9;;;:25;;;19871:6;19838:5;:40::i;:::-;19915:52;19921:2;:20;;;:36;;;19959:7;19915:5;:52::i;:::-;19977:41;19983:2;:9;;;:25;;;20010:7;19977:5;:41::i;:::-;-1:-1:-1;20036:4:31;;18945:1102;-1:-1:-1;;;;;18945:1102:31:o;1243:161:15:-;1319:46;1335:7;1344:12;:10;:12::i;:::-;1358:6;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;12731:68:31:-;4654:14;:12;:14::i;:::-;12784:8:::1;:6;:8::i;22660:645::-:0;22756:4;22776:12;22791:11;22799:2;22791:7;:11::i;:::-;22776:26;;22835:2;:20;;;:24;;;22817:15;:42;22813:425;;;22875:14;22921;3515:2:13;22921::31;:14;:::i;:::-;22892:2;:20;;;:26;;;:43;;;;:::i;:::-;22875:60;;22983:45;22994:2;:9;;;:25;;;23021:6;22983:10;:45::i;:::-;23042:40;23048:2;:9;;;:25;;;23075:6;23042:5;:40::i;:::-;23147:14;;;;:8;:14;;;;;;;;;:48;;-1:-1:-1;;23147:48:31;23181:14;23147:48;;;23214:13;;1394:25:33;;;23214:13:31;;1367:18:33;23214:13:31;;;;;;;22861:377;22813:425;-1:-1:-1;;23273:20:31;;;:24;;;23255:15;:42;;22660:645::o;9118:1224::-;4654:14;:12;:14::i;:::-;9484:20:::1;:46:::0;;;9540:19:::1;:44:::0;;;9594:17:::1;:40:::0;;;9780:13:::1;:32:::0;;;9843:26;;::::1;;9822:136;;;::::0;-1:-1:-1;;;9822:136:31;;28946:2:33;9822:136:31::1;::::0;::::1;28928:21:33::0;28985:2;28965:18;;;28958:30;29024:34;29004:18;;;28997:62;29095:33;29075:18;;;29068:61;29146:19;;9822:136:31::1;28744:427:33::0;9822:136:31::1;9968:15;:29:::0;;;10007:15:::1;:29:::0;;;10068:26;;::::1;;10047:136;;;::::0;-1:-1:-1;;;10047:136:31;;29378:2:33;10047:136:31::1;::::0;::::1;29360:21:33::0;29417:2;29397:18;;;29390:30;29456:34;29436:18;;;29429:62;29527:33;29507:18;;;29500:61;29578:19;;10047:136:31::1;29176:427:33::0;10047:136:31::1;10193:15;:29:::0;;;10232:15:::1;:29:::0;;;10272:16:::1;:38:::0;;-1:-1:-1;;;;;;10272:38:31::1;-1:-1:-1::0;;;;;10272:38:31;::::1;;::::0;;10326:9:::1;::::0;::::1;::::0;-1:-1:-1;;10326:9:31::1;9118:1224:::0;;;;;;;;;:::o;1770:151:0:-;1860:7;1886:18;;;:12;:18;;;;;:28;;1908:5;1886:21;:28::i;3208:145:1:-;3294:4;3317:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3317:29:1;;;;;;;;;;;;;;;3208:145::o;2707:102:13:-;2763:13;2795:7;2788:14;;;;;:::i;12379:146:31:-;4654:14;:12;:14::i;:::-;12493:25:::1;12504:6;12512:5;12493:10;:25::i;6934:427:13:-:0;7027:4;7043:13;7059:12;:10;:12::i;:::-;7043:28;;7081:24;7108:25;7118:5;7125:7;7108:9;:25::i;:::-;7081:52;;7171:15;7151:16;:35;;7143:85;;;;-1:-1:-1;;;7143:85:13;;29810:2:33;7143:85:13;;;29792:21:33;29849:2;29829:18;;;29822:30;29888:34;29868:18;;;29861:62;-1:-1:-1;;;29939:18:33;;;29932:35;29984:19;;7143:85:13;29608:401:33;7143:85:13;7262:60;7271:5;7278:7;7306:15;7287:16;:34;7262:8;:60::i;:::-;-1:-1:-1;7350:4:13;;6934:427;-1:-1:-1;;;;6934:427:13:o;4692:200:31:-;3273:19:8;3296:13;;;;;;3295:14;;3341:34;;;;-1:-1:-1;3359:12:8;;3374:1;3359:12;;;;:16;3341:34;3340:108;;;;3382:44;3420:4;3382:29;:44::i;:::-;3381:45;:66;;;;-1:-1:-1;3430:12:8;;;;;:17;3381:66;3319:201;;;;-1:-1:-1;;;3319:201:8;;30216:2:33;3319:201:8;;;30198:21:33;30255:2;30235:18;;;30228:30;30294:34;30274:18;;;30267:62;-1:-1:-1;;;30345:18:33;;;30338:44;30399:19;;3319:201:8;30014:410:33;3319:201:8;3530:12;:16;;-1:-1:-1;;3530:16:8;3545:1;3530:16;;;3556:65;;;;3590:13;:20;;-1:-1:-1;;3590:20:8;;;;;3556:65;4844:41:31::1;4863:4;4869:6;4877:7;4844:18;:41::i;:::-;3645:14:8::0;3641:99;;;3691:5;3675:21;;-1:-1:-1;;3675:21:8;;;3715:14;;-1:-1:-1;10186:36:33;;3715:14:8;;10174:2:33;10159:18;3715:14:8;;;;;;;3641:99;3263:483;4692:200:31;;;:::o;4069:189:13:-;4148:4;4164:13;4180:12;:10;:12::i;:::-;4164:28;;4202;4212:5;4219:2;4223:6;4202:9;:28::i;25950:327:31:-;2510:21:12;:19;:21::i;:::-;4654:14:31::1;:12;:14::i;:::-;26100:24:::2;;26089:7;:35;;26081:44;;;::::0;::::2;;26195:24;::::0;:37:::2;::::0;26224:7;26195:28:::2;:37::i;:::-;26168:24;:64:::0;26242:28:::2;26257:3:::0;26262:7;26242:14:::2;:28::i;:::-;2552:20:12::0;1792:1;3058:7;:22;2878:209;13849:659:31;13989:14;14006:28;14023:10;14006:16;:28::i;:::-;13989:45;;14045:24;14072:43;14097:6;14105:9;14072:24;:43::i;:::-;14045:70;-1:-1:-1;;;;;;14268:30:31;;14247:115;;;;-1:-1:-1;;;14247:115:31;;30830:2:33;14247:115:31;;;30812:21:33;30869:2;30849:18;;;30842:30;30908:34;30888:18;;;30881:62;-1:-1:-1;;;30959:18:33;;;30952:36;31005:19;;14247:115:31;30628:402:33;14247:115:31;14413:6;-1:-1:-1;;;;;14393:26:31;:16;-1:-1:-1;;;;;14393:26:31;;14372:129;;;;-1:-1:-1;;;14372:129:31;;31237:2:33;14372:129:31;;;31219:21:33;31276:2;31256:18;;;31249:30;31315:34;31295:18;;;31288:62;-1:-1:-1;;;31366:18:33;;;31359:54;31430:19;;14372:129:31;31035:420:33;14657:189:31;14762:7;14800:38;14835:2;14800:34;:38::i;15086:572::-;15195:13;15224:12;15239:11;15247:2;15239:7;:11::i;:::-;15260;15274:14;;;:8;:14;;;;;:31;15224:26;;-1:-1:-1;15274:31:31;;;;;15319:4;:19;;;;;;;;:::i;:::-;;15315:38;;;-1:-1:-1;;15340:13:31;;;;;;;;;;;;-1:-1:-1;;;15340:13:31;;;;;15086:572;-1:-1:-1;;15086:572:31:o;15315:38::-;15375:13;15367:4;:21;;;;;;;;:::i;:::-;;15363:42;;;-1:-1:-1;;15390:15:31;;;;;;;;;;;;-1:-1:-1;;;15390:15:31;;;;;15086:572;-1:-1:-1;;15086:572:31:o;15363:42::-;15427:15;15419:4;:23;;;;;;;;:::i;:::-;;15415:46;;;-1:-1:-1;;15444:17:31;;;;;;;;;;;;-1:-1:-1;;;15444:17:31;;;;;15086:572;-1:-1:-1;;15086:572:31:o;15415:46::-;15483:14;15475:4;:22;;;;;;;;:::i;:::-;;15471:44;;;-1:-1:-1;;15499:16:31;;;;;;;;;;;;-1:-1:-1;;;15499:16:31;;;;;15086:572;-1:-1:-1;;15086:572:31:o;15471:44::-;15537:16;15529:4;:24;;;;;;;;:::i;:::-;;15525:48;;;-1:-1:-1;;15555:18:31;;;;;;;;;;;;-1:-1:-1;;;15555:18:31;;;;;15086:572;-1:-1:-1;;15086:572:31:o;15525:48::-;15595:14;15587:4;:22;;;;;;;;:::i;:::-;;15583:44;;;-1:-1:-1;;15611:16:31;;;;;;;;;;;;-1:-1:-1;;;15611:16:31;;;;;15086:572;-1:-1:-1;;15086:572:31:o;15583:44::-;-1:-1:-1;;15637:14:31;;;;;;;;;;;;-1:-1:-1;;;15637:14:31;;;;;15086:572;-1:-1:-1;;15086:572:31:o;2089:140:0:-;2169:7;2195:18;;;:12;:18;;;;;:27;;:25;:27::i;20278:1028:31:-;20399:4;20465:12;:10;:12::i;:::-;-1:-1:-1;;;;;20436:41:31;:2;:9;;;:25;;;-1:-1:-1;;;;;20436:41:31;;20415:131;;;;-1:-1:-1;;;20415:131:31;;;;;;;:::i;:::-;20556:12;20571:11;20579:2;20571:7;:11::i;:::-;20556:26;-1:-1:-1;20649:13:31;20614:14;;;;:8;:14;;;;;:31;;;:48;;;;;;;;:::i;:::-;;20593:124;;;;-1:-1:-1;;;20593:124:31;;;;;;;:::i;:::-;20728:14;;;;:8;:14;;;;;;;:48;;-1:-1:-1;;20728:48:31;20762:14;20728:48;;;20791:21;;;;;20728:14;;20805:6;;20791:21;:::i;21540:993::-;21662:4;21728:12;:10;:12::i;:::-;-1:-1:-1;;;;;21699:41:31;:2;:9;;;:25;;;-1:-1:-1;;;;;21699:41:31;;21678:131;;;;-1:-1:-1;;;21678:131:31;;;;;;;:::i;:::-;21819:12;21834:11;21842:2;21834:7;:11::i;:::-;21819:26;-1:-1:-1;21911:13:31;21876:14;;;;:8;:14;;;;;:31;;;:48;;;;;;;;:::i;:::-;;21855:124;;;;-1:-1:-1;;;21855:124:31;;;;;;;:::i;:::-;21990:14;;;;:8;:14;;;;;;;:50;;-1:-1:-1;;21990:50:31;22024:16;21990:50;;;22055:23;;;;;21990:14;;22071:6;;22055:23;:::i;:::-;;;;;;;;22089:14;22135;3515:2:13;22135::31;:14;:::i;:::-;22106:2;:20;;;:26;;;:43;;;;:::i;:::-;22089:60;;22159:15;22177:90;22211:6;22231:2;:20;;;:26;;;22177:90;;:20;:90::i;:::-;22159:108;;22308:45;22319:2;:9;;;:25;;;22346:6;22308:10;:45::i;:::-;22363:40;22369:2;:9;;;:25;;;22396:6;22363:5;:40::i;:::-;22452:52;22458:2;:20;;;:36;;;22496:7;22452:5;:52::i;5563:147:1:-;4787:7;4813:12;;;:6;:12;;;;;:22;;;2807:16;2818:4;2807:10;:16::i;:::-;5677:26:::1;5689:4;5695:7;5677:11;:26::i;4316:149:13:-:0;-1:-1:-1;;;;;4431:18:13;;;4405:7;4431:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4316:149::o;16144:2559:31:-;16278:4;16315:34;-1:-1:-1;;;;;;;;;;;16336:12:31;:10;:12::i;16315:34::-;:106;;;;16409:12;:10;:12::i;:::-;-1:-1:-1;;;;;16369:52:31;:2;:20;;;:36;;;-1:-1:-1;;;;;16369:52:31;;16315:106;16294:207;;;;-1:-1:-1;;;16294:207:31;;;;;;;:::i;:::-;16546:15;;16533:9;:28;;16512:131;;;;-1:-1:-1;;;16512:131:31;;32074:2:33;16512:131:31;;;32056:21:33;32113:2;32093:18;;;32086:30;32152:34;32132:18;;;32125:62;-1:-1:-1;;;32203:18:33;;;32196:54;32267:19;;16512:131:31;31872:420:33;16512:131:31;16687:15;;16674:9;:28;;16653:128;;;;-1:-1:-1;;;16653:128:31;;32499:2:33;16653:128:31;;;32481:21:33;32538:2;32518:18;;;32511:30;32577:34;32557:18;;;32550:62;-1:-1:-1;;;32628:18:33;;;32621:51;32689:19;;16653:128:31;32297:417:33;16653:128:31;16842:9;16812:2;:20;;;:26;;;:39;16791:144;;;;-1:-1:-1;;;16791:144:31;;32921:2:33;16791:144:31;;;32903:21:33;32960:2;32940:18;;;32933:30;32999:34;32979:18;;;32972:62;-1:-1:-1;;;33050:18:33;;;33043:56;33116:19;;16791:144:31;32719:422:33;16791:144:31;16946:12;16961:11;16969:2;16961:7;:11::i;:::-;16946:26;;16983:143;17015:2;:9;;;:25;;;17054:38;17089:2;17054:34;:38::i;:::-;17106:10;16983:18;:143::i;:::-;17137:25;17159:2;17137:21;:25::i;:::-;17229:11;17194:14;;;:8;:14;;;;;:31;;;:46;;;;;;;;:::i;:::-;;17173:149;;;;-1:-1:-1;;;17173:149:31;;33348:2:33;17173:149:31;;;33330:21:33;33387:2;33367:18;;;33360:30;33426:34;33406:18;;;33399:62;-1:-1:-1;;;33477:18:33;;;33470:54;33541:19;;17173:149:31;33146:420:33;17173:149:31;17393:17;;17353:36;17363:2;:9;;;:25;;;17353:9;:36::i;:::-;:57;;17332:149;;;;-1:-1:-1;;;17332:149:31;;33773:2:33;17332:149:31;;;33755:21:33;33812:2;33792:18;;;33785:30;33851:34;33831:18;;;33824:62;-1:-1:-1;;;33902:18:33;;;33895:43;33955:19;;17332:149:31;33571:409:33;17332:149:31;17492:14;17538;3515:2:13;17538::31;:14;:::i;:::-;17509:2;:20;;;:26;;;:43;;;;:::i;:::-;17492:60;;17593:15;;17583:6;:25;;:54;;;;;17622:15;;17612:6;:25;;17583:54;17562:168;;;;-1:-1:-1;;;17562:168:31;;34187:2:33;17562:168:31;;;34169:21:33;34226:2;34206:18;;;34199:30;34265:34;34245:18;;;34238:62;34336:34;34316:18;;;34309:62;-1:-1:-1;;;34387:19:33;;;34380:34;34431:19;;17562:168:31;33985:471:33;17562:168:31;17789:40;17795:2;:9;;;:25;;;17822:6;17789:5;:40::i;:::-;17882:9;;;;:25;;;;;-1:-1:-1;;;;;17875:33:31;;;;;:6;:33;;;;;;;:58;;17926:6;17875:50;:58::i;:::-;17846:9;;;;;:25;;;;;-1:-1:-1;;;;;17839:33:31;;;;;;;:6;:33;;;;;;:94;;;;17967:9;;:25;;;17948:53;;1394:25:33;;;17948:53:31;;;;;1367:18:33;17948:53:31;;;;;;;18028:34;;;;;;;;;;18043:13;18028:34;;18058:3;18028:34;;;;;;;18011:14;;;:8;:14;;;;;;:51;;;;:14;;-1:-1:-1;;18011:51:31;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18077:16;18084:4;18090:2;18077:16;;;;;;;:::i;:::-;;;;;;;;18127:15;18145:90;18179:6;18199:2;:20;;;:26;;;18145:90;;:20;:90::i;:::-;18127:108;;18245:52;18251:2;:20;;;:36;;;18289:7;18245:5;:52::i;:::-;18307:41;18313:2;:9;;;:25;;;18340:7;18307:5;:41::i;:::-;18386:12;18401:130;18438:66;18462:2;:20;;;:26;;;18490:13;;18438:23;:66::i;:::-;18518:3;18401:23;:130::i;:::-;18556:9;;;;:25;;;18386:145;;-1:-1:-1;18541:62:31;;18583:19;:9;18386:145;18583:13;:19::i;:::-;18541:14;:62::i;:::-;18640:24;;:34;;18669:4;18640:28;:34::i;:::-;18613:24;:61;-1:-1:-1;18692:4:31;;16144:2559;-1:-1:-1;;;;;;16144:2559:31:o;2538:110:11:-;2617:7;;:24;;-1:-1:-1;;;2617:24:11;;2591:7;;-1:-1:-1;;;;;2617:7:11;;:18;;:24;;2636:4;;2617:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2908:213:1:-;2993:4;-1:-1:-1;;;;;;3016:58:1;;-1:-1:-1;;;3016:58:1;;:98;;-1:-1:-1;;;;;;;;;;1168:51:26;;;3078:36:1;1060:166:26;7536:512:31;7658:14;7692:30;7711:10;7692:18;:30::i;:::-;7688:354;;;-1:-1:-1;;;7941:14:31;7937:23;7924:37;7920:2;7916:46;3011:131:9;:::o;7688:354:31:-;-1:-1:-1;929:10:19;;13570:104:31:o;10846:370:13:-;-1:-1:-1;;;;;10977:19:13;;10969:68;;;;-1:-1:-1;;;10969:68:13;;34852:2:33;10969:68:13;;;34834:21:33;34891:2;34871:18;;;34864:30;34930:34;34910:18;;;34903:62;-1:-1:-1;;;34981:18:33;;;34974:34;35025:19;;10969:68:13;34650:400:33;10969:68:13;-1:-1:-1;;;;;11055:21:13;;11047:68;;;;-1:-1:-1;;;11047:68:13;;35257:2:33;11047:68:13;;;35239:21:33;35296:2;35276:18;;;35269:30;35335:34;35315:18;;;35308:62;-1:-1:-1;;;35386:18:33;;;35379:32;35428:19;;11047:68:13;35055:398:33;11047:68:13;-1:-1:-1;;;;;11126:18:13;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11177:32;;1394:25:33;;;11177:32:13;;1367:18:33;11177:32:13;;;;;;;10846:370;;;:::o;11497:441::-;11627:24;11654:25;11664:5;11671:7;11654:9;:25::i;:::-;11627:52;;-1:-1:-1;;11693:16:13;:37;11689:243;;11774:6;11754:16;:26;;11746:68;;;;-1:-1:-1;;;11746:68:13;;35660:2:33;11746:68:13;;;35642:21:33;35699:2;35679:18;;;35672:30;35738:31;35718:18;;;35711:59;35787:18;;11746:68:13;35458:353:33;11746:68:13;11856:51;11865:5;11872:7;11900:6;11881:16;:25;11856:8;:51::i;7815:818::-;-1:-1:-1;;;;;7941:18:13;;7933:68;;;;-1:-1:-1;;;7933:68:13;;36018:2:33;7933:68:13;;;36000:21:33;36057:2;36037:18;;;36030:30;36096:34;36076:18;;;36069:62;-1:-1:-1;;;36147:18:33;;;36140:35;36192:19;;7933:68:13;35816:401:33;7933:68:13;-1:-1:-1;;;;;8019:16:13;;8011:64;;;;-1:-1:-1;;;8011:64:13;;36424:2:33;8011:64:13;;;36406:21:33;36463:2;36443:18;;;36436:30;36502:34;36482:18;;;36475:62;-1:-1:-1;;;36553:18:33;;;36546:33;36596:19;;8011:64:13;36222:399:33;8011:64:13;8086:38;8107:4;8113:2;8117:6;8086:20;:38::i;:::-;-1:-1:-1;;;;;8157:15:13;;8135:19;8157:15;;;:9;:15;;;;;;8190:21;;;;8182:72;;;;-1:-1:-1;;;8182:72:13;;36828:2:33;8182:72:13;;;36810:21:33;36867:2;36847:18;;;36840:30;36906:34;36886:18;;;36879:62;-1:-1:-1;;;36957:18:33;;;36950:36;37003:19;;8182:72:13;36626:402:33;8182:72:13;-1:-1:-1;;;;;8288:15:13;;;;;;;:9;:15;;;;;;8306:20;;;8288:38;;8503:13;;;;;;;;;;:23;;;;;;8552:26;;-1:-1:-1;;;;;;;;;;;8552:26:13;;;8320:6;1394:25:33;;1382:2;1367:18;;1248:177;8552:26:13;;;;;;;;8589:37;5138:145:1;4359:175:31;4436:34;-1:-1:-1;;;;;;;;;;;4457:12:31;:10;:12::i;4436:34::-;4415:112;;;;-1:-1:-1;;;4415:112:31;;37235:2:33;4415:112:31;;;37217:21:33;37274:2;37254:18;;;37247:30;37313:33;37293:18;;;37286:61;37364:18;;4415:112:31;37033:355:33;2939:1183:32;3036:9;;;;:25;;;-1:-1:-1;;;;;3036:39:32;3015:114;;;;-1:-1:-1;;;3015:114:32;;37595:2:33;3015:114:32;;;37577:21:33;37634:2;37614:18;;;37607:30;37673;37653:18;;;37646:58;37721:18;;3015:114:32;37393:352:33;3015:114:32;3160:20;;;;:36;;;-1:-1:-1;;;;;3160:50:32;3139:136;;;;-1:-1:-1;;;3139:136:32;;37952:2:33;3139:136:32;;;37934:21:33;37991:2;37971:18;;;37964:30;38030:34;38010:18;;;38003:62;-1:-1:-1;;;38081:18:33;;;38074:37;38128:19;;3139:136:32;37750:403:33;3139:136:32;3559:20;;;;:23;3548:35;;;;3559:23;3548:35;;;:::i;:::-;;;;-1:-1:-1;;3548:35:32;;;;;;;;;;3538:46;;3548:35;3538:46;;;;3504:9;;;;:12;3538:46;;3493:24;;;;:::i;:::-;;;;;;;;;;;;;3483:35;;;;;;:101;;3462:201;;;;-1:-1:-1;;;3462:201:32;;38765:2:33;3462:201:32;;;38747:21:33;38804:2;38784:18;;;38777:30;38843:34;38823:18;;;38816:62;-1:-1:-1;;;38894:18:33;;;38887:51;38955:19;;3462:201:32;38563:417:33;3462:201:32;3723:2;:20;;;:36;;;-1:-1:-1;;;;;3694:65:32;:2;:9;;;:25;;;-1:-1:-1;;;;;3694:65:32;;;3673:169;;;;-1:-1:-1;;;3673:169:32;;39187:2:33;3673:169:32;;;39169:21:33;39226:2;39206:18;;;39199:30;39265:34;39245:18;;;39238:62;-1:-1:-1;;;39316:18:33;;;39309:55;39381:19;;3673:169:32;38985:421:33;3673:169:32;3892:2;:20;;;:24;;;3874:15;:42;3853:131;;;;-1:-1:-1;;;3853:131:32;;39613:2:33;3853:131:32;;;39595:21:33;39652:2;39632:18;;;39625:30;39691:34;39671:18;;;39664:62;-1:-1:-1;;;39742:18:33;;;39735:40;39792:19;;3853:131:32;39411:406:33;3853:131:32;4033:2;:20;;;:24;;;4015:15;:42;3994:121;;;;-1:-1:-1;;;3994:121:32;;40024:2:33;3994:121:32;;;40006:21:33;;;40043:18;;;40036:30;40102:34;40082:18;;;40075:62;40154:18;;3994:121:32;39822:356:33;11393:392:31;-1:-1:-1;;;;;11494:21:31;;11473:110;;;;-1:-1:-1;;;11473:110:31;;40385:2:33;11473:110:31;;;40367:21:33;40424:2;40404:18;;;40397:30;40463:34;40443:18;;;40436:62;-1:-1:-1;;;40514:18:33;;;40507:40;40564:19;;11473:110:31;40183:406:33;11473:110:31;-1:-1:-1;;;;;11628:15:31;;;;;;:6;:15;;;;;;:25;-1:-1:-1;11624:155:31;;-1:-1:-1;;;;;11687:15:31;;;;;;:6;:15;;;;;;:27;;11707:6;11687:19;:27::i;:::-;-1:-1:-1;;;;;11669:15:31;;;;;;:6;:15;;;;;;:45;;;;11733:35;;;;;;11761:6;1394:25:33;;1382:2;1367:18;;1248:177;11733:35:31;;;;;;;;11393:392;;:::o;4265:306:32:-;4363:7;4449:115;4490:39;4514:6;4522;4490:23;:39::i;9764:659:13:-;-1:-1:-1;;;;;9847:21:13;;9839:67;;;;-1:-1:-1;;;9839:67:13;;40796:2:33;9839:67:13;;;40778:21:33;40835:2;40815:18;;;40808:30;40874:34;40854:18;;;40847:62;-1:-1:-1;;;40925:18:33;;;40918:31;40966:19;;9839:67:13;40594:397:33;9839:67:13;9917:49;9938:7;9955:1;9959:6;9917:20;:49::i;:::-;-1:-1:-1;;;;;10002:18:13;;9977:22;10002:18;;;:9;:18;;;;;;10038:24;;;;10030:71;;;;-1:-1:-1;;;10030:71:13;;41198:2:33;10030:71:13;;;41180:21:33;41237:2;41217:18;;;41210:30;41276:34;41256:18;;;41249:62;-1:-1:-1;;;41327:18:33;;;41320:32;41369:19;;10030:71:13;40996:398:33;10030:71:13;-1:-1:-1;;;;;10135:18:13;;;;;;:9;:18;;;;;;;;10156:23;;;10135:44;;10272:12;:22;;;;;;;10320:37;1394:25:33;;;10135:18:13;;;-1:-1:-1;;;;;;;;;;;10320:37:13;1367:18:33;10320:37:13;;;;;;;5138:145:1;;;:::o;8909:535:13:-;-1:-1:-1;;;;;8992:21:13;;8984:65;;;;-1:-1:-1;;;8984:65:13;;41601:2:33;8984:65:13;;;41583:21:33;41640:2;41620:18;;;41613:30;41679:33;41659:18;;;41652:61;41730:18;;8984:65:13;41399:355:33;8984:65:13;9060:49;9089:1;9093:7;9102:6;9060:20;:49::i;:::-;9136:6;9120:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9288:18:13;;;;;;:9;:18;;;;;;;;:28;;;;;;9341:37;1394:25:33;;;-1:-1:-1;;;;;;;;;;;9341:37:13;1367:18:33;9341:37:13;;;;;;;6247:214:1;;:::o;3647:103::-;3713:30;3724:4;3730:12;:10;:12::i;:::-;3713:10;:30::i;2317:166:0:-;2404:31;2421:4;2427:7;2404:16;:31::i;:::-;2445:18;;;;:12;:18;;;;;:31;;2468:7;2445:22;:31::i;2856:160:23:-;2909:7;2935:74;1609:95;2969:17;4400:12;;;4316:103;2969:17;4745:15;;3198:73;;;;;;46534:25:33;;;46575:18;;;46568:34;;;46618:18;;;46611:34;;;3242:13:23;46661:18:33;;;46654:34;3265:4:23;46704:19:33;;;46697:61;3162:7:23;;46506:19:33;;3198:73:23;;;;;;;;;;;;3188:84;;;;;;3181:91;;3022:257;;;;;;2572:171:0;2660:32;2678:4;2684:7;2660:17;:32::i;:::-;2702:18;;;;:12;:18;;;;;:34;;2728:7;2702:25;:34::i;1563:151:6:-;-1:-1:-1;;;;;;;;;;;1642:65:6;-1:-1:-1;;;;;1642:65:6;;1563:151::o;7131:90:31:-;7200:14;:12;:14::i;2938:974:6:-;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:6;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:6;;;;;;;;-1:-1:-1;;3531:63:6;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:6;;42150:2:33;3758:56:6;;;42132:21:33;42189:2;42169:18;;;42162:30;42228:34;42208:18;;;42201:62;-1:-1:-1;;;42279:18:33;;;42272:44;42333:19;;3758:56:6;41948:410:33;3527:302:6;-1:-1:-1;;;;;;;;;;;3644:28:6;;3636:82;;;;-1:-1:-1;;;3636:82:6;;42565:2:33;3636:82:6;;;42547:21:33;42604:2;42584:18;;;42577:30;42643:34;42623:18;;;42616:62;-1:-1:-1;;;42694:18:33;;;42687:39;42743:19;;3636:82:6;42363:405:33;3636:82:6;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;2676:117:10:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:10::1;::::0;;2764:22:::1;2773:12;:10;:12::i;:::-;2764:22;;;;;;:::i;:::-;;;;;;;;2676:117::o:0;2429:115::-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:10::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;:10;:12::i;9571:156:30:-:0;9645:7;9695:22;9699:3;9711:5;9695:3;:22::i;1191:320:18:-;-1:-1:-1;;;;;1481:19:18;;:23;;;1191:320::o;4994:691:31:-;5368:13:8;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;:::-;5153:26:31::1;:24;:26::i;:::-;5189:25;:23;:25::i;:::-;5224:32;:30;:32::i;:::-;5266:42;:40;:42::i;:::-;5318:36;5341:4;5347:6;5318:22;:36::i;:::-;5364:32;:30;:32::i;:::-;5406:27;:25;:27::i;:::-;5443:32;:30;:32::i;:::-;5485:38;5509:4;5515:7;5485:23;:38::i;:::-;5543:30;:28;:30::i;:::-;5583:34;:32;:34::i;:::-;5627:51;5656:4;5662:6;5670:7;5627:28;:51::i;2585:287:12:-:0;1835:1;2717:7;;:19;;2709:63;;;;-1:-1:-1;;;2709:63:12;;43387:2:33;2709:63:12;;;43369:21:33;43426:2;43406:18;;;43399:30;43465:33;43445:18;;;43438:61;43516:18;;2709:63:12;43185:355:33;2709:63:12;1835:1;2847:7;:18;2585:287::o;3133:96:29:-;3191:7;3217:5;3221:1;3217;:5;:::i;3070:124:11:-;3151:7;;:36;;-1:-1:-1;;;3151:36:11;;-1:-1:-1;;;;;3151:7:11;;;;:15;;3174:6;;3151:36;;3182:4;;3151:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3070:124;;:::o;2878:209:12:-;1792:1;3058:7;:22;2878:209::o;3904:176:23:-;3981:7;4007:66;4040:20;:18;:20::i;:::-;4062:10;8508:57:22;;-1:-1:-1;;;8508:57:22;;;48267:27:33;48310:11;;;48303:27;;;48346:12;;;48339:28;;;8472:7:22;;48383:12:33;;8508:57:22;;;;;;;;;;;;8498:68;;;;;;8491:75;;8379:194;;;;;3688:227;3766:7;3786:17;3805:18;3827:27;3838:4;3844:9;3827:10;:27::i;:::-;3785:69;;;;3864:18;3876:5;3864:11;:18::i;:::-;-1:-1:-1;3899:9:22;3688:227;-1:-1:-1;;;3688:227:22:o;6230:709:32:-;6342:7;1332:66;6443:30;;6511:2;:11;;;6495:29;;;;;;6562:2;:8;;;6546:26;;;;;;6610:2;:5;;;6594:23;;;;;;6639:21;6650:2;:9;;;6639:10;:21::i;:::-;6682:43;6704:2;:20;;;6682:21;:43::i;:::-;6747:41;6768:2;:19;;;6747:20;:41::i;:::-;6826:15;;;;6810:33;;;;;;;6881:17;;;;6865:35;;;;;;6411:507;;;;;;;;;;;;44046:25:33;;;44102:2;44087:18;;44080:34;;;;44145:2;44130:18;;44123:34;;;;44188:2;44173:18;;44166:34;;;;44231:3;44216:19;;44209:35;;;;44275:3;44260:19;;44253:35;44319:3;44304:19;;44297:35;44363:3;44348:19;;44341:35;44407:3;44392:19;;44385:35;44033:3;44018:19;;43675:751;6411:507:32;;;;;;;;;;;;;6384:548;;;;;;6365:567;;6230:709;;;:::o;9114:115:30:-;9177:7;9203:19;9211:3;4553:18;;4471:107;2766:96:29;2824:7;2850:5;2854:1;2850;:5;:::i;3476:96::-;3534:7;3560:5;3564:1;3560;:5;:::i;3861:96::-;3919:7;3945:5;3949:1;3945;:5;:::i;10512:803:31:-;10694:44;10721:4;10727:2;10731:6;10694:26;:44::i;:::-;10801:34;-1:-1:-1;;;;;;;;;;;10822:12:31;:10;:12::i;10801:34::-;:72;;;-1:-1:-1;;;;;;10855:18:31;;;10801:72;:108;;;-1:-1:-1;;;;;;10893:16:31;;;10801:108;:167;;;;10948:20;;10929:15;10939:4;10929:9;:15::i;:::-;:39;;10801:167;10780:259;;;;-1:-1:-1;;;10780:259:31;;44855:2:33;10780:259:31;;;44837:21:33;44894:2;44874:18;;;44867:30;44933:34;44913:18;;;44906:62;-1:-1:-1;;;44984:18:33;;;44977:43;45037:19;;10780:259:31;44653:409:33;10780:259:31;11070:34;-1:-1:-1;;;;;;;;;;;11091:12:31;:10;:12::i;11070:34::-;:72;;;-1:-1:-1;;;;;;11124:18:31;;;11070:72;:108;;;-1:-1:-1;;;;;;11162:16:31;;;11070:108;:164;;;;11215:19;;11198:13;11208:2;11198:9;:13::i;:::-;:36;;11070:164;11049:259;;;;-1:-1:-1;;;11049:259:31;;45269:2:33;11049:259:31;;;45251:21:33;45308:2;45288:18;;;45281:30;45347:34;45327:18;;;45320:62;-1:-1:-1;;;45398:18:33;;;45391:46;45454:19;;11049:259:31;45067:412:33;4031:501:1;4119:22;4127:4;4133:7;4119;:22::i;:::-;4114:412;;4302:39;4333:7;4302:30;:39::i;:::-;4412:49;4451:4;4458:2;4412:30;:49::i;:::-;4209:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4209:274:1;;;;;;;;;;-1:-1:-1;;;4157:358:1;;;;;;;:::i;7796:233::-;7879:22;7887:4;7893:7;7879;:22::i;:::-;7874:149;;7917:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7917:29:1;;;;;;;;;:36;;-1:-1:-1;;7917:36:1;7949:4;7917:36;;;7999:12;:10;:12::i;:::-;-1:-1:-1;;;;;7972:40:1;7990:7;-1:-1:-1;;;;;7972:40:1;7984:4;7972:40;;;;;;;;;;7796:233;;:::o;8313:150:30:-;8383:4;8406:50;8411:3;-1:-1:-1;;;;;8431:23:30;;8406:4;:50::i;8200:234:1:-;8283:22;8291:4;8297:7;8283;:22::i;:::-;8279:149;;;8353:5;8321:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8321:29:1;;;;;;;;;:37;;-1:-1:-1;;8321:37:1;;;8404:12;:10;:12::i;:::-;-1:-1:-1;;;;;8377:40:1;8395:7;-1:-1:-1;;;;;8377:40:1;8389:4;8377:40;;;;;;;;;;8200:234;;:::o;8631:156:30:-;8704:4;8727:53;8735:3;-1:-1:-1;;;;;8755:23:30;;8727:7;:53::i;1805:281:6:-;1886:48;1916:17;1886:29;:48::i;:::-;1878:106;;;;-1:-1:-1;;;1878:106:6;;46971:2:33;1878:106:6;;;46953:21:33;47010:2;46990:18;;;46983:30;47049:34;47029:18;;;47022:62;-1:-1:-1;;;47100:18:33;;;47093:43;47153:19;;1878:106:6;46769:409:33;1878:106:6;-1:-1:-1;;;;;;;;;;;1994:85:6;;-1:-1:-1;;;;;;1994:85:6;-1:-1:-1;;;;;1994:85:6;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;2188:106:10:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:10;;47385:2:33;2246:41:10;;;47367:21:33;47424:2;47404:18;;;47397:30;-1:-1:-1;;;47443:18:33;;;47436:50;47503:18;;2246:41:10;47183:344:33;2010:106:10;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:10;;47734:2:33;2071:38:10;;;47716:21:33;47773:2;47753:18;;;47746:30;-1:-1:-1;;;47792:18:33;;;47785:46;47848:18;;2071:38:10;47532:340:33;4920:118:30;4987:7;5013:3;:11;;5025:5;5013:18;;;;;;;;:::i;:::-;;;;;;;;;5006:25;;4920:118;;;;:::o;776:69:19:-;5368:13:8;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;2272:159:13:-;5368:13:8;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;:::-;2384:13:13;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2407:17:13;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;1166:95:10:-:0;5368:13:8;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;:::-;1239:7:10::1;:15:::0;;-1:-1:-1;;1239:15:10::1;::::0;;1166:95::o;2473:297:23:-;5368:13:8;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;:::-;2606:22:23;;::::1;::::0;;::::1;::::0;2662:25;;;;;::::1;::::0;2697:12:::1;:25:::0;;;;2732:15:::1;:31:::0;2473:297::o;1458:146:11:-;5368:13:8;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;:::-;1544:23:11::1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1534:7:11::1;:33:::0;;-1:-1:-1;;;;;;1534:33:11::1;-1:-1:-1::0;;;;;1534:33:11;;;::::1;::::0;;::::1;::::0;;1577:20:::1;::::0;;-1:-1:-1;;;1577:20:11;;;;:18:::1;::::0;:20:::1;::::0;;::::1;::::0;-1:-1:-1;;1577:20:11;;;;;;;;-1:-1:-1;1534:33:11;1577:20;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;1990:109:12::0;5368:13:8;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;6119:694:31:-;5368:13:8;;;;;;;5360:69;;;;-1:-1:-1;;;5360:69:8;;;;;;;:::i;:::-;6268:44:31::1;2374:4:1;6299:12:31;:10;:12::i;:::-;6268:10;:44::i;:::-;6322:37;-1:-1:-1::0;;;;;;;;;;;6346:12:31::1;:10;:12::i;6322:37::-;6399:14;3515:2:13::0;6399::31::1;:14;:::i;:::-;6393:20;::::0;:3:::1;:20;:::i;:::-;6370;:43:::0;6468:14:::1;3515:2:13::0;6468::31::1;:14;:::i;:::-;6462:20;::::0;:3:::1;:20;:::i;:::-;6440:19;:42:::0;6526:2:::1;6510:13;:18:::0;3515:2:13;6579:14:31::1;::::0;:2:::1;:14;:::i;:::-;6573:20;::::0;:3:::1;:20;:::i;:::-;6553:17;:40:::0;6639:1:::1;6621:15;:19:::0;6668:13:::1;6650:15;:31:::0;6714:14:::1;3515:2:13::0;6714::31::1;:14;:::i;:::-;6710:18;::::0;:1:::1;:18;:::i;:::-;6692:15;:36:::0;6776:14:::1;3515:2:13::0;6776::31::1;:14;:::i;:::-;6771:19;::::0;:2:::1;:19;:::i;:::-;6753:15;:37:::0;-1:-1:-1;;;6119:694:31:o;2172:730:22:-;2253:7;2262:12;2290:9;:16;2310:2;2290:22;2286:610;;;2626:4;2611:20;;2605:27;2675:4;2660:20;;2654:27;2732:4;2717:20;;2711:27;2328:9;2703:36;2773:25;2784:4;2703:36;2605:27;2654;2773:10;:25::i;:::-;2766:32;;;;;;;;;2286:610;-1:-1:-1;2845:1:22;;-1:-1:-1;2849:35:22;2286:610;2172:730;;;;;:::o;597:511::-;674:20;665:5;:29;;;;;;;;:::i;:::-;;661:441;;;597:511;:::o;661:441::-;770:29;761:5;:38;;;;;;;;:::i;:::-;;757:345;;;815:34;;-1:-1:-1;;;815:34:22;;48608:2:33;815:34:22;;;48590:21:33;48647:2;48627:18;;;48620:30;-1:-1:-1;;;48666:18:33;;;48659:54;48730:18;;815:34:22;48406:348:33;757:345:22;879:35;870:5;:44;;;;;;;;:::i;:::-;;866:236;;;930:41;;-1:-1:-1;;;930:41:22;;48961:2:33;930:41:22;;;48943:21:33;49000:2;48980:18;;;48973:30;49039:33;49019:18;;;49012:61;49090:18;;930:41:22;48759:355:33;866:236:22;1001:30;992:5;:39;;;;;;;;:::i;:::-;;988:114;;;1047:44;;-1:-1:-1;;;1047:44:22;;49321:2:33;1047:44:22;;;49303:21:33;49360:2;49340:18;;;49333:30;49399:34;49379:18;;;49372:62;-1:-1:-1;;;49450:18:33;;;49443:32;49492:19;;1047:44:22;49119:398:33;4577:343:32;4822:11;;4806:29;;;;;;;4857:24;;;;4737:162;;;440:66;4737:162;;;49724:25:33;;;;49765:18;;49758:34;;;;-1:-1:-1;;;;;49828:32:33;49808:18;;;49801:60;4668:7:32;;49697:18:33;;4737:162:32;49522:345:33;4926:886:32;5048:7;1969:66;5149:27;;5214:17;:20;;;5198:38;;;;;;5258:17;:33;;;5329:17;:23;;;5313:41;;;;;;5392:17;:28;;;5376:46;;;;;;5460:17;:23;;;5444:41;;;;;;5523:17;:27;;;5507:45;;;;;;5574:17;:23;;;5619:17;:23;;;5664:17;:23;;;5709:17;:21;;;5752:17;:21;;;5117:674;;;;;;;;;;;;;;;;;;50325:25:33;;;50381:2;50366:18;;50359:34;;;;-1:-1:-1;;;;;50429:32:33;;;;50424:2;50409:18;;50402:60;50493:2;50478:18;;50471:34;;;;50536:3;50521:19;;50514:35;;;;50449:3;50565:19;;50558:35;;;;50624:3;50609:19;;50602:35;50686:4;50674:17;50668:3;50653:19;;50646:46;50723:3;50708:19;;50701:35;50767:3;50752:19;;50745:35;50811:3;50796:19;;50789:36;50856:3;50841:19;;50834:36;50312:3;50297:19;;49872:1004;5818:406:32;6102:19;;6086:37;;;;;;;6161:22;;;;6145:40;;;;;;6006:197;;;1581:66;6006:197;;;51083:25:33;;;;51124:18;;51117:34;;;;51167:18;;;51160:34;5937:7:32;;51056:18:33;;6006:197:32;50881:319:33;972:264:16;1928:7:10;;;;1173:9:16;1165:64;;;;-1:-1:-1;;;1165:64:16;;51407:2:33;1165:64:16;;;51389:21:33;51446:2;51426:18;;;51419:30;51485:34;51465:18;;;51458:62;-1:-1:-1;;;51536:18:33;;;51529:40;51586:19;;1165:64:16;51205:406:33;2151:149:21;2209:13;2241:52;-1:-1:-1;;;;;2253:22:21;;338:2;1562:437;1637:13;1662:19;1694:10;1698:6;1694:1;:10;:::i;:::-;:14;;1707:1;1694:14;:::i;:::-;-1:-1:-1;;;;;1684:25:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1684:25:21;;1662:47;;-1:-1:-1;;;1719:6:21;1726:1;1719:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1719:15:21;;;;;;;;;-1:-1:-1;;;1744:6:21;1751:1;1744:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1744:15:21;;;;;;;;-1:-1:-1;1774:9:21;1786:10;1790:6;1786:1;:10;:::i;:::-;:14;;1799:1;1786:14;:::i;:::-;1774:26;;1769:128;1806:1;1802;:5;1769:128;;;-1:-1:-1;;;1849:5:21;1857:3;1849:11;1840:21;;;;;;;:::i;:::-;;;;1828:6;1835:1;1828:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1828:33:21;;;;;;;;-1:-1:-1;1885:1:21;1875:11;;;;;1809:3;;;:::i;:::-;;;1769:128;;;-1:-1:-1;1914:10:21;;1906:55;;;;-1:-1:-1;;;1906:55:21;;51959:2:33;1906:55:21;;;51941:21:33;;;51978:18;;;51971:30;52037:34;52017:18;;;52010:62;52089:18;;1906:55:21;51757:356:33;2222:404:30;2285:4;4359:19;;;:12;;;:19;;;;;;2301:319;;-1:-1:-1;2343:23:30;;;;;;;;:11;:23;;;;;;;;;;;;;2523:18;;2501:19;;;:12;;;:19;;;;;;:40;;;;2555:11;;2301:319;-1:-1:-1;2604:5:30;2597:12;;2794:1388;2860:4;2997:19;;;:12;;;:19;;;;;;3031:15;;3027:1149;;3400:21;3424:14;3437:1;3424:10;:14;:::i;:::-;3472:18;;3400:38;;-1:-1:-1;3452:17:30;;3472:22;;3493:1;;3472:22;:::i;:::-;3452:42;;3526:13;3513:9;:26;3509:398;;3559:17;3579:3;:11;;3591:9;3579:22;;;;;;;;:::i;:::-;;;;;;;;;3559:42;;3730:9;3701:3;:11;;3713:13;3701:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3813:23;;;:12;;;:23;;;;;:36;;;3509:398;3985:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4077:3;:12;;:19;4090:5;4077:19;;;;;;;;;;;4070:26;;;4118:4;4111:11;;;;;;;3027:1149;4160:5;4153:12;;;;;2192:152:6;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:6;;;;;;;;2192:152;:::o;7088:455::-;7171:12;7203:37;7233:6;7203:29;:37::i;:::-;7195:88;;;;-1:-1:-1;;;7195:88:6;;52452:2:33;7195:88:6;;;52434:21:33;52491:2;52471:18;;;52464:30;52530:34;52510:18;;;52503:62;-1:-1:-1;;;52581:18:33;;;52574:36;52627:19;;7195:88:6;52250:402:33;7195:88:6;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:6;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;7088:455;-1:-1:-1;;;;;7088:455:6:o;7146:110:1:-;7224:25;7235:4;7241:7;7224:10;:25::i;5096:1494:22:-;5222:7;;-1:-1:-1;;;;;6133:79:22;;6129:161;;;-1:-1:-1;6244:1:22;;-1:-1:-1;6248:30:22;6228:51;;6129:161;6401:24;;;6384:14;6401:24;;;;;;;;;53163:25:33;;;53236:4;53224:17;;53204:18;;;53197:45;;;;53258:18;;;53251:34;;;53301:18;;;53294:34;;;6401:24:22;;53135:19:33;;6401:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6401:24:22;;-1:-1:-1;;6401:24:22;;;-1:-1:-1;;;;;;;6439:20:22;;6435:101;;6491:1;6495:29;6475:50;;;;;;;6435:101;6554:6;-1:-1:-1;6562:20:22;;-1:-1:-1;5096:1494:22;;;;;;;;:::o;7443:295:18:-;7589:12;7617:7;7613:119;;;-1:-1:-1;7647:10:18;7640:17;;7613:119;7688:33;7696:10;7708:12;7903:17;;:21;7899:379;;8131:10;8125:17;8187:15;8174:10;8170:2;8166:19;8159:44;7899:379;8254:12;8247:20;;-1:-1:-1;;;8247:20:18;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:286:33;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:33;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;-1:-1:-1;;745:1:33;727:16;;720:27;497:258::o;760:::-;802:3;840:5;834:12;867:6;862:3;855:19;883:63;939:6;932:4;927:3;923:14;916:4;909:5;905:16;883:63;:::i;:::-;1000:2;979:15;-1:-1:-1;;975:29:33;966:39;;;;1007:4;962:50;;760:258;-1:-1:-1;;760:258:33:o;1023:220::-;1172:2;1161:9;1154:21;1135:4;1192:45;1233:2;1222:9;1218:18;1210:6;1192:45;:::i;1430:131::-;-1:-1:-1;;;;;1505:31:33;;1495:42;;1485:70;;1551:1;1548;1541:12;1566:134;1634:20;;1663:31;1634:20;1663:31;:::i;:::-;1566:134;;;:::o;1705:315::-;1773:6;1781;1834:2;1822:9;1813:7;1809:23;1805:32;1802:52;;;1850:1;1847;1840:12;1802:52;1889:9;1876:23;1908:31;1933:5;1908:31;:::i;:::-;1958:5;2010:2;1995:18;;;;1982:32;;-1:-1:-1;;;1705:315:33:o;2025:456::-;2102:6;2110;2118;2171:2;2159:9;2150:7;2146:23;2142:32;2139:52;;;2187:1;2184;2177:12;2139:52;2226:9;2213:23;2245:31;2270:5;2245:31;:::i;:::-;2295:5;-1:-1:-1;2352:2:33;2337:18;;2324:32;2365:33;2324:32;2365:33;:::i;:::-;2025:456;;2417:7;;-1:-1:-1;;;2471:2:33;2456:18;;;;2443:32;;2025:456::o;2486:180::-;2545:6;2598:2;2586:9;2577:7;2573:23;2569:32;2566:52;;;2614:1;2611;2604:12;2566:52;-1:-1:-1;2637:23:33;;2486:180;-1:-1:-1;2486:180:33:o;2853:127::-;2914:10;2909:3;2905:20;2902:1;2895:31;2945:4;2942:1;2935:15;2969:4;2966:1;2959:15;2985:257;3057:4;3051:11;;;3089:17;;-1:-1:-1;;;;;3121:34:33;;3157:22;;;3118:62;3115:88;;;3183:18;;:::i;:::-;3219:4;3212:24;2985:257;:::o;3247:255::-;3319:2;3313:9;3361:6;3349:19;;-1:-1:-1;;;;;3383:34:33;;3419:22;;;3380:62;3377:88;;;3445:18;;:::i;3507:250::-;3574:2;3568:9;3616:6;3604:19;;-1:-1:-1;;;;;3638:34:33;;3674:22;;;3635:62;3632:88;;;3700:18;;:::i;3762:719::-;3805:5;3858:3;3851:4;3843:6;3839:17;3835:27;3825:55;;3876:1;3873;3866:12;3825:55;3912:6;3899:20;-1:-1:-1;;;;;3975:2:33;3971;3968:10;3965:36;;;3981:18;;:::i;:::-;4056:2;4050:9;4024:2;4110:13;;-1:-1:-1;;4106:22:33;;;4130:2;4102:31;4098:40;4086:53;;;4154:18;;;4174:22;;;4151:46;4148:72;;;4200:18;;:::i;:::-;4240:10;4236:2;4229:22;4275:2;4267:6;4260:18;4321:3;4314:4;4309:2;4301:6;4297:15;4293:26;4290:35;4287:55;;;4338:1;4335;4328:12;4287:55;4402:2;4395:4;4387:6;4383:17;4376:4;4368:6;4364:17;4351:54;4449:1;4442:4;4437:2;4429:6;4425:15;4421:26;4414:37;4469:6;4460:15;;;;;;3762:719;;;;:::o;4486:482::-;4539:5;4587:4;4575:9;4570:3;4566:19;4562:30;4559:50;;;4605:1;4602;4595:12;4559:50;4627:22;;:::i;:::-;4618:31;;4685:9;4672:23;-1:-1:-1;;;;;4710:6:33;4707:30;4704:50;;;4750:1;4747;4740:12;4704:50;4777:46;4819:3;4810:6;4799:9;4795:22;4777:46;:::i;:::-;4770:5;4763:61;;4876:2;4865:9;4861:18;4848:32;4889:33;4914:7;4889:33;:::i;:::-;4949:2;4938:14;;4931:31;4942:5;4486:482;-1:-1:-1;;4486:482:33:o;4973:156::-;5039:20;;5099:4;5088:16;;5078:27;;5068:55;;5119:1;5116;5109:12;5134:1584;5198:5;5246:6;5234:9;5229:3;5225:19;5221:32;5218:52;;;5266:1;5263;5256:12;5218:52;5288:22;;:::i;:::-;5279:31;;5346:9;5333:23;-1:-1:-1;;;;;5416:2:33;5408:6;5405:14;5402:34;;;5432:1;5429;5422:12;5402:34;5459:46;5501:3;5492:6;5481:9;5477:22;5459:46;:::i;:::-;5452:5;5445:61;5538:38;5572:2;5561:9;5557:18;5538:38;:::i;:::-;5533:2;5526:5;5522:14;5515:62;5630:2;5619:9;5615:18;5602:32;5586:48;;5659:2;5649:8;5646:16;5643:36;;;5675:1;5672;5665:12;5643:36;5711:48;5755:3;5744:8;5733:9;5729:24;5711:48;:::i;:::-;5706:2;5699:5;5695:14;5688:72;5813:2;5802:9;5798:18;5785:32;5769:48;;5842:2;5832:8;5829:16;5826:36;;;5858:1;5855;5848:12;5826:36;5894:48;5938:3;5927:8;5916:9;5912:24;5894:48;:::i;:::-;5889:2;5882:5;5878:14;5871:72;5996:3;5985:9;5981:19;5968:33;5952:49;;6026:2;6016:8;6013:16;6010:36;;;6042:1;6039;6032:12;6010:36;6079:48;6123:3;6112:8;6101:9;6097:24;6079:48;:::i;:::-;6073:3;6066:5;6062:15;6055:73;6181:3;6170:9;6166:19;6153:33;6137:49;;6211:2;6201:8;6198:16;6195:36;;;6227:1;6224;6217:12;6195:36;;6264:48;6308:3;6297:8;6286:9;6282:24;6264:48;:::i;:::-;6258:3;6251:5;6247:15;6240:73;;6346:37;6378:3;6367:9;6363:19;6346:37;:::i;:::-;6340:3;6333:5;6329:15;6322:62;6445:3;6434:9;6430:19;6417:33;6411:3;6404:5;6400:15;6393:58;6470:3;6533:2;6522:9;6518:18;6505:32;6500:2;6493:5;6489:14;6482:56;;6557:3;6620:2;6609:9;6605:18;6592:32;6587:2;6580:5;6576:14;6569:56;;6644:3;6707:2;6696:9;6692:18;6679:32;6674:2;6667:5;6663:14;6656:56;;5134:1584;;;;:::o;6723:558::-;6786:5;6834:4;6822:9;6817:3;6813:19;6809:30;6806:50;;;6852:1;6849;6842:12;6806:50;6874:22;;:::i;:::-;6865:31;;6932:9;6919:23;-1:-1:-1;;;;;7002:2:33;6994:6;6991:14;6988:34;;;7018:1;7015;7008:12;6988:34;7045:46;7087:3;7078:6;7067:9;7063:22;7045:46;:::i;:::-;7038:5;7031:61;7145:2;7134:9;7130:18;7117:32;7101:48;;7174:2;7164:8;7161:16;7158:36;;;7190:1;7187;7180:12;7158:36;;7226:48;7270:3;7259:8;7248:9;7244:24;7226:48;:::i;:::-;7221:2;7214:5;7210:14;7203:72;;6723:558;;;;:::o;7286:1707::-;7353:5;7401:6;7389:9;7384:3;7380:19;7376:32;7373:52;;;7421:1;7418;7411:12;7373:52;7443:17;;:::i;:::-;7434:26;;7496:9;7483:23;-1:-1:-1;;;;;7566:2:33;7558:6;7555:14;7552:34;;;7582:1;7579;7572:12;7552:34;7609:46;7651:3;7642:6;7631:9;7627:22;7609:46;:::i;:::-;7602:5;7595:61;7709:2;7698:9;7694:18;7681:32;7665:48;;7738:2;7728:8;7725:16;7722:36;;;7754:1;7751;7744:12;7722:36;7790:48;7834:3;7823:8;7812:9;7808:24;7790:48;:::i;:::-;7785:2;7778:5;7774:14;7767:72;7892:2;7881:9;7877:18;7864:32;7848:48;;7921:2;7911:8;7908:16;7905:36;;;7937:1;7934;7927:12;7905:36;7973:48;8017:3;8006:8;7995:9;7991:24;7973:48;:::i;:::-;7968:2;7961:5;7957:14;7950:72;8075:2;8064:9;8060:18;8047:32;8031:48;;8104:2;8094:8;8091:16;8088:36;;;8120:1;8117;8110:12;8088:36;8156:55;8207:3;8196:8;8185:9;8181:24;8156:55;:::i;:::-;8151:2;8144:5;8140:14;8133:79;8265:3;8254:9;8250:19;8237:33;8221:49;;8295:2;8285:8;8282:16;8279:36;;;8311:1;8308;8301:12;8279:36;8348:66;8410:3;8399:8;8388:9;8384:24;8348:66;:::i;:::-;8342:3;8335:5;8331:15;8324:91;8468:3;8457:9;8453:19;8440:33;8424:49;;8498:2;8488:8;8485:16;8482:36;;;8514:1;8511;8504:12;8482:36;8551:65;8612:3;8601:8;8590:9;8586:24;8551:65;:::i;:::-;8545:3;8538:5;8534:15;8527:90;8670:3;8659:9;8655:19;8642:33;8626:49;;8700:2;8690:8;8687:16;8684:36;;;8716:1;8713;8706:12;8684:36;8753:48;8797:3;8786:8;8775:9;8771:24;8753:48;:::i;:::-;8747:3;8740:5;8736:15;8729:73;8855:3;8844:9;8840:19;8827:33;8811:49;;8885:2;8875:8;8872:16;8869:36;;;8901:1;8898;8891:12;8869:36;;8938:48;8982:3;8971:8;8960:9;8956:24;8938:48;:::i;:::-;8932:3;8925:5;8921:15;8914:73;;7286:1707;;;;:::o;8998:641::-;9142:6;9150;9203:2;9191:9;9182:7;9178:23;9174:32;9171:52;;;9219:1;9216;9209:12;9171:52;9259:9;9246:23;-1:-1:-1;;;;;9329:2:33;9321:6;9318:14;9315:34;;;9345:1;9342;9335:12;9315:34;9368:71;9431:7;9422:6;9411:9;9407:22;9368:71;:::i;:::-;9358:81;;9492:2;9481:9;9477:18;9464:32;9448:48;;9521:2;9511:8;9508:16;9505:36;;;9537:1;9534;9527:12;9505:36;;9560:73;9625:7;9614:8;9603:9;9599:24;9560:73;:::i;:::-;9550:83;;;8998:641;;;;;:::o;9644:315::-;9712:6;9720;9773:2;9761:9;9752:7;9748:23;9744:32;9741:52;;;9789:1;9786;9779:12;9741:52;9825:9;9812:23;9802:33;;9885:2;9874:9;9870:18;9857:32;9898:31;9923:5;9898:31;:::i;:::-;9948:5;9938:15;;;9644:315;;;;;:::o;10233:255::-;10300:6;10353:2;10341:9;10332:7;10328:23;10324:32;10321:52;;;10369:1;10366;10359:12;10321:52;10408:9;10395:23;10427:31;10452:5;10427:31;:::i;10930:456::-;11007:6;11015;11068:2;11056:9;11047:7;11043:23;11039:32;11036:52;;;11084:1;11081;11074:12;11036:52;11123:9;11110:23;11142:31;11167:5;11142:31;:::i;:::-;11192:5;-1:-1:-1;11248:2:33;11233:18;;11220:32;-1:-1:-1;;;;;11264:30:33;;11261:50;;;11307:1;11304;11297:12;11261:50;11330;11372:7;11363:6;11352:9;11348:22;11330:50;:::i;11391:127::-;11452:10;11447:3;11443:20;11440:1;11433:31;11483:4;11480:1;11473:15;11507:4;11504:1;11497:15;11523:410;11694:2;11679:18;;11727:1;11716:13;;11706:144;;11772:10;11767:3;11763:20;11760:1;11753:31;11807:4;11804:1;11797:15;11835:4;11832:1;11825:15;11706:144;11859:25;;;11915:2;11900:18;11893:34;11523:410;:::o;11938:592::-;12054:6;12062;12115:2;12103:9;12094:7;12090:23;12086:32;12083:52;;;12131:1;12128;12121:12;12083:52;12171:9;12158:23;-1:-1:-1;;;;;12241:2:33;12233:6;12230:14;12227:34;;;12257:1;12254;12247:12;12227:34;12280:71;12343:7;12334:6;12323:9;12319:22;12280:71;:::i;:::-;12270:81;;12404:2;12393:9;12389:18;12376:32;12360:48;;12433:2;12423:8;12420:16;12417:36;;;12449:1;12446;12439:12;12417:36;;12472:52;12516:7;12505:8;12494:9;12490:24;12472:52;:::i;12644:203::-;-1:-1:-1;;;;;12808:32:33;;;;12790:51;;12778:2;12763:18;;12644:203::o;12852:371::-;12949:6;13002:2;12990:9;12981:7;12977:23;12973:32;12970:52;;;13018:1;13015;13008:12;12970:52;13058:9;13045:23;-1:-1:-1;;;;;13083:6:33;13080:30;13077:50;;;13123:1;13120;13113:12;13077:50;13146:71;13209:7;13200:6;13189:9;13185:22;13146:71;:::i;:::-;13136:81;12852:371;-1:-1:-1;;;;12852:371:33:o;13228:797::-;13359:6;13367;13375;13383;13391;13399;13407;13415;13423;13476:3;13464:9;13455:7;13451:23;13447:33;13444:53;;;13493:1;13490;13483:12;13444:53;13529:9;13516:23;13506:33;;13586:2;13575:9;13571:18;13558:32;13548:42;;13637:2;13626:9;13622:18;13609:32;13599:42;;13688:2;13677:9;13673:18;13660:32;13650:42;;13739:3;13728:9;13724:19;13711:33;13701:43;;13791:3;13780:9;13776:19;13763:33;13753:43;;13843:3;13832:9;13828:19;13815:33;13805:43;;13895:3;13884:9;13880:19;13867:33;13857:43;;13950:3;13939:9;13935:19;13922:33;13964:31;13989:5;13964:31;:::i;:::-;14014:5;14004:15;;;13228:797;;;;;;;;;;;:::o;14030:248::-;14098:6;14106;14159:2;14147:9;14138:7;14134:23;14130:32;14127:52;;;14175:1;14172;14165:12;14127:52;-1:-1:-1;;14198:23:33;;;14268:2;14253:18;;;14240:32;;-1:-1:-1;14030:248:33:o;14283:743::-;14390:6;14398;14406;14459:2;14447:9;14438:7;14434:23;14430:32;14427:52;;;14475:1;14472;14465:12;14427:52;14515:9;14502:23;-1:-1:-1;;;;;14585:2:33;14577:6;14574:14;14571:34;;;14601:1;14598;14591:12;14571:34;14624:50;14666:7;14657:6;14646:9;14642:22;14624:50;:::i;:::-;14614:60;;14727:2;14716:9;14712:18;14699:32;14683:48;;14756:2;14746:8;14743:16;14740:36;;;14772:1;14769;14762:12;14740:36;14795:52;14839:7;14828:8;14817:9;14813:24;14795:52;:::i;:::-;14785:62;;14900:2;14889:9;14885:18;14872:32;14856:48;;14929:2;14919:8;14916:16;14913:36;;;14945:1;14942;14935:12;14913:36;;14968:52;15012:7;15001:8;14990:9;14986:24;14968:52;:::i;:::-;14958:62;;;14283:743;;;;;:::o;15359:524::-;15445:6;15453;15461;15514:2;15502:9;15493:7;15489:23;15485:32;15482:52;;;15530:1;15527;15520:12;15482:52;15569:9;15556:23;15588:31;15613:5;15588:31;:::i;:::-;15638:5;-1:-1:-1;15690:2:33;15675:18;;15662:32;;-1:-1:-1;15745:2:33;15730:18;;15717:32;-1:-1:-1;;;;;15761:30:33;;15758:50;;;15804:1;15801;15794:12;15758:50;15827;15869:7;15860:6;15849:9;15845:22;15827:50;:::i;15888:388::-;15956:6;15964;16017:2;16005:9;15996:7;15992:23;15988:32;15985:52;;;16033:1;16030;16023:12;15985:52;16072:9;16059:23;16091:31;16116:5;16091:31;:::i;:::-;16141:5;-1:-1:-1;16198:2:33;16183:18;;16170:32;16211:33;16170:32;16211:33;:::i;16877:380::-;16956:1;16952:12;;;;16999;;;17020:61;;17074:4;17066:6;17062:17;17052:27;;17020:61;17127:2;17119:6;17116:14;17096:18;17093:38;17090:161;;;17173:10;17168:3;17164:20;17161:1;17154:31;17208:4;17205:1;17198:15;17236:4;17233:1;17226:15;17090:161;;16877:380;;;:::o;19650:301::-;19699:3;19743:5;19737:12;19770:4;19765:3;19758:17;19796:47;19837:4;19832:3;19828:14;19814:12;19796:47;:::i;:::-;19896:4;19885:16;;;19879:23;-1:-1:-1;;;;;19875:49:33;19859:14;;;;19852:73;;;;-1:-1:-1;19784:59:33;19650:301;-1:-1:-1;19650:301:33:o;19956:1428::-;20016:3;20044:6;20085:5;20079:12;20112:2;20107:3;20100:15;20136:45;20177:2;20172:3;20168:12;20154;20136:45;:::i;:::-;20124:57;;;20229:4;20222:5;20218:16;20212:23;20244:50;20288:4;20283:3;20279:14;20263;-1:-1:-1;;;;;12601:31:33;12589:44;;12535:104;20244:50;;20342:4;20335:5;20331:16;20325:23;20390:3;20384:4;20380:14;20373:4;20368:3;20364:14;20357:38;20418:39;20452:4;20436:14;20418:39;:::i;:::-;20404:53;;;20505:4;20498:5;20494:16;20488:23;20555:3;20547:6;20543:16;20536:4;20531:3;20527:14;20520:40;20583:41;20617:6;20601:14;20583:41;:::i;:::-;20569:55;;;20672:4;20665:5;20661:16;20655:23;20722:3;20714:6;20710:16;20703:4;20698:3;20694:14;20687:40;20750:41;20784:6;20768:14;20750:41;:::i;:::-;20736:55;;;20839:4;20832:5;20828:16;20822:23;20889:3;20881:6;20877:16;20870:4;20865:3;20861:14;20854:40;20917:41;20951:6;20935:14;20917:41;:::i;:::-;20903:55;;;21006:4;20999:5;20995:16;20989:23;21021:48;21063:4;21058:3;21054:14;21038;10031:4;10020:16;10008:29;;9964:75;21021:48;-1:-1:-1;21118:4:33;21107:16;;;21101:23;21085:14;;;21078:47;21144:6;21186:14;;;21180:21;21166:12;;;21159:43;21221:6;21263:14;;;21257:21;21243:12;;;21236:43;21298:6;21340:14;;;21334:21;21320:12;;;;21313:43;;;;-1:-1:-1;21372:6:33;19956:1428::o;21389:365::-;21448:3;21492:5;21486:12;21519:4;21514:3;21507:17;21545:47;21586:4;21581:3;21577:14;21563:12;21545:47;:::i;:::-;21533:59;;21640:4;21633:5;21629:16;21623:23;21688:3;21682:4;21678:14;21671:4;21666:3;21662:14;21655:38;21709:39;21743:4;21727:14;21709:39;:::i;21759:1832::-;21992:6;21981:9;21974:25;22035:2;22030;22019:9;22015:18;22008:30;21955:4;22073:6;22067:13;22099:6;22141:2;22136;22125:9;22121:18;22114:30;22167:52;22214:3;22203:9;22199:19;22185:12;22167:52;:::i;:::-;22153:66;;22268:2;22260:6;22256:15;22250:22;22295:2;22291:7;22362:2;22350:9;22342:6;22338:22;22334:31;22329:2;22318:9;22314:18;22307:59;22389:41;22423:6;22407:14;22389:41;:::i;:::-;22375:55;;22479:2;22471:6;22467:15;22461:22;22439:44;;22548:2;22536:9;22528:6;22524:22;22520:31;22514:3;22503:9;22499:19;22492:60;22575:41;22609:6;22593:14;22575:41;:::i;:::-;22561:55;;22665:2;22657:6;22653:15;22647:22;22625:44;;22734:2;22722:9;22714:6;22710:22;22706:31;22700:3;22689:9;22685:19;22678:60;22761:48;22802:6;22786:14;22761:48;:::i;:::-;22747:62;;22858:3;22850:6;22846:16;22840:23;22818:45;;22928:2;22916:9;22908:6;22904:22;22900:31;22894:3;22883:9;22879:19;22872:60;22955:59;23007:6;22991:14;22955:59;:::i;:::-;22941:73;;23063:3;23055:6;23051:16;23045:23;23023:45;;23133:2;23121:9;23113:6;23109:22;23105:31;23099:3;23088:9;23084:19;23077:60;23160:58;23211:6;23195:14;23160:58;:::i;:::-;23146:72;;23267:3;23259:6;23255:16;23249:23;23227:45;;23336:2;23324:9;23316:6;23312:22;23308:31;23303:2;23292:9;23288:18;23281:59;23363:41;23397:6;23381:14;23363:41;:::i;:::-;23349:55;;23453:3;23445:6;23441:16;23435:23;23413:45;;23523:2;23511:9;23503:6;23499:22;23495:31;23489:3;23478:9;23474:19;23467:60;;;23544:41;23578:6;23562:14;23544:41;:::i;:::-;23536:49;21759:1832;-1:-1:-1;;;;;;21759:1832:33:o;23596:127::-;23657:10;23652:3;23648:20;23645:1;23638:31;23688:4;23685:1;23678:15;23712:4;23709:1;23702:15;23728:422;23817:1;23860:5;23817:1;23874:270;23895:7;23885:8;23882:21;23874:270;;;23954:4;23950:1;23946:6;23942:17;23936:4;23933:27;23930:53;;;23963:18;;:::i;:::-;24013:7;24003:8;23999:22;23996:55;;;24033:16;;;;23996:55;24112:22;;;;24072:15;;;;23874:270;;;23878:3;23728:422;;;;;:::o;24155:806::-;24204:5;24234:8;24224:80;;-1:-1:-1;24275:1:33;24289:5;;24224:80;24323:4;24313:76;;-1:-1:-1;24360:1:33;24374:5;;24313:76;24405:4;24423:1;24418:59;;;;24491:1;24486:130;;;;24398:218;;24418:59;24448:1;24439:10;;24462:5;;;24486:130;24523:3;24513:8;24510:17;24507:43;;;24530:18;;:::i;:::-;-1:-1:-1;;24586:1:33;24572:16;;24601:5;;24398:218;;24700:2;24690:8;24687:16;24681:3;24675:4;24672:13;24668:36;24662:2;24652:8;24649:16;24644:2;24638:4;24635:12;24631:35;24628:77;24625:159;;;-1:-1:-1;24737:19:33;;;24769:5;;24625:159;24816:34;24841:8;24835:4;24816:34;:::i;:::-;24886:6;24882:1;24878:6;24874:19;24865:7;24862:32;24859:58;;;24897:18;;:::i;:::-;24935:20;;24155:806;-1:-1:-1;;;24155:806:33:o;24966:140::-;25024:5;25053:47;25094:4;25084:8;25080:19;25074:4;25053:47;:::i;25111:168::-;25151:7;25217:1;25213;25209:6;25205:14;25202:1;25199:21;25194:1;25187:9;25180:17;25176:45;25173:71;;;25224:18;;:::i;:::-;-1:-1:-1;25264:9:33;;25111:168::o;25924:408::-;26126:2;26108:21;;;26165:2;26145:18;;;26138:30;26204:34;26199:2;26184:18;;26177:62;-1:-1:-1;;;26270:2:33;26255:18;;26248:42;26322:3;26307:19;;25924:408::o;26337:::-;26539:2;26521:21;;;26578:2;26558:18;;;26551:30;26617:34;26612:2;26597:18;;26590:62;-1:-1:-1;;;26683:2:33;26668:18;;26661:42;26735:3;26720:19;;26337:408::o;26750:128::-;26790:3;26821:1;26817:6;26814:1;26811:13;26808:39;;;26827:18;;:::i;:::-;-1:-1:-1;26863:9:33;;26750:128::o;27308:418::-;27510:2;27492:21;;;27549:2;27529:18;;;27522:30;27588:34;27583:2;27568:18;;27561:62;-1:-1:-1;;;27654:2:33;27639:18;;27632:52;27716:3;27701:19;;27308:418::o;27731:353::-;27933:2;27915:21;;;27972:2;27952:18;;;27945:30;28011:31;28006:2;27991:18;;27984:59;28075:2;28060:18;;27731:353::o;28089:291::-;28266:6;28255:9;28248:25;28309:2;28304;28293:9;28289:18;28282:30;28229:4;28329:45;28370:2;28359:9;28355:18;28347:6;28329:45;:::i;31460:407::-;31662:2;31644:21;;;31701:2;31681:18;;;31674:30;31740:34;31735:2;31720:18;;31713:62;-1:-1:-1;;;31806:2:33;31791:18;;31784:41;31857:3;31842:19;;31460:407::o;34461:184::-;34531:6;34584:2;34572:9;34563:7;34559:23;34555:32;34552:52;;;34600:1;34597;34590:12;34552:52;-1:-1:-1;34623:16:33;;34461:184;-1:-1:-1;34461:184:33:o;42773:407::-;42975:2;42957:21;;;43014:2;42994:18;;;42987:30;43053:34;43048:2;43033:18;;43026:62;-1:-1:-1;;;43119:2:33;43104:18;;43097:41;43170:3;43155:19;;42773:407::o;43545:125::-;43585:4;43613:1;43610;43607:8;43604:34;;;43618:18;;:::i;:::-;-1:-1:-1;43655:9:33;;43545:125::o;44431:217::-;44471:1;44497;44487:132;;44541:10;44536:3;44532:20;44529:1;44522:31;44576:4;44573:1;44566:15;44604:4;44601:1;44594:15;44487:132;-1:-1:-1;44633:9:33;;44431:217::o;45484:786::-;-1:-1:-1;;;45890:3:33;45883:38;45865:3;45950:6;45944:13;45966:62;46021:6;46016:2;46011:3;46007:12;46000:4;45992:6;45988:17;45966:62;:::i;:::-;-1:-1:-1;;;46087:2:33;46047:16;;;46079:11;;;46072:40;46137:13;;46159:63;46137:13;46208:2;46200:11;;46193:4;46181:17;;46159:63;:::i;:::-;46242:17;46261:2;46238:26;;45484:786;-1:-1:-1;;;;45484:786:33:o;47877:127::-;47938:10;47933:3;47929:20;47926:1;47919:31;47969:4;47966:1;47959:15;47993:4;47990:1;47983:15;51616:136;51655:3;51683:5;51673:39;;51692:18;;:::i;:::-;-1:-1:-1;;;51728:18:33;;51616:136::o;52118:127::-;52179:10;52174:3;52170:20;52167:1;52160:31;52210:4;52207:1;52200:15;52234:4;52231:1;52224:15;52657:274;52786:3;52824:6;52818:13;52840:53;52886:6;52881:3;52874:4;52866:6;52862:17;52840:53;:::i;:::-;52909:16;;;;;52657:274;-1:-1:-1;;52657:274:33:o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","GOVERN_ROLE()":"38b7f446","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","burnStake(address,uint256)":"9c70287c","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","deleteVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),string)":"716f4d90","disputeVCByGovern((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),(string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))":"2a401e81","expiredVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))":"888bb7b5","feePercentage()":"a001ecdd","feesAvailableForWithdraw()":"de5785d5","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getUuid((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))":"bcd68993","getVCStatus((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))":"c0d506d6","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","initialize(string,string,string)":"a6487c53","isTrustedForwarder(address)":"572b6c05","maxPriceToIssue()":"a775aabd","maxStakeToIssue()":"07a0d798","minBalanceToIssue()":"af4e720d","minBalanceToReceive()":"07a77292","minBalanceToTransfer()":"e5a2b28e","minPriceToIssue()":"ee2b1b4d","minStakeToIssue()":"de9d2b1c","mint(address,uint256)":"40c10f19","name()":"06fdde03","pause()":"8456cb59","paused()":"5c975abb","payments(address)":"e2982c21","proxiableUUID()":"52d1902d","registerVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),bytes)":"dec9cafe","registry(uint256)":"5893253c","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","revokeVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),string)":"ca2a8cfc","stakeOf(address)":"42623360","supportsInterface(bytes4)":"01ffc9a7","suspendVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),string)":"ce556f9d","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","trustedForwarder()":"7da0a877","unpause()":"3f4ba83a","updateParameters(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)":"8993a3e5","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","validateSignedData(address,bytes32,bytes)":"b25dd4fc","withdrawFees(address,uint256)":"ad3b1b47","withdrawPayments(address)":"31b3eb94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uuid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"Deleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uuid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputedBy\",\"type\":\"uint256\"}],\"name\":\"Disputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uuid\",\"type\":\"uint256\"}],\"name\":\"Expired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uuid\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"vc\",\"type\":\"tuple\"}],\"name\":\"Issued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uuid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uuid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"Suspended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Updated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"name\":\"burnStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"vc\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"deleteVC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"vc\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"disputeVC\",\"type\":\"tuple\"}],\"name\":\"disputeVCByGovern\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"vc\",\"type\":\"tuple\"}],\"name\":\"expiredVC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesAvailableForWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"vc\",\"type\":\"tuple\"}],\"name\":\"getUuid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"vc\",\"type\":\"tuple\"}],\"name\":\"getVCStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPriceToIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStakeToIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBalanceToIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBalanceToReceive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBalanceToTransfer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPriceToIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStakeToIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"vc\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"proofValue\",\"type\":\"bytes\"}],\"name\":\"registerVC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"enum KRBTokenV01.Status\",\"name\":\"credentialStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"disputedBy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"vc\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeVC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"stakeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"_context\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"internalType\":\"struct VCTypesV01.Issuer\",\"name\":\"issuer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSchema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encrypted\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"trust\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbf\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"internalType\":\"struct VCTypesV01.CredentialSubject\",\"name\":\"credentialSubject\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.CredentialSchema\",\"name\":\"credentialSchema\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"issuanceDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expirationDate\",\"type\":\"string\"}],\"internalType\":\"struct VCTypesV01.VerifiableCredential\",\"name\":\"vc\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"suspendVC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinBalanceToTransfer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMinBalanceToReceive\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMinBalanceToIssue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMinPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMaxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMinStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMaxStake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newTrustedForwarder\",\"type\":\"address\"}],\"name\":\"updateParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"structHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignedData\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Updated()\":{\"details\":\"For config updates\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"solhint-disable-next-line func-name-mixedcase\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"burnStake(address,uint256)\":{\"params\":{\"issuer\":\"The issuer address\",\"stake\":\"The KRB stake to burn - emits Updated(\\\"minBalanceToReceive\\\") Requirements: - the caller must have the `GOVERN_ROLE`.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deleteVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),string)\":{\"params\":{\"reason\":\"Reason for deleting Requirements: -  sender must be the credentialSubject address\",\"vc\":\"The verifiable Credential\"}},\"disputeVCByGovern((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),(string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))\":{\"params\":{\"disputeVC\":\"Dispute Credential Requirements: -  sender must be the DAO Govern address\",\"vc\":\"The verifiable Credential\"}},\"expiredVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))\":{\"params\":{\"vc\":\"The verifiable Credential\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getUuid((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))\":{\"params\":{\"vc\":\"Verifiable Credential\"}},\"getVCStatus((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))\":{\"params\":{\"vc\":\"The verifiable Credential\"},\"returns\":{\"_0\":\"status Verifiable credential Status: None, Issued, Disputed, Revoked, Suspended, Expired\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"payments(address)\":{\"details\":\"Returns the payments owed to an address.\",\"params\":{\"dest\":\"The creditor's address.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"registerVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),bytes)\":{\"details\":\"Calculates and distributes the ETH fee as percentage of price Formula:  fee = price * feePercentage %\",\"params\":{\"proofValue\":\"EIP712-VC proofValue Requirements: - proofValue must be the Issuer's signature of the VC - sender must be the credentialSubject address - msg.value must be greater than minPriceToIssue\",\"vc\":\"The verifiable Credential\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"revokeVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),string)\":{\"params\":{\"reason\":\"Reason for revoking Requirements: -  sender must be the issuer address\",\"vc\":\"The verifiable Credential\"}},\"stakeOf(address)\":{\"params\":{\"issuer\":\"The issuer to retrieve the stake for.\"},\"returns\":{\"_0\":\"stake The amount of KRB staked.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"suspendVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),string)\":{\"params\":{\"reason\":\"Reason for suspending Requirements: -  sender must be the issuer address\",\"vc\":\"The verifiable Credential\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"updateParameters(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)\":{\"params\":{\"newFeePercentage\":\"new protocol fee percentage (0 -100)\",\"newMaxPrice\":\"New max price to Issue\",\"newMinBalanceToIssue\":\"New min Balance to Issue\",\"newMinBalanceToReceive\":\"The new min balance to Receive.\",\"newMinBalanceToTransfer\":\"The new min baance to Transfer.\",\"newMinPrice\":\"New min price to Issue\",\"newMinStake\":\"new min stake to issue\",\"newTrustedForwarder\":\"new trustedForwarder - emits Updated() Requirements: - the caller must have the `GOVERN_ROLE`. - newMaxStake > newMinStake\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"validateSignedData(address,bytes32,bytes)\":{\"details\":\"Checks if the provided address signed a hashed message (`hash`) with `signature`. See  {EIP-712} and {EIP-3009}.\"},\"withdrawPayments(address)\":{\"details\":\"Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"Whose payments will be withdrawn. Causes the `escrow` to emit a {Withdrawn} event.\"}}},\"stateVariables\":{\"registry\":{\"details\":\"Mapping of rewarded VCTypesV01.VerifiableCredentials. Key is a hash of the vc data\"},\"stakes\":{\"details\":\"The stakes for each Issuer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnStake(address,uint256)\":{\"notice\":\"Destroys `_stake` token stake from `issuer`\"},\"deleteVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),string)\":{\"notice\":\"Delete a Verifiable Credential\"},\"disputeVCByGovern((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),(string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))\":{\"notice\":\"Called by DAO Govern arbitration to resolve a dispute\"},\"expiredVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))\":{\"notice\":\"Mark a Verifiable Credential as Expired\"},\"feePercentage()\":{\"notice\":\"Fee to Issue Verifiable Credentials\"},\"feesAvailableForWithdraw()\":{\"notice\":\"Total fees collected by the contract\"},\"getUuid((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))\":{\"notice\":\"Validates that the `VerifiableCredential` conforms to the VCTypes.\"},\"getVCStatus((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string))\":{\"notice\":\"Get the status of a Verifiable Credential\"},\"isTrustedForwarder(address)\":{\"notice\":\"ERC2771 Meta-Transactions support.\"},\"maxPriceToIssue()\":{\"notice\":\"Max Value to Issue Verifiable Credentials\"},\"maxStakeToIssue()\":{\"notice\":\"Max Stake to Issue Verifiable Credentials\"},\"minBalanceToIssue()\":{\"notice\":\"Min Balance to Issue Verifiable Credentials\"},\"minBalanceToReceive()\":{\"notice\":\"Min Balance to Receive\"},\"minBalanceToTransfer()\":{\"notice\":\"Min Balance to Transfer\"},\"minPriceToIssue()\":{\"notice\":\"Min Value to Issue Verifiable Credentials\"},\"minStakeToIssue()\":{\"notice\":\"Min Stake to Issue Verifiable Credentials\"},\"mint(address,uint256)\":{\"notice\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `GOVERN_ROLE`.\"},\"pause()\":{\"notice\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `GOVERN_ROLE`.\"},\"registerVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),bytes)\":{\"notice\":\"Register a Verifiable Credential\"},\"revokeVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),string)\":{\"notice\":\"Revoke a Verifiable Credential\"},\"stakeOf(address)\":{\"notice\":\"A method to retrieve the stake for an issuer.\"},\"suspendVC((string,string,string,(string,address),(string,address,string,string,string,string,uint8,uint256,uint256,uint256,uint256),(string,string),string,string),string)\":{\"notice\":\"Suspend a Verifiable Credential\"},\"trustedForwarder()\":{\"notice\":\"ERC2771\"},\"unpause()\":{\"notice\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `GOVERN_ROLE`.\"},\"updateParameters(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Updates all Protocol Parameters\"},\"withdrawFees(address,uint256)\":{\"notice\":\"Withdraw fees collected by the contract. Requirements: - Only the DAO govern can call this.\"}},\"notice\":\"{ERC20} token with OpenZeppelin Extensions: - Initializable, - ERC2771ContextUpgradeable, - UUPSUpgradeable - AccessControlEnumerableUpgradeable, - ERC20BurnableUpgradeable, - ERC20PausableUpgradeable, - EIP712Upgradeable, - PullPaymentUpgradeable, - ReentrancyGuardUpgradeable This contract uses {AccessControlEnumerable} to lock permissioned functions using the different roles: The account that deploys the contract will be granted the govern role, as well as the default admin role, which will let it grant govern roles to other accounts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KRBTokenV01.sol\":\"KRBTokenV01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xd25b5dd88ee621810335aa7272faeeb2a4c4151b19ce4ac0d7ce75a347bb53b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://317cba73373e48d3c44c24d7ef27d72941f5bf869d6c8ab5490ca60e93af3511\",\"dweb:/ipfs/QmX5cK7qaYbyK4PKKKZqpBq45YHcaP36tmnnaj1E5sJSQo\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf7db9b91442fb9426403fda8893b60444066d9682f2913e14a96f12196afb96e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2bd84e37357b89a4f19dee68a5b8667083d4b85681b36bf7eda2d38d8c162a6\",\"dweb:/ipfs/QmULmgN6yaoax1wA66SffeJCkZijDSugu4GGD8DSWLLxQN\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol\":{\"keccak256\":\"0xd2b848e5f1d5a79db9af3c97eb2da38cb5aea06579373824d55319946031dc20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0141d327d20ffabe1c59acbf774df33ed67c7c817e19eae806c31d078ce0b2cf\",\"dweb:/ipfs/QmWbhNdYQWVvcfTA48UTKPZmvJPUBktaNTUuMehaCpSAdu\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xbf46574f5b3e5ae4d823b06fef6fe20ed32a4c4cd5bb9cd07d1712da624321fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://766b8ea4848c5149e79f0e24fe0c0ff949acaeb029973675d3839070fea95de6\",\"dweb:/ipfs/QmSuhrQn1kMfHxU85GS11JY1WzaWR27fq1MhduRnTF5Wwo\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x49dc49ecb70251b262769f4cd54fea0e6714d84e30b2737885c76194c285b452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://151164eab6481d161ba4e4908a9810faebfe784f5f4eeffb1219a6e7865384b9\",\"dweb:/ipfs/QmesjesP7AJFkZHx1XXkdTvGgfzYu5AkC4CTsGFjNYV7XZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x5bba367c6c5b9bc3ffb2a87f6aa7437955f0697ab8fcd8e38d2a4985be6469fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5cebfffc457ba7de28368a4e36d0543d0ba6247ab4deff8cc6e04654aacf089\",\"dweb:/ipfs/Qmc5rymHyZeMhnJyCf4egyX2nSJwPzFYAgUtcWea4wrQrC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x992b28e9cd85d3614bf2f0ad8225164128abdf44fb533db8587e8a64e0d9883c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358ad71c829bd135ac3cb278b66ce7c54647383aaa7285fcca3cd1f4f316e939\",\"dweb:/ipfs/QmWs8i1stQpyv9eX8XafczmPRLVQhuhWncYYgiz6TKs2bg\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x23aaa3522a84e9bf929dc3ecc4a7c861c747512be21587aca830470698989856\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58ec19cf3f6a0e48fe307466068a256449537ec9c650e2462f4ebf8904f7b23c\",\"dweb:/ipfs/QmaWPF1zvDawipcvN6KcirE618FW9RB7wVZeX1WUdvqbYW\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x495395a87eff6e15ae08633a506eb1be2117f22ddb8eac0f8240c48685b65e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cb0940ec9ccbe8a54378e9d6ad917124794010b050d098cc4a020591c2ae29e\",\"dweb:/ipfs/QmV1qtda2t8ATnjQ5dtgApahEvP6ZB3ZWZKpxQa6dFzu2x\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0x01743bcd4d9a084f2bd1c3ed4338888316e482439a68a4cb1a7a3cbe113d188b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b06d5b0f5b61d4227ddc047fb8fd9364797ee615bde270a3cae8f32556c7e076\",\"dweb:/ipfs/Qmcgt77Wzwg1E8L9cRhA53bCGEjWeNwijc227ntLSUi6vo\"]},\"@openzeppelin/contracts-upgradeable/utils/escrow/EscrowUpgradeable.sol\":{\"keccak256\":\"0xf967fc54daea1917caeff7db4f4b888009d25308b761b304af8a69fb3817f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f97c27dd0a7193923ac446d4c0b23df3350eaa0f087cab7f90882a22a66aee23\",\"dweb:/ipfs/QmSkXvjCnLcUHKAZ9DjbtHkVxyT9jqU21JtEMEqL1FRv9Y\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x3753924aa8f8ef663cbb28d1f214b4ed0206a1832a98cb8f3a4938a71e76f602\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d2a1934171617f97273f1a0a3640363c62861e1de1ac9ce1ab2a9d5b8ca93a\",\"dweb:/ipfs/QmXwTYK7Vu5DAJr2VhA3RYxEvC8ujx9oQPMmccpTxPBb63\"]},\"contracts/KRBTokenV01.sol\":{\"keccak256\":\"0x21e946c882616272c4432c8d52467dc2fd711b5f4c087c3f4068da0750caa64b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5226768ec0d386167513fc7b4930e10c62ccfb5d4ff80debc3f3ae18c2f23e\",\"dweb:/ipfs/QmWrsvoYU2CSsFkhXRCNdeH8u13HQUuQ5J7kJbDa6SkEZt\"]},\"contracts/VCTypesV01.sol\":{\"keccak256\":\"0x069867f294e741e6b340e9a6414cc7b3aaf7be1607396d78c6748a8ce3ae8feb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a27eaca06c612197cff9bb43261e6f7ac0f759da707186f1f187e2f874815658\",\"dweb:/ipfs/QmUtx3LQRXjjQoLy6648vhs1wtjDov5KmUQyYuToNPxyvD\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1106,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1109,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2855,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3776,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":184,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)179_storage)"},{"astId":479,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":33,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_roleMembers","offset":0,"slot":"151","type":"t_mapping(t_bytes32,t_struct(AddressSet)5292_storage)"},{"astId":143,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":1710,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_balances","offset":0,"slot":"201","type":"t_mapping(t_address,t_uint256)"},{"astId":1716,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_allowances","offset":0,"slot":"202","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1718,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_totalSupply","offset":0,"slot":"203","type":"t_uint256"},{"astId":1720,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_name","offset":0,"slot":"204","type":"t_string_storage"},{"astId":1722,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_symbol","offset":0,"slot":"205","type":"t_string_storage"},{"astId":2302,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"206","type":"t_array(t_uint256)45_storage"},{"astId":2444,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"251","type":"t_array(t_uint256)50_storage"},{"astId":1425,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_paused","offset":0,"slot":"301","type":"t_bool"},{"astId":1530,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"302","type":"t_array(t_uint256)49_storage"},{"astId":2504,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"351","type":"t_array(t_uint256)50_storage"},{"astId":3461,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_HASHED_NAME","offset":0,"slot":"401","type":"t_bytes32"},{"astId":3463,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_HASHED_VERSION","offset":0,"slot":"402","type":"t_bytes32"},{"astId":3601,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"403","type":"t_array(t_uint256)50_storage"},{"astId":1088,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"453","type":"t_array(t_uint256)50_storage"},{"astId":1403,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"503","type":"t_array(t_uint256)50_storage"},{"astId":1541,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_escrow","offset":0,"slot":"553","type":"t_contract(EscrowUpgradeable)3733"},{"astId":1617,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"554","type":"t_array(t_uint256)50_storage"},{"astId":1632,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_status","offset":0,"slot":"604","type":"t_uint256"},{"astId":1690,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"605","type":"t_array(t_uint256)49_storage"},{"astId":5624,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"trustedForwarder","offset":0,"slot":"654","type":"t_address"},{"astId":5627,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"minBalanceToTransfer","offset":0,"slot":"655","type":"t_uint256"},{"astId":5630,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"minBalanceToReceive","offset":0,"slot":"656","type":"t_uint256"},{"astId":5633,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"minBalanceToIssue","offset":0,"slot":"657","type":"t_uint256"},{"astId":5636,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"minPriceToIssue","offset":0,"slot":"658","type":"t_uint256"},{"astId":5639,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"maxPriceToIssue","offset":0,"slot":"659","type":"t_uint256"},{"astId":5642,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"minStakeToIssue","offset":0,"slot":"660","type":"t_uint256"},{"astId":5645,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"maxStakeToIssue","offset":0,"slot":"661","type":"t_uint256"},{"astId":5648,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"feePercentage","offset":0,"slot":"662","type":"t_uint256"},{"astId":5651,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"feesAvailableForWithdraw","offset":0,"slot":"663","type":"t_uint256"},{"astId":5673,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"registry","offset":0,"slot":"664","type":"t_mapping(t_uint256,t_struct(VerifiableData)5667_storage)"},{"astId":5678,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"stakes","offset":0,"slot":"665","type":"t_mapping(t_address,t_uint256)"},{"astId":7240,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"__gap","offset":0,"slot":"666","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(EscrowUpgradeable)3733":{"encoding":"inplace","label":"contract EscrowUpgradeable","numberOfBytes":"20"},"t_enum(Status)5661":{"encoding":"inplace","label":"enum KRBTokenV01.Status","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(AddressSet)5292_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)","numberOfBytes":"32","value":"t_struct(AddressSet)5292_storage"},"t_mapping(t_bytes32,t_struct(RoleData)179_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)179_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(VerifiableData)5667_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct KRBTokenV01.VerifiableData)","numberOfBytes":"32","value":"t_struct(VerifiableData)5667_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AddressSet)5292_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.AddressSet","members":[{"astId":5291,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)4977_storage"}],"numberOfBytes":"64"},"t_struct(RoleData)179_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":176,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":178,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(Set)4977_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Set","members":[{"astId":4972,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":4976,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(VerifiableData)5667_storage":{"encoding":"inplace","label":"struct KRBTokenV01.VerifiableData","members":[{"astId":5664,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"credentialStatus","offset":0,"slot":"0","type":"t_enum(Status)5661"},{"astId":5666,"contract":"contracts/KRBTokenV01.sol:KRBTokenV01","label":"disputedBy","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/VCTypesV01.sol":{"VCTypesV01":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204490fd1290f720602ea4b1fc60fcdae490190319aa5148e322fe7a1a8f0bd15664736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY SWAP1 REVERT SLT SWAP1 0xF7 KECCAK256 PUSH1 0x2E LOG4 0xB1 0xFC PUSH1 0xFC 0xDA 0xE4 SWAP1 NOT SUB NOT 0xAA MLOAD BASEFEE 0xE3 0x22 INVALID PUSH27 0x1A8F0BD15664736F6C634300080C00330000000000000000000000 ","sourceMap":"259:6682:32:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;259:6682:32;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204490fd1290f720602ea4b1fc60fcdae490190319aa5148e322fe7a1a8f0bd15664736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY SWAP1 REVERT SLT SWAP1 0xF7 KECCAK256 PUSH1 0x2E LOG4 0xB1 0xFC PUSH1 0xFC 0xDA 0xE4 SWAP1 NOT SUB NOT 0xAA MLOAD BASEFEE 0xE3 0x22 INVALID PUSH27 0x1A8F0BD15664736F6C634300080C00330000000000000000000000 ","sourceMap":"259:6682:32:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VCTypesV01.sol\":\"VCTypesV01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]},\"contracts/VCTypesV01.sol\":{\"keccak256\":\"0x069867f294e741e6b340e9a6414cc7b3aaf7be1607396d78c6748a8ce3ae8feb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a27eaca06c612197cff9bb43261e6f7ac0f759da707186f1f187e2f874815658\",\"dweb:/ipfs/QmUtx3LQRXjjQoLy6648vhs1wtjDov5KmUQyYuToNPxyvD\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}