{
  "_format": "hh-sol-artifact-1",
  "contractName": "IKRBToken",
  "sourceName": "contracts/KRBCredentialNFT.sol",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "_context",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_type",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "id",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "ethereumAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct VCTypesV01.Issuer",
              "name": "issuer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "id",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "ethereumAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_type",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "typeSchema",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "encrypted",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "trust",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbf",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "exp",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VCTypesV01.CredentialSubject",
              "name": "credentialSubject",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "id",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_type",
                  "type": "string"
                }
              ],
              "internalType": "struct VCTypesV01.CredentialSchema",
              "name": "credentialSchema",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "issuanceDate",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "expirationDate",
              "type": "string"
            }
          ],
          "internalType": "struct VCTypesV01.VerifiableCredential",
          "name": "vc",
          "type": "tuple"
        }
      ],
      "name": "getVCStatus",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
